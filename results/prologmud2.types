"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Call prolog"
"Start formatting of edn"
"Add built-ins"
"Call prolog"
"Start formatting of edn"
"Start Pre Process Single"
"2019-05-12T09:11:49.209: Step 0"
"2019-05-12T09:56:35.507: Step 1"
"2019-05-12T10:40:10.781: Step 2"
"2019-05-12T11:23:06.143: Step 3"
"2019-05-12T12:06:07.336: Step 4"
{{:name "_420", :record-type :var} {:record-type :any}, {:name "XDRS", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "_422", :record-type :var} {:record-type :any}}
{{:name "Tuples", :record-type :var} {:record-type :any}, {:name "_542", :record-type :var} {:record-type :any}, {:name "_Index", :record-type :var} {:record-type :any}, {:name "XDRS", :record-type :var} {:functor "xdrs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}, {:name "_Id", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :ground}}
{{:name "_Index", :record-type :var} {:record-type :any}, {:name "XDRS", :record-type :var} {:record-type :any}, {:name "Id", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "_420", :record-type :var} {:record-type :any}, {:name "XDRS", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "_422", :record-type :var} {:record-type :any}}
{{:name "Tags", :record-type :var} {:record-type :any}, {:name "XDRS", :record-type :var} {:functor "xdrs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Id", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :ground}, {:name "DRS", :record-type :var} {:record-type :any}}
{{:name "Tags", :record-type :var} {:record-type :any}, {:name "XDRS", :record-type :var} {:functor "xdrs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Id", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :ground}, {:name "DRS", :record-type :var} {:record-type :any}}
{{:name "_Index", :record-type :var} {:record-type :any}, {:name "_Tags", :record-type :var} {:record-type :any}, {:name "XDRS", :record-type :var} {:functor "xdrs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}, {:name "_Id", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :ground}, {:name "DRS", :record-type :var} {:record-type :any}}
{{:name "Tags", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "XDRS", :record-type :var} {:functor "xdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}, {:name "Index", :record-type :var} {:record-type :any}, {:name "TAC", :record-type :var} {:record-type :any}, {:name "Id", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "_Index", :record-type :var} {:record-type :any}, {:name "XDRS", :record-type :var} {:record-type :any}, {:name "Id", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "_420", :record-type :var} {:record-type :any}, {:name "_542", :record-type :var} {:record-type :any}, {:name "AMR", :record-type :var} {:record-type :any}, {:name "XDRS", :record-type :var} {:functor "xdrs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}, {:name "Stream", :record-type :var} {:record-type :ground}, {:name "_422", :record-type :var} {:record-type :any}}
{{:name "FOL", :record-type :var} {:record-type :any}, {:name "_738", :record-type :var} {:record-type :any}, {:name "_Tags", :record-type :var} {:record-type :any}, {:name "XDRS", :record-type :var} {:functor "xdrs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Id", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :ground}}
{{:name "_420", :record-type :var} {:record-type :any}, {:name "P", :record-type :var} {:record-type :any}}
{{:name "P3", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B2", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "P2", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :any}, {:name "P4", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_410", :record-type :var} {:record-type :any}, {:name "P2", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :any}, {:name "Cond", :record-type :var} {:record-type :any}}
{{:name "P3", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P2", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}}, :record-type :one-of}}
{{:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P2", :record-type :var} {:record-type :any}, {:name "_458", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:record-type :any}, {:name "_454", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :any}, {:name "_456", :record-type :var} {:record-type :any}, {:name "_452", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P2", :record-type :var} {:record-type :any}, {:name "_458", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:record-type :any}, {:name "_454", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :any}, {:name "_456", :record-type :var} {:record-type :any}, {:name "_452", :record-type :var} {:record-type :any}}
{{:name "P3", :record-type :var} {:record-type :any}, {:name "_428", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P2", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}}, :record-type :one-of}}
{{:name "_428", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P2", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:record-type :any}, {:name "_430", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :any}}
{{:name "P3", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P2", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}}, :record-type :one-of}}
{{:name "Sym", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :any}, {:name "Title", :record-type :var} {:record-type :any}, {:name "P2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P3", :record-type :var} {:record-type :any}, {:name "_456", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Ps", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_628", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "_510", :record-type :var} {:record-type :any}, {:name "_608", :record-type :var} {:record-type :any}, {:name "_558", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "_606", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "_610", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P2", :record-type :var} {:record-type :any}, {:name "_458", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:record-type :any}, {:name "_454", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :any}, {:name "_456", :record-type :var} {:record-type :any}, {:name "_452", :record-type :var} {:record-type :any}}
{{:name "P3", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B2", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "P2", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :any}, {:name "P4", :record-type :var} {:record-type :any}}
{{:name "P3", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P2", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}}, :record-type :one-of}}
{{:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P2", :record-type :var} {:record-type :any}, {:name "_458", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:record-type :any}, {:name "_454", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :any}, {:name "_456", :record-type :var} {:record-type :any}, {:name "_452", :record-type :var} {:record-type :any}}
{{:name "_444", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P2", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:record-type :any}, {:name "_440", :record-type :var} {:record-type :any}, {:name "_442", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "P2", :record-type :var} {:record-type :any}, {:name "_458", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Ps", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Var", :record-type :var} {:record-type :any}, {:name "_456", :record-type :var} {:record-type :any}}
{{:name "_428", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P2", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:record-type :any}, {:name "_430", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :any}}
{{:name "_452", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "P4", :record-type :var} {:record-type :any}, {:name "P2", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:record-type :any}, {:name "P3", :record-type :var} {:record-type :any}, {:name "_456", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "In", :record-type :var} {:record-type :ground}}
{{:name "Atom", :record-type :var} {:record-type :any}, {:name "In", :record-type :var} {:record-type :any}, {:name "CodesL", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_676", :record-type :var} {:record-type :nonvar}, {:name "Ready", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Atom", :record-type :var} {:record-type :any}, {:name "In", :record-type :var} {:record-type :any}, {:name "CodesL", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Help", :record-type :var} {:type {:record-type :atom}, :record-type :list}}
{{:name "_4096", :record-type :var} {:record-type :any}, {:name "X2", :record-type :var} {:record-type :any}, {:name "_4292", :record-type :var} {:record-type :any}, {:name "E2", :record-type :var} {:record-type :any}, {:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Role1", :record-type :var} {:record-type :any}, {:name "Role2", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:record-type :any}, {:name "_4322", :record-type :var} {:record-type :any}, {:name "_4126", :record-type :var} {:record-type :any}, {:name "E1", :record-type :var} {:record-type :any}}
{{:name "_504", :record-type :var} {:record-type :any}, {:name "_730", :record-type :var} {:record-type :any}, {:name "X2", :record-type :var} {:record-type :any}, {:name "_700", :record-type :var} {:record-type :any}, {:name "E2", :record-type :var} {:record-type :any}, {:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Role1", :record-type :var} {:record-type :any}, {:name "Role2", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:record-type :any}, {:name "E1", :record-type :var} {:record-type :any}, {:name "_534", :record-type :var} {:record-type :any}}
{{:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_440", :record-type :var} {:record-type :any}, {:name "_470", :record-type :var} {:record-type :any}, {:name "Cond", :record-type :var} {:arglist #{{:functor "pos", :arglist ({:arglist #{{:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sub", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}), :record-type :compound} {:functor "prop", :arglist ({:record-type :any} {:arglist #{{:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sub", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}), :record-type :compound} {:functor "nec", :arglist ({:arglist #{{:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sub", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}), :record-type :compound} {:functor "imp", :arglist ({:record-type :any} {:arglist #{{:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sub", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}), :record-type :compound} {:functor "not", :arglist ({:arglist #{{:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sub", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}), :record-type :compound} {:functor "duplex", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:arglist #{{:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sub", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}), :record-type :compound} {:functor "or", :arglist ({:record-type :any} {:arglist #{{:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sub", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}), :record-type :compound} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "or", :arglist ({:arglist #{{:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sub", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of} {:record-type :any}), :record-type :compound} {:functor "not", :arglist ({:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "eq", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "imp", :arglist ({:arglist #{{:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sub", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of} {:record-type :any}), :record-type :compound} {:functor "role", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "duplex", :arglist ({:record-type :any} {:arglist #{{:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sub", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}}
{{:name "_504", :record-type :var} {:record-type :any}, {:name "_730", :record-type :var} {:record-type :any}, {:name "X2", :record-type :var} {:record-type :any}, {:name "_700", :record-type :var} {:record-type :any}, {:name "E2", :record-type :var} {:record-type :any}, {:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Role1", :record-type :var} {:record-type :any}, {:name "Role2", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:record-type :any}, {:name "E1", :record-type :var} {:record-type :any}, {:name "_534", :record-type :var} {:record-type :any}}
{{:name "_408", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}}
{{:name "_450", :record-type :var} {:record-type :any}, {:name "_396", :record-type :var} {:record-type :any}, {:name "_394", :record-type :var} {:record-type :any}, {:name "_452", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "_404", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "_404", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "_402", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "_408", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}, {:name "_458", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "_408", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}, {:name "_458", :record-type :var} {:record-type :any}}
{{:name "_402", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "_408", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:arglist #{{:functor "=<", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "is", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor ">=", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :atom} {:functor "<", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "=", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor ">", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "_408", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}}
{{:name "Head", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "OldVariables", :record-type :var} {:record-type :any}, {:name "NewVariables", :record-type :var} {:record-type :any}}
{}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Y", :record-type :var} {:record-type :number}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{}
{{:name "Tok", :record-type :var} {:record-type :any}, {:name "_520", :record-type :var} {:record-type :any}, {:name "_510", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "_524", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_492", :record-type :var} {:record-type :any}, {:name "Tok2", :record-type :var} {:record-type :any}, {:name "_482", :record-type :var} {:record-type :any}}
{{:name "_400", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tok1", :record-type :var} {:record-type :any}}
{{:name "_520", :record-type :var} {:record-type :any}, {:name "_510", :record-type :var} {:record-type :any}, {:name "_400", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tok1", :record-type :var} {:record-type :any}, {:name "Tok2", :record-type :var} {:record-type :any}, {:name "_552", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "X", :record-type :var} {:arglist #{{:functor nil, :arglist (), :record-type :compound} {:record-type :atom}}, :record-type :one-of}, {:name "Code", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "_408", :record-type :var} {:record-type :any}}
{{:name "P", :record-type :var} {:record-type :any}, {:name "N2", :record-type :var} {:record-type :any}, {:name "W", :record-type :var} {:record-type :any}, {:name "_902", :record-type :var} {:record-type :any}, {:name "_744", :record-type :var} {:record-type :any}, {:name "_752", :record-type :var} {:record-type :any}, {:name "_900", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tuples", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_840", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_906", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :any}}
{{:name "P", :record-type :var} {:record-type :any}, {:name "_1110", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "_878", :record-type :var} {:record-type :any}, {:name "N2", :record-type :var} {:record-type :any}, {:name "W", :record-type :var} {:record-type :any}, {:name "R2", :record-type :var} {:record-type :any}, {:name "_1106", :record-type :var} {:record-type :any}, {:name "R1", :record-type :var} {:record-type :any}, {:name "_744", :record-type :var} {:record-type :any}, {:name "_752", :record-type :var} {:record-type :any}, {:name "_996", :record-type :var} {:record-type :any}, {:name "_870", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tuples", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_1104", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_1044", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Z", :record-type :var} {:record-type :any}, {:name "_1004", :record-type :var} {:record-type :any}}
{{:name "P", :record-type :var} {:record-type :any}, {:name "_1110", :record-type :var} {:record-type :any}, {:name "_878", :record-type :var} {:record-type :any}, {:name "N2", :record-type :var} {:record-type :any}, {:name "W", :record-type :var} {:record-type :any}, {:name "_1106", :record-type :var} {:record-type :any}, {:name "_744", :record-type :var} {:record-type :any}, {:name "_752", :record-type :var} {:record-type :any}, {:name "_996", :record-type :var} {:record-type :any}, {:name "_870", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tuples", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_1104", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_1044", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :any}, {:name "_1004", :record-type :var} {:record-type :any}}
{{:name "P", :record-type :var} {:record-type :any}, {:name "_1028", :record-type :var} {:record-type :any}, {:name "_878", :record-type :var} {:record-type :any}, {:name "N2", :record-type :var} {:record-type :any}, {:name "W", :record-type :var} {:record-type :any}, {:name "_966", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_1026", :record-type :var} {:record-type :any}, {:name "_744", :record-type :var} {:record-type :any}, {:name "_752", :record-type :var} {:record-type :any}, {:name "_1032", :record-type :var} {:record-type :any}, {:name "_870", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tuples", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N1", :record-type :var} {:record-type :any}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tuples", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{}
{}
{{:name "T", :record-type :var} {:record-type :any}}
{{:name "T", :record-type :var} {:record-type :any}}
{}
{{:name "T", :record-type :var} {:record-type :any}}
{{:name "T", :record-type :var} {:record-type :any}}
{}
{{:name "T", :record-type :var} {:record-type :any}}
{}
{{:name "T", :record-type :var} {:record-type :any}}
{}
{{:name "T", :record-type :var} {:record-type :any}}
{{:name "T", :record-type :var} {:record-type :any}}
{{:name "T", :record-type :var} {:record-type :any}}
{}
{{:name "T", :record-type :var} {:record-type :any}}
{}
{{:name "T", :record-type :var} {:record-type :any}}
{}
{{:name "T", :record-type :var} {:record-type :any}}
{}
{{:name "T", :record-type :var} {:record-type :any}}
{{:name "T", :record-type :var} {:record-type :any}}
{{:name "T", :record-type :var} {:record-type :any}}
{}
{}
{}
{{:name "T", :record-type :var} {:record-type :any}}
{}
{{:name "T", :record-type :var} {:record-type :any}}
{{:name "T", :record-type :var} {:record-type :any}}
{{:name "T", :record-type :var} {:record-type :any}}
{{:name "T", :record-type :var} {:record-type :any}}
{{:name "T", :record-type :var} {:record-type :any}}
{}
{}
{{:name "T", :record-type :var} {:record-type :any}}
{}
{}
{{:name "T", :record-type :var} {:record-type :any}}
{{:name "T", :record-type :var} {:record-type :any}}
{}
{{:name "T", :record-type :var} {:record-type :any}}
{}
{}
{{:name "T", :record-type :var} {:record-type :any}}
{}
{}
{}
{{:name "T", :record-type :var} {:record-type :any}}
{{:name "T", :record-type :var} {:record-type :any}}
{}
{{:name "T", :record-type :var} {:record-type :any}}
{{:name "T", :record-type :var} {:record-type :any}}
{{:name "T", :record-type :var} {:record-type :any}}
{{:name "T", :record-type :var} {:record-type :any}}
{{:name "T", :record-type :var} {:record-type :any}}
{{:name "T", :record-type :var} {:record-type :any}}
{{:name "T", :record-type :var} {:record-type :any}}
{{:name "T", :record-type :var} {:record-type :any}}
{}
{{:name "T", :record-type :var} {:record-type :any}}
{{:name "T", :record-type :var} {:record-type :any}}
{{:name "T", :record-type :var} {:record-type :any}}
{}
{{:name "Res2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "H", :record-type :var} {:record-type :any}, {:name "Result", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Res1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "T", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "I", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}}
{{:name "R", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L", :record-type :var} {:record-type :any}, {:name "J", :record-type :var} {:record-type :any}, {:name "P", :record-type :var} {:record-type :any}, {:name "_398", :record-type :var} {:record-type :any}}
{{:name "List", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "_382", :record-type :var} {:record-type :any}}
{{:name "N1", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "X", :record-type :var} {:record-type :number}, {:name "N2", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}}
{{:name "N1", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "X", :record-type :var} {:record-type :number}, {:name "N2", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "Extended", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_6816", :record-type :var} {:record-type :any}, {:name "N2", :record-type :var} {:record-type :any}, {:name "Tuples1", :record-type :var} {:record-type :any}, {:name "Sorted", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "DRS", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sub", :arglist ({:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Ordered", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "K0", :record-type :var} {:record-type :any}, {:name "Tags", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tuples", :record-type :var} {:record-type :any}, {:name "_6990", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :any}, {:name "_6936", :record-type :var} {:record-type :any}, {:name "Tuples2", :record-type :var} {:record-type :any}}
{{:name "H", :record-type :var} {:record-type :any}, {:name "HH", :record-type :var} {:record-type :any}}
{{:name "H", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "H", :record-type :var} {:record-type :any}}
{{:name "Cat", :record-type :var} {:record-type :any}}
{{:name "M", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Base", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Riht", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :number}}
{{:name "XDRS", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "Margin", :record-type :var} {:record-type :atom}}
{{:name "XDRS", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :ground}, {:name "Margin", :record-type :var} {:record-type :atom}}
{{:name "_394", :record-type :var} {:record-type :any}, {:name "_396", :record-type :var} {:record-type :any}}
{{:name "Stream", :record-type :var} {:record-type :ground}}
{{:name "Dynamics", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "SignatureSet", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Signatures", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "SOKB", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "A2", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "A2", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "A2", :record-type :var} {:record-type :any}}
{{:name "_414", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}}
{{:name "I", :record-type :var} {:record-type :any}, {:name "E3", :record-type :var} {:record-type :any}, {:name "_520", :record-type :var} {:record-type :any}, {:name "E2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_524", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "_558", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_522", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "E1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C", :record-type :var} {:record-type :any}, {:name "E1", :record-type :var} {:record-type :any}, {:name "E2", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "E3", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "E1", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "E2", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "E3", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "E1", :record-type :var} {:record-type :any}, {:name "E2", :record-type :var} {:record-type :any}}
{{:name "E3", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "E1", :record-type :var} {:record-type :any}, {:name "E2", :record-type :var} {:record-type :any}, {:name "_486", :record-type :var} {:record-type :any}, {:name "_516", :record-type :var} {:record-type :any}, {:name "DRS", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "E3", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "E1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "E2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_482", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "E3", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "E1", :record-type :var} {:record-type :any}, {:name "E2", :record-type :var} {:record-type :any}, {:name "_486", :record-type :var} {:record-type :any}, {:name "_516", :record-type :var} {:record-type :any}, {:name "DRS", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "B", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}}
{{:name "I", :record-type :var} {:record-type :any}, {:name "E3", :record-type :var} {:record-type :any}, {:name "_520", :record-type :var} {:record-type :any}, {:name "E2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_524", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "_558", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_522", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "E1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "E4", :record-type :var} {:record-type :any}, {:name "_530", :record-type :var} {:record-type :any}, {:name "E3", :record-type :var} {:record-type :any}, {:name "E2", :record-type :var} {:record-type :any}, {:name "DRS2", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "DRS1", :record-type :var} {:record-type :any}, {:name "_500", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "E1", :record-type :var} {:record-type :any}}
{{:name "_412", :record-type :var} {:record-type :any}, {:name "E1", :record-type :var} {:record-type :any}, {:name "E2", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_494", :record-type :var} {:record-type :any}, {:name "E1", :record-type :var} {:record-type :any}, {:name "E2", :record-type :var} {:record-type :any}, {:name "_500", :record-type :var} {:record-type :any}, {:name "_496", :record-type :var} {:record-type :any}, {:name "_530", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "E3", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "E1", :record-type :var} {:record-type :any}, {:name "E2", :record-type :var} {:record-type :any}}
{{:name "E4", :record-type :var} {:record-type :any}, {:name "E3", :record-type :var} {:record-type :any}, {:name "_528", :record-type :var} {:record-type :any}, {:name "E2", :record-type :var} {:record-type :any}, {:name "_518", :record-type :var} {:record-type :any}, {:name "DRS2", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "_558", :record-type :var} {:record-type :any}, {:name "_522", :record-type :var} {:record-type :any}, {:name "DRS1", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "E1", :record-type :var} {:record-type :any}}
{{:name "_520", :record-type :var} {:record-type :any}, {:name "_528", :record-type :var} {:record-type :any}, {:name "E2", :record-type :var} {:record-type :any}, {:name "_524", :record-type :var} {:record-type :any}, {:name "_518", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "_558", :record-type :var} {:record-type :any}, {:name "_522", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "E1", :record-type :var} {:record-type :any}}
{{:name "I", :record-type :var} {:record-type :any}, {:name "E3", :record-type :var} {:record-type :any}, {:name "E2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_508", :record-type :var} {:record-type :any}, {:name "_510", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_544", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "E1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "_430", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}}
{{:name "E3", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "E1", :record-type :var} {:record-type :any}, {:name "E2", :record-type :var} {:record-type :any}, {:name "_486", :record-type :var} {:record-type :any}, {:name "_516", :record-type :var} {:record-type :any}, {:name "DRS", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "E3", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_494", :record-type :var} {:record-type :any}, {:name "E1", :record-type :var} {:record-type :any}, {:name "E2", :record-type :var} {:record-type :any}, {:name "_500", :record-type :var} {:record-type :any}, {:name "_530", :record-type :var} {:record-type :any}, {:name "DRS", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "_520", :record-type :var} {:record-type :any}, {:name "_528", :record-type :var} {:record-type :any}, {:name "E2", :record-type :var} {:record-type :any}, {:name "_524", :record-type :var} {:record-type :any}, {:name "_518", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "_558", :record-type :var} {:record-type :any}, {:name "_522", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "E1", :record-type :var} {:record-type :any}}
{{:name "E4", :record-type :var} {:record-type :any}, {:name "_530", :record-type :var} {:record-type :any}, {:name "E3", :record-type :var} {:record-type :any}, {:name "E2", :record-type :var} {:record-type :any}, {:name "DRS2", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "DRS1", :record-type :var} {:record-type :any}, {:name "_500", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "E1", :record-type :var} {:record-type :any}}
{{:name "E3", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "E1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "E2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_496", :record-type :var} {:record-type :any}, {:name "_530", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "Sub", :record-type :var} {:record-type :any}, {:name "_516", :record-type :var} {:record-type :any}, {:name "Par", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "A2", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:record-type :any}, {:name "U", :record-type :var} {:record-type :any}, {:name "_516", :record-type :var} {:record-type :any}, {:name "Rel", :record-type :var} {:record-type :any}, {:name "_486", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:record-type :any}, {:name "Par2", :record-type :var} {:record-type :any}, {:name "Par1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "_482", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:record-type :any}, {:name "Par1", :record-type :var} {:record-type :any}, {:name "A2", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "Par2", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "TreeLen", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "L", :record-type :var} {:record-type :any}, {:name "CatLen", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}}
{{:name "TreeLen", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:record-type :any}, {:name "CatLen", :record-type :var} {:record-type :any}}
{{:name "TreeLen", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Fill", :record-type :var} {:record-type :atom}, {:name "CatLen", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Len", :record-type :var} {:record-type :number}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "_436", :record-type :var} {:record-type :any}, {:name "_438", :record-type :var} {:record-type :any}, {:name "_434", :record-type :var} {:record-type :any}, {:name "_432", :record-type :var} {:record-type :any}}
{{:name "W", :record-type :var} {:record-type :any}, {:name "Context", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Day", :record-type :var} {:record-type :any}, {:name "P", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}}
{{:name "W", :record-type :var} {:record-type :any}, {:name "Context", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "POS", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "P", :record-type :var} {:record-type :any}, {:name "T3", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "EI", :record-type :var} {:record-type :any}, {:name "Context", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "EIs", :record-type :var} {:record-type :any}, {:name "W", :record-type :var} {:record-type :any}, {:name "Frame", :record-type :var} {:record-type :any}, {:name "T4", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "T2", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "T1", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "N", :record-type :var} {:record-type :any}, {:name "_750", :record-type :var} {:record-type :any}}
{{:name "Month", :record-type :var} {:record-type :any}, {:name "W", :record-type :var} {:record-type :any}, {:name "Context", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}}
{{:name "P", :record-type :var} {:record-type :any}, {:name "Context", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "W", :record-type :var} {:record-type :any}, {:name "R3", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "RI", :record-type :var} {:record-type :any}, {:name "R2", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "R1", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "R4", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "RIs", :record-type :var} {:record-type :any}, {:name "Role", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "_750", :record-type :var} {:record-type :any}}
{{:name "W", :record-type :var} {:record-type :any}, {:name "Context", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "NE", :record-type :var} {:record-type :any}, {:name "P", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "W", :record-type :var} {:record-type :any}, {:name "Year", :record-type :var} {:record-type :any}, {:name "Context", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}}
{{:name "W", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "Context", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}}
{{:name "_410", :record-type :var} {:record-type :any}}
{{:name "H", :record-type :var} {:record-type :any}, {:name "V", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "T1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "FillLen", :record-type :var} {:record-type :number}, {:name "Fill", :record-type :var} {:record-type :atom}, {:name "Line", :record-type :var} {:record-type :atom}, {:name "Max", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Cat", :record-type :var} {:record-type :atom}, {:name "Len", :record-type :var} {:record-type :integer}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "Y1", :record-type :var} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}, {:name "X", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X1", :record-type :var} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "_4050", :record-type :var} {:record-type :atom}, {:name "Y", :record-type :var} {:record-type :atom}}
{{:name "File", :record-type :var} {:record-type :any}}
{{:name "File", :record-type :var} {:record-type :any}}
{{:name "File", :record-type :var} {:record-type :any}}
{{:name "File", :record-type :var} {:record-type :any}, {:name "_584", :record-type :var} {:record-type :nonvar}}
{{:name "File", :record-type :var} {:record-type :any}}
{{:name "HPattern", :record-type :var} {:record-type :any}, {:name "HLatest", :record-type :var} {:record-type :any}, {:name "HList", :record-type :var} {:record-type :empty-list}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}}
{{:name "_6076", :record-type :var} {:record-type :any}, {:name "_6040", :record-type :var} {:record-type :any}, {:name "X2", :record-type :var} {:record-type :nonvar}, {:name "_744", :record-type :var} {:record-type :any}, {:name "C1", :record-type :var} {:arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :tuple}, {:name "_762", :record-type :var} {:record-type :any}, {:name "_708", :record-type :var} {:record-type :any}, {:name "_6094", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:record-type :nonvar}, {:name "_726", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :tuple}, {:name "_780", :record-type :var} {:record-type :any}, {:name "_6058", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_6022", :record-type :var} {:record-type :any}}
{{:name "X2", :record-type :var} {:record-type :nonvar}, {:name "T2", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "F", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:record-type :nonvar}, {:name "T1", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "X2", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Tags", :record-type :var} {:record-type :any}, {:name "N3", :record-type :var} {:record-type :any}, {:name "N2", :record-type :var} {:record-type :number}, {:name "X1", :record-type :var} {:arglist #{{:functor "ltc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "funny", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :atom} {:record-type :any} {:record-type :atom} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lp", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "_6630", :record-type :var} {:record-type :any}, {:name "_6628", :record-type :var} {:record-type :any}}
{{:name "N3", :record-type :var} {:record-type :any}, {:name "N2", :record-type :var} {:record-type :any}, {:name "Y2", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "X2", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Att", :record-type :var} {:record-type :any}, {:name "Tags3", :record-type :var} {:record-type :any}, {:name "Y1", :record-type :var} {:arglist #{{:functor "ltc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "funny", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :atom} {:record-type :any} {:record-type :atom} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lp", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Tags2", :record-type :var} {:record-type :any}, {:name "Str", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:arglist #{{:functor "ltc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "funny", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :atom} {:record-type :any} {:record-type :atom} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lp", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "C", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :any}, {:name "Tags1", :record-type :var} {:record-type :any}}
{{:name "Tok", :record-type :var} {:record-type :any}, {:name "M", :record-type :var} {:record-type :any}, {:name "Tags", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "_452", :record-type :var} {:record-type :any}}
{{:name "N3", :record-type :var} {:record-type :any}, {:name "Sem2", :record-type :var} {:record-type :any}, {:name "N2", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "X3", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "X2", :record-type :var} {:functor "t", :arglist ({:functor "/", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}, {:name "Att", :record-type :var} {:record-type :any}, {:name "Tok2", :record-type :var} {:record-type :any}, {:name "Tags3", :record-type :var} {:record-type :any}, {:name "Att2", :record-type :var} {:record-type :any}, {:name "Tags2", :record-type :var} {:record-type :any}, {:name "Pu2", :record-type :var} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}, {:name "Str", :record-type :var} {:record-type :any}, {:name "Pu1", :record-type :var} {:arglist #{{:functor "ltc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "funny", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :atom} {:record-type :any} {:record-type :atom} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lp", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "X1", :record-type :var} {:arglist #{{:functor "ltc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "funny", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :atom} {:record-type :any} {:record-type :atom} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lp", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "C", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :any}, {:name "Tags1", :record-type :var} {:record-type :any}, {:name "_848", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "Pos", :record-type :var} {:record-type :any}, {:name "RevTags", :record-type :var} {:record-type :any}, {:name "Cat1", :record-type :var} {:record-type :any}, {:name "Cat2", :record-type :var} {:record-type :any}, {:name "Tok", :record-type :var} {:record-type :any}, {:name "Tags", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "T2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "T1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "M", :record-type :var} {:record-type :number}}
{{:name "N3", :record-type :var} {:record-type :any}, {:name "_424", :record-type :var} {:record-type :any}, {:name "N2", :record-type :var} {:record-type :any}, {:name "Y2", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "C3", :record-type :var} {:record-type :any}, {:name "X2", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Att", :record-type :var} {:record-type :any}, {:name "C1", :record-type :var} {:record-type :any}, {:name "Tags3", :record-type :var} {:record-type :any}, {:name "Y1", :record-type :var} {:arglist #{{:functor "ltc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "funny", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :atom} {:record-type :any} {:record-type :atom} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lp", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Tags2", :record-type :var} {:record-type :any}, {:name "Str", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:arglist #{{:functor "ltc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "funny", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :atom} {:record-type :any} {:record-type :atom} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lp", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "C2", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :any}, {:name "Tags1", :record-type :var} {:record-type :any}}
{{:name "N3", :record-type :var} {:record-type :any}, {:name "N2", :record-type :var} {:record-type :any}, {:name "Y2", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "X2", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Att", :record-type :var} {:record-type :any}, {:name "Tags3", :record-type :var} {:record-type :any}, {:name "Y1", :record-type :var} {:arglist #{{:functor "ltc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "funny", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :atom} {:record-type :any} {:record-type :atom} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lp", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Tags2", :record-type :var} {:record-type :any}, {:name "Str", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:arglist #{{:functor "ltc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "funny", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :atom} {:record-type :any} {:record-type :atom} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lp", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "C", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :any}, {:name "Tags1", :record-type :var} {:record-type :any}}
{{:name "Tok", :record-type :var} {:record-type :any}, {:name "M", :record-type :var} {:record-type :any}, {:name "Tags", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "N3", :record-type :var} {:record-type :any}, {:name "N2", :record-type :var} {:record-type :any}, {:name "Y2", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "X2", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Att", :record-type :var} {:record-type :any}, {:name "Tags3", :record-type :var} {:record-type :any}, {:name "Y1", :record-type :var} {:arglist #{{:functor "ltc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "funny", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :atom} {:record-type :any} {:record-type :atom} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lp", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Tags2", :record-type :var} {:record-type :any}, {:name "Str", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:arglist #{{:functor "ltc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "funny", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :atom} {:record-type :any} {:record-type :atom} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lp", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "C", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :any}, {:name "Tags1", :record-type :var} {:record-type :any}}
{{:name "Tok", :record-type :var} {:record-type :any}, {:name "M", :record-type :var} {:record-type :any}, {:name "Tags", :record-type :var} {:record-type :any}, {:name "Token", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "Pos", :record-type :var} {:record-type :any}}
{{:name "N3", :record-type :var} {:record-type :any}, {:name "N2", :record-type :var} {:record-type :any}, {:name "Y2", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "X2", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Att", :record-type :var} {:record-type :any}, {:name "Tags3", :record-type :var} {:record-type :any}, {:name "Y1", :record-type :var} {:arglist #{{:functor "ltc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "funny", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :atom} {:record-type :any} {:record-type :atom} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lp", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Tags2", :record-type :var} {:record-type :any}, {:name "Str", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:arglist #{{:functor "ltc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "funny", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :atom} {:record-type :any} {:record-type :atom} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lp", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "C", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :any}, {:name "Tags1", :record-type :var} {:record-type :any}}
{{:name "Tok", :record-type :var} {:record-type :any}, {:name "M", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "Tags", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "N3", :record-type :var} {:record-type :any}, {:name "_424", :record-type :var} {:record-type :any}, {:name "N2", :record-type :var} {:record-type :any}, {:name "Y2", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "X2", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Att", :record-type :var} {:record-type :any}, {:name "C1", :record-type :var} {:record-type :any}, {:name "Tags3", :record-type :var} {:record-type :any}, {:name "Y1", :record-type :var} {:arglist #{{:functor "ltc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "funny", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :atom} {:record-type :any} {:record-type :atom} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lp", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Tags2", :record-type :var} {:record-type :any}, {:name "Str", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:arglist #{{:functor "ltc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "funny", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :atom} {:record-type :any} {:record-type :atom} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lp", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "C2", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :any}, {:name "Tags1", :record-type :var} {:record-type :any}}
{{:name "N2", :record-type :var} {:record-type :any}, {:name "C3", :record-type :var} {:record-type :any}, {:name "X2", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Att", :record-type :var} {:record-type :any}, {:name "C1", :record-type :var} {:record-type :any}, {:name "Tags", :record-type :var} {:record-type :any}, {:name "Str", :record-type :var} {:record-type :any}, {:name "_426", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:arglist #{{:functor "ltc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "funny", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :atom} {:record-type :any} {:record-type :atom} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lp", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "C2", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :any}}
{{:name "N3", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_550", :record-type :var} {:record-type :any}, {:name "X2", :record-type :var} {:record-type :any}, {:name "Y1", :record-type :var} {:record-type :any}, {:name "Tags", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:record-type :nonvar}, {:name "X0", :record-type :var} {:record-type :nonvar}, {:name "N1", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "Pos", :record-type :var} {:record-type :any}, {:name "Ne", :record-type :var} {:record-type :any}, {:name "S1", :record-type :var} {:record-type :any}, {:name "Token", :record-type :var} {:record-type :any}, {:name "S2", :record-type :var} {:arglist #{{:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :atom} {:record-type :number}), :record-type :compound}), :record-type :tuple}}, :record-type :one-of}, {:name "Tok", :record-type :var} {:record-type :any}, {:name "Lem", :record-type :var} {:record-type :any}, {:name "Tags", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "M", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "Tok", :record-type :var} {:record-type :any}, {:name "Ne", :record-type :var} {:record-type :any}, {:name "_464", :record-type :var} {:record-type :any}, {:name "M", :record-type :var} {:record-type :any}, {:name "Tags", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "N1", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "Tags", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "N2", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}}
{{:name "N3", :record-type :var} {:record-type :any}, {:name "N2", :record-type :var} {:record-type :any}, {:name "Y2", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "X2", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Att", :record-type :var} {:record-type :any}, {:name "Tags3", :record-type :var} {:record-type :any}, {:name "Y1", :record-type :var} {:arglist #{{:functor "ltc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "funny", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :atom} {:record-type :any} {:record-type :atom} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lp", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Tags2", :record-type :var} {:record-type :any}, {:name "Str", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:arglist #{{:functor "ltc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "funny", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :atom} {:record-type :any} {:record-type :atom} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lp", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "C", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :any}, {:name "Tags1", :record-type :var} {:record-type :any}}
{{:name "N3", :record-type :var} {:record-type :any}, {:name "N2", :record-type :var} {:record-type :any}, {:name "Y2", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "X2", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Att", :record-type :var} {:record-type :any}, {:name "Tags3", :record-type :var} {:record-type :any}, {:name "Y1", :record-type :var} {:arglist #{{:functor "ltc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "funny", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :atom} {:record-type :any} {:record-type :atom} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lp", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Tags2", :record-type :var} {:record-type :any}, {:name "Str", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:arglist #{{:functor "ltc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "funny", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :atom} {:record-type :any} {:record-type :atom} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lp", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "C", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :any}, {:name "Tags1", :record-type :var} {:record-type :any}}
{{:name "N3", :record-type :var} {:record-type :any}, {:name "N2", :record-type :var} {:record-type :any}, {:name "Y2", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "X2", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Att", :record-type :var} {:record-type :any}, {:name "Tags3", :record-type :var} {:record-type :any}, {:name "Y1", :record-type :var} {:arglist #{{:functor "ltc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "funny", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :atom} {:record-type :any} {:record-type :atom} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lp", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Tags2", :record-type :var} {:record-type :any}, {:name "Str", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:arglist #{{:functor "ltc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "funny", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :atom} {:record-type :any} {:record-type :atom} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lp", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "C", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :any}, {:name "Tags1", :record-type :var} {:record-type :any}}
{{:name "N3", :record-type :var} {:record-type :any}, {:name "N2", :record-type :var} {:record-type :any}, {:name "Y2", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "X2", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Att", :record-type :var} {:record-type :any}, {:name "Tags3", :record-type :var} {:record-type :any}, {:name "Y1", :record-type :var} {:arglist #{{:functor "ltc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "funny", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :atom} {:record-type :any} {:record-type :atom} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lp", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Tags2", :record-type :var} {:record-type :any}, {:name "Str", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:arglist #{{:functor "ltc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "funny", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :atom} {:record-type :any} {:record-type :atom} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lp", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "C", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :any}, {:name "Tags1", :record-type :var} {:record-type :any}}
{{:name "N3", :record-type :var} {:record-type :any}, {:name "N2", :record-type :var} {:record-type :any}, {:name "S1", :record-type :var} {:record-type :any}, {:name "Y2", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "X2", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "S4", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:record-type :any}, {:name "S2", :record-type :var} {:record-type :any}, {:name "N4", :record-type :var} {:record-type :any}, {:name "Tags3", :record-type :var} {:record-type :any}, {:name "Y1", :record-type :var} {:arglist #{{:functor "ltc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "funny", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :atom} {:record-type :any} {:record-type :atom} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lp", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Tags2", :record-type :var} {:record-type :any}, {:name "Z2", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Tags4", :record-type :var} {:record-type :any}, {:name "Z1", :record-type :var} {:arglist #{{:functor "ltc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "funny", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :atom} {:record-type :any} {:record-type :atom} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lp", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Str", :record-type :var} {:record-type :any}, {:name "_C", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:arglist #{{:functor "ltc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "funny", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :atom} {:record-type :any} {:record-type :atom} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lp", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "C", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :any}, {:name "Tags1", :record-type :var} {:record-type :any}, {:name "S3", :record-type :var} {:record-type :any}}
{{:name "Tok", :record-type :var} {:record-type :any}, {:name "M", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "Tags", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "N3", :record-type :var} {:record-type :any}, {:name "N2", :record-type :var} {:record-type :any}, {:name "Y2", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "X2", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Att", :record-type :var} {:record-type :any}, {:name "Tags3", :record-type :var} {:record-type :any}, {:name "Y1", :record-type :var} {:arglist #{{:functor "ltc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "funny", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :atom} {:record-type :any} {:record-type :atom} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lp", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Tags2", :record-type :var} {:record-type :any}, {:name "Str", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:arglist #{{:functor "ltc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "funny", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :atom} {:record-type :any} {:record-type :atom} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lp", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "C", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :any}, {:name "Tags1", :record-type :var} {:record-type :any}}
{{:name "Y", :record-type :var} {:record-type :ground}}
{{:name "Y", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{{:name "K2", :record-type :var} {:record-type :any}, {:name "_4754", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "S", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B2", :record-type :var} {:record-type :any}, {:name "D3", :record-type :var} {:record-type :any}, {:name "ADRS", :record-type :var} {:record-type :any}, {:name "K1", :record-type :var} {:record-type :any}, {:name "D2", :record-type :var} {:record-type :any}, {:name "D1", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "_470", :record-type :var} {:record-type :any}, {:name "_466", :record-type :var} {:record-type :any}, {:name "_468", :record-type :var} {:record-type :any}, {:name "_398", :record-type :var} {:record-type :any}}
{{:name "_444", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_442", :record-type :var} {:record-type :any}, {:name "_446", :record-type :var} {:record-type :any}}
{{:name "D1", :record-type :var} {:record-type :any}, {:name "S2", :record-type :var} {:record-type :any}, {:name "D2", :record-type :var} {:record-type :any}, {:name "D3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "K", :record-type :var} {:record-type :any}, {:name "ADRS", :record-type :var} {:record-type :any}, {:name "_442", :record-type :var} {:record-type :any}, {:name "S1", :record-type :var} {:record-type :any}}
{{:name "Body", :record-type :var} {:record-type :any}, {:name "Head", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :ground}}
{{:name "C", :record-type :var} {:record-type :any}, {:name "G", :record-type :var} {:record-type :any}}
{{:name "_394", :record-type :var} {:record-type :any}, {:name "_396", :record-type :var} {:record-type :any}}
{{:name "_4004", :record-type :var} {:record-type :any}, {:name "_4060", :record-type :var} {:record-type :any}}
{{:name "_508", :record-type :var} {:record-type :any}, {:name "_408", :record-type :var} {:record-type :any}, {:name "Input", :record-type :var} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}, {:name "_410", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Word", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:record-type :any}}
{{:name "_408", :record-type :var} {:record-type :any}, {:name "Input", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}}
{{:name "_396", :record-type :var} {:record-type :any}}
{{:name "OutStream", :record-type :var} {:record-type :any}, {:name "File", :record-type :var} {:arglist #{{:functor nil, :arglist (), :record-type :compound} {:record-type :atom} {:record-type :string}}, :record-type :one-of}, {:name "String", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "MoreFiles", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{}
{{:name "MoreQuantifyingAtoms", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "VarName", :record-type :var} {:record-type :any}, {:name "MoreOccurs", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "OccurList", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "QuantifyingAtoms", :record-type :var} {:record-type :any}, {:name "MoreOccurs", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_398", :record-type :var} {:record-type :any}}
{{:name "MoreQuantifyingAtoms", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "VarName", :record-type :var} {:record-type :any}, {:name "MoreOccurs", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "OccurList", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "_396", :record-type :var} {:record-type :any}, {:name "Why", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Q", :record-type :var} {:record-type :any}}
{{:name "Ass", :record-type :var} {:record-type :any}, {:name "_448", :record-type :var} {:record-type :any}, {:name "DB", :record-type :var} {:record-type :any}, {:name "Res", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}}
{{:name "Q", :record-type :var} {:record-type :any}, {:name "DB", :record-type :var} {:record-type :any}}
{{:name "Q", :record-type :var} {:record-type :any}, {:name "_396", :record-type :var} {:record-type :any}}
{}
{{:name "READ", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :integer}}
{{:name "K2", :record-type :var} {:record-type :any}, {:name "U", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "K1", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}}
{{:name "_394", :record-type :var} {:record-type :any}}
{{:name "Conds", :record-type :var} {:record-type :any}, {:name "I2", :record-type :var} {:record-type :any}, {:name "Dom", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_454", :record-type :var} {:record-type :any}, {:name "I3", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:record-type :any}, {:name "_482", :record-type :var} {:record-type :any}}
{{:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I2", :record-type :var} {:record-type :any}, {:name "I3", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I2", :record-type :var} {:record-type :any}, {:name "I3", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Conds", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "_430", :record-type :var} {:record-type :any}}
{{:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I", :record-type :var} {:record-type :any}, {:name "_398", :record-type :var} {:record-type :any}}
{{:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I2", :record-type :var} {:record-type :any}, {:name "_428", :record-type :var} {:record-type :any}, {:name "I3", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{}
{{:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I2", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "I5", :record-type :var} {:record-type :any}, {:name "I3", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:record-type :any}, {:name "I4", :record-type :var} {:record-type :any}}
{{:name "Conds", :record-type :var} {:record-type :any}, {:name "I2", :record-type :var} {:record-type :any}, {:name "Dom", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_454", :record-type :var} {:record-type :any}, {:name "I3", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:record-type :any}, {:name "_482", :record-type :var} {:record-type :any}}
{{:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I2", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "I5", :record-type :var} {:record-type :any}, {:name "I3", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:record-type :any}, {:name "I4", :record-type :var} {:record-type :any}}
{{:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I2", :record-type :var} {:record-type :any}, {:name "I3", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "_394", :record-type :var} {:record-type :any}}
{{:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I2", :record-type :var} {:record-type :any}, {:name "_428", :record-type :var} {:record-type :any}, {:name "I3", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I2", :record-type :var} {:record-type :any}, {:name "I3", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:record-type :any}, {:name "Cond", :record-type :var} {:record-type :any}, {:name "_452", :record-type :var} {:record-type :any}}
{{:name "_394", :record-type :var} {:record-type :any}}
{}
{{:name "_452", :record-type :var} {:record-type :any}, {:name "I5", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_456", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "I4", :record-type :var} {:record-type :any}, {:name "I2", :record-type :var} {:record-type :any}, {:name "I3", :record-type :var} {:record-type :any}}
{{:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I2", :record-type :var} {:record-type :any}, {:name "I3", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I", :record-type :var} {:record-type :any}, {:name "_398", :record-type :var} {:record-type :any}}
{{:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I2", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "I5", :record-type :var} {:record-type :any}, {:name "I3", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:record-type :any}, {:name "I4", :record-type :var} {:record-type :any}}
{{:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I2", :record-type :var} {:record-type :any}, {:name "I3", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Conds", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "_430", :record-type :var} {:record-type :any}}
{{:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I2", :record-type :var} {:record-type :any}, {:name "I3", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:record-type :any}, {:name "Cond", :record-type :var} {:record-type :any}, {:name "_452", :record-type :var} {:record-type :any}}
{{:name "_452", :record-type :var} {:record-type :any}, {:name "I5", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_456", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "I4", :record-type :var} {:record-type :any}, {:name "I2", :record-type :var} {:record-type :any}, {:name "I3", :record-type :var} {:record-type :any}}
{{:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I2", :record-type :var} {:record-type :any}, {:name "I3", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I2", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "I5", :record-type :var} {:record-type :any}, {:name "I3", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:record-type :any}, {:name "I4", :record-type :var} {:record-type :any}}
{{:name "Y2", :record-type :var} {:record-type :integer}, {:name "Codes", :record-type :var} {:type {:record-type :integer}, :record-type :list}, {:name "Y4", :record-type :var} {:record-type :integer}, {:name "Last", :record-type :var} {:record-type :atom}, {:name "Year", :record-type :var} {:record-type :atom}, {:name "Y1", :record-type :var} {:record-type :integer}, {:name "NumberYear", :record-type :var} {:record-type :integer}, {:name "Y3", :record-type :var} {:record-type :integer}, {:name "NumberLast", :record-type :var} {:record-type :integer}}
{{:name "X", :record-type :var} {:record-type :any}}
{{:name "_428", :record-type :var} {:record-type :any}, {:name "_436", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "MoreOccurrences", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_398", :record-type :var} {:record-type :any}}
{}
{{:name "R", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P0", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "_410", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:record-type :number}, {:name "P", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}}
{}
{}
{{:name "Exc", :record-type :var} {:record-type :any}}
{{:name "_3986", :record-type :var} {:record-type :any}, {:name "_3988", :record-type :var} {:record-type :any}}
{{:name "S", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :any}}
{{:name "_462", :record-type :var} {:record-type :any}, {:name "_466", :record-type :var} {:record-type :any}, {:name "P", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Context", :record-type :var} {:record-type :any}, {:name "IDs", :record-type :var} {:record-type :any}, {:name "P", :record-type :var} {:record-type :any}, {:name "_456", :record-type :var} {:record-type :any}, {:name "_452", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:record-type :any}, {:name "Context", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}, {:name "IDs", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Context", :record-type :var} {:record-type :any}, {:name "IDs", :record-type :var} {:record-type :any}, {:name "P", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "IDs", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "P4", :record-type :var} {:record-type :any}, {:name "P2", :record-type :var} {:record-type :any}, {:name "C1", :record-type :var} {:record-type :any}, {:name "_762", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:record-type :any}, {:name "P3", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Context", :record-type :var} {:record-type :any}, {:name "IDs", :record-type :var} {:record-type :any}, {:name "P", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "P3", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Context", :record-type :var} {:record-type :any}, {:name "_588", :record-type :var} {:record-type :any}, {:name "P2", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:record-type :any}, {:name "IDs", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Context", :record-type :var} {:record-type :any}, {:name "IDs", :record-type :var} {:record-type :any}, {:name "P", :record-type :var} {:record-type :any}, {:name "_398", :record-type :var} {:record-type :any}}
{{:name "_428", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Context", :record-type :var} {:record-type :any}, {:name "IDs", :record-type :var} {:record-type :any}, {:name "P", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "_602", :record-type :var} {:record-type :any}, {:name "IDs", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "P4", :record-type :var} {:record-type :any}, {:name "P2", :record-type :var} {:record-type :any}, {:name "C1", :record-type :var} {:record-type :any}, {:name "_762", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:record-type :any}, {:name "P3", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{}
{{:name "AttValue", :record-type :var} {:record-type :any}, {:name "Other", :record-type :var} {:record-type :any}}
{{:name "F", :record-type :var} {:record-type :any}, {:name "Chars", :record-type :var} {:type {:record-type :atom}, :record-type :list}, {:name "Y", :record-type :var} {:record-type :atom}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "_410", :record-type :var} {:record-type :any}}
{{:name "H", :record-type :var} {:record-type :any}, {:name "H1", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "T1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "_398", :record-type :var} {:record-type :any}, {:name "Head", :record-type :var} {:record-type :any}}
{{:name "OldHead", :record-type :var} {:record-type :any}, {:name "MoreVars", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_430", :record-type :var} {:record-type :any}, {:name "VarName", :record-type :var} {:record-type :any}, {:name "NewHead", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "_404", :record-type :var} {:record-type :any}, {:name "_466", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "_402", :record-type :var} {:record-type :any}, {:name "_464", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "_462", :record-type :var} {:record-type :any}, {:name "_414", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "_424", :record-type :var} {:record-type :any}, {:name "_426", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :atomic}}
{{:name "_412", :record-type :var} {:record-type :any}, {:name "_450", :record-type :var} {:record-type :any}, {:name "_414", :record-type :var} {:record-type :any}, {:name "_452", :record-type :var} {:record-type :any}}
{{:name "_402", :record-type :var} {:record-type :any}, {:name "_474", :record-type :var} {:record-type :any}, {:name "_404", :record-type :var} {:record-type :any}, {:name "_476", :record-type :var} {:record-type :any}}
{{:name "B", :record-type :var} {:record-type :atomic}, {:name "_412", :record-type :var} {:record-type :any}, {:name "_414", :record-type :var} {:record-type :any}}
{{:name "CD", :record-type :var} {:record-type :any}, {:name "_576", :record-type :var} {:record-type :any}, {:name "_572", :record-type :var} {:record-type :any}, {:name "_570", :record-type :var} {:record-type :any}, {:name "_574", :record-type :var} {:record-type :any}}
{{:name "A2", :record-type :var} {:record-type :any}, {:name "P", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "W", :record-type :var} {:record-type :any}, {:name "CD1", :record-type :var} {:record-type :any}, {:name "CD3", :record-type :var} {:record-type :any}, {:name "_884", :record-type :var} {:record-type :any}, {:name "Conds2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Conds1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D2", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}}
{{:name "P", :record-type :var} {:record-type :any}, {:name "Context", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:record-type :any}, {:name "W", :record-type :var} {:record-type :any}, {:name "C1", :record-type :var} {:record-type :any}, {:name "G", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "CD", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "D2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C2", :record-type :var} {:record-type :any}}
{{:name "A2", :record-type :var} {:record-type :any}, {:name "P", :record-type :var} {:record-type :any}, {:name "_1000", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "W", :record-type :var} {:record-type :any}, {:name "CD1", :record-type :var} {:record-type :any}, {:name "A3", :record-type :var} {:record-type :any}, {:name "CD3", :record-type :var} {:record-type :any}, {:name "Conds2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Conds1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_912", :record-type :var} {:record-type :any}, {:name "D2", :record-type :var} {:record-type :any}, {:name "A4", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}}
{{:name "A2", :record-type :var} {:record-type :any}, {:name "P", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "_1056", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "W", :record-type :var} {:record-type :any}, {:name "CD1", :record-type :var} {:record-type :any}, {:name "A3", :record-type :var} {:record-type :any}, {:name "CD3", :record-type :var} {:record-type :any}, {:name "Conds2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Conds1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "CD2", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}, {:name "D2", :record-type :var} {:record-type :any}, {:name "A4", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}}
{{:name "A2", :record-type :var} {:record-type :any}, {:name "P", :record-type :var} {:record-type :any}, {:name "_1000", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "W", :record-type :var} {:record-type :any}, {:name "CD1", :record-type :var} {:record-type :any}, {:name "A3", :record-type :var} {:record-type :any}, {:name "CD3", :record-type :var} {:record-type :any}, {:name "Conds2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Conds1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "CD2", :record-type :var} {:record-type :any}, {:name "D2", :record-type :var} {:record-type :any}, {:name "A4", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}}
{{:name "P", :record-type :var} {:record-type :any}, {:name "Context", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "W", :record-type :var} {:record-type :any}, {:name "C3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Cond", :record-type :var} {:record-type :any}, {:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_762", :record-type :var} {:record-type :any}, {:name "G", :record-type :var} {:record-type :any}, {:name "CD", :record-type :var} {:record-type :any}, {:name "D3", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_768", :record-type :var} {:record-type :any}, {:name "_760", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_764", :record-type :var} {:record-type :any}}
{{:name "A2", :record-type :var} {:record-type :any}, {:name "P", :record-type :var} {:record-type :any}, {:name "_1000", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "W", :record-type :var} {:record-type :any}, {:name "CD1", :record-type :var} {:record-type :any}, {:name "A3", :record-type :var} {:record-type :any}, {:name "CD3", :record-type :var} {:record-type :any}, {:name "Conds2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Conds1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "CD2", :record-type :var} {:record-type :any}, {:name "D2", :record-type :var} {:record-type :any}, {:name "A4", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}}
{{:name "A2", :record-type :var} {:record-type :any}, {:name "P", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "W", :record-type :var} {:record-type :any}, {:name "CD1", :record-type :var} {:record-type :any}, {:name "CD3", :record-type :var} {:record-type :any}, {:name "Conds2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Conds1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_912", :record-type :var} {:record-type :any}, {:name "D2", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}}
{{:name "_462", :record-type :var} {:record-type :any}, {:name "M2", :record-type :var} {:record-type :any}, {:name "M1", :record-type :var} {:record-type :any}, {:name "_414", :record-type :var} {:record-type :any}}
{{:name "D1", :record-type :var} {:record-type :any}, {:name "M", :record-type :var} {:record-type :any}, {:name "D2", :record-type :var} {:record-type :any}}
{{:name "_394", :record-type :var} {:record-type :any}, {:name "_396", :record-type :var} {:record-type :any}}
{{:name "_396", :record-type :var} {:record-type :any}}
{{:name "Tok", :record-type :var} {:record-type :atom}, {:name "ID", :record-type :var} {:record-type :any}, {:name "New", :record-type :var} {:record-type :atom}, {:name "R", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Rest", :record-type :var} {:record-type :atom}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "_Unknown", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Tok", :record-type :var} {:record-type :any}, {:name "_470", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_ID", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Head", :record-type :var} {:record-type :any}, {:name "Variables", :record-type :var} {:record-type :any}}
{{:name "IntVars", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "MoreRVars", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "OldHead", :record-type :var} {:record-type :any}, {:name "IntHead", :record-type :var} {:record-type :any}, {:name "RVar", :record-type :var} {:functor "variable", :arglist ({:record-type :any} {:type {:record-type :any}, :record-type :list}), :record-type :compound}, {:name "NewVars", :record-type :var} {:record-type :any}, {:name "Vars", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "NewHead", :record-type :var} {:record-type :any}, {:name "OldVars", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "C1", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:record-type :any}}
{{:name "_406", :record-type :var} {:record-type :any}, {:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C2", :record-type :var} {:record-type :any}}
{{:name "_3986", :record-type :var} {:record-type :any}, {:name "_3988", :record-type :var} {:record-type :any}}
{{:name "FileName", :record-type :var} {:arglist #{{:functor nil, :arglist (), :record-type :compound} {:record-type :atom} {:record-type :string}}, :record-type :one-of}, {:name "Stream", :record-type :var} {:record-type :ground}}
{{:name "St4", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:arglist #{{:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "B2", :record-type :var} {:arglist #{{:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "St2", :record-type :var} {:record-type :any}, {:name "St3", :record-type :var} {:record-type :any}, {:name "U2", :record-type :var} {:record-type :any}, {:name "U1", :record-type :var} {:record-type :any}, {:name "St1", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:arglist #{{:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "B2", :record-type :var} {:arglist #{{:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "St2", :record-type :var} {:record-type :any}, {:name "St3", :record-type :var} {:record-type :any}, {:name "U2", :record-type :var} {:record-type :any}, {:name "U1", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}, {:name "St1", :record-type :var} {:record-type :any}}
{{:name "Con2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "St2", :record-type :var} {:record-type :any}, {:name "Dom", :record-type :var} {:record-type :any}, {:name "Con1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "St1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Sym", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "ResolvedDrs", :record-type :var} {:arglist #{{:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "_682", :record-type :var} {:record-type :any}, {:name "St2", :record-type :var} {:record-type :any}, {:name "Dom", :record-type :var} {:record-type :any}, {:name "Conds2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Conds1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Ind", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "St1", :record-type :var} {:record-type :any}, {:name "Drs", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}, {:name "C", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_Index", :record-type :var} {:record-type :any}, {:name "POS", :record-type :var} {:record-type :atom}}
{{:name "Codes", :record-type :var} {:type {:record-type :integer}, :record-type :list}, {:name "Cat", :record-type :var} {:record-type :atom}, {:name "Term", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:arglist #{{:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "eq", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}}, :record-type :one-of}, {:name "Mood", :record-type :var} {:record-type :any}, {:name "PoS", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Tag", :record-type :var} {:record-type :atom}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "M", :record-type :var} {:record-type :any}, {:name "_532", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "M", :record-type :var} {:record-type :any}, {:name "_532", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "M", :record-type :var} {:record-type :any}, {:name "_532", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_530", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "M", :record-type :var} {:record-type :any}, {:name "_532", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "M", :record-type :var} {:record-type :any}, {:name "_532", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "M", :record-type :var} {:record-type :any}, {:name "_532", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "X2", :record-type :var} {:record-type :any}, {:name "Body", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}, {:name "C", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}}
{{:name "_396", :record-type :var} {:record-type :any}}
{{:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "T", :record-type :var} {:record-type :any}}
{{:name "H", :record-type :var} {:record-type :any}}
{{:name "H", :record-type :var} {:record-type :any}}
{{:name "H", :record-type :var} {:record-type :any}}
{{:name "H", :record-type :var} {:record-type :any}}
{{:name "H", :record-type :var} {:record-type :any}}
{{:name "Max", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "Comm", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:arglist #{{:functor "&", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "if", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :atom}}, :record-type :one-of}}
{{:name "Stream", :record-type :var} {:record-type :any}, {:name "DRS", :record-type :var} {:record-type :any}}
{{:name "Stream", :record-type :var} {:record-type :any}, {:name "DRS", :record-type :var} {:record-type :any}}
{{:name "_410", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Der", :record-type :var} {:functor "der", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}, {:name "NewIndex", :record-type :var} {:record-type :any}, {:name "Ders", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "C", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Ders", :record-type :var} {:record-type :any}}
{}
{{:name "T3", :record-type :var} {:record-type :any}, {:name "_1014", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "_762", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "_770", :record-type :var} {:record-type :any}, {:name "T2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_546", :record-type :var} {:record-type :any}, {:name "R", :record-type :var} {:record-type :any}, {:name "T1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_1022", :record-type :var} {:record-type :any}, {:name "_538", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}}
{{:name "J", :record-type :var} {:record-type :any}, {:name "T3", :record-type :var} {:record-type :any}, {:name "K2", :record-type :var} {:record-type :any}, {:name "_728", :record-type :var} {:record-type :any}, {:name "_724", :record-type :var} {:record-type :any}, {:name "_896", :record-type :var} {:record-type :any}, {:name "Word", :record-type :var} {:record-type :any}, {:name "_720", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "CC", :record-type :var} {:record-type :any}, {:name "_888", :record-type :var} {:record-type :any}, {:name "K1", :record-type :var} {:record-type :any}, {:name "T2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "R", :record-type :var} {:record-type :any}, {:name "T1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "T", :record-type :var} {:record-type :any}}
{{:name "J", :record-type :var} {:record-type :any}, {:name "T3", :record-type :var} {:record-type :any}, {:name "K2", :record-type :var} {:record-type :any}, {:name "_728", :record-type :var} {:record-type :any}, {:name "_724", :record-type :var} {:record-type :any}, {:name "_896", :record-type :var} {:record-type :any}, {:name "Word", :record-type :var} {:record-type :any}, {:name "_720", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "CC", :record-type :var} {:record-type :any}, {:name "_888", :record-type :var} {:record-type :any}, {:name "K1", :record-type :var} {:record-type :any}, {:name "T2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "R", :record-type :var} {:record-type :any}, {:name "T1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Start", :record-type :var} {:record-type :any}, {:name "End", :record-type :var} {:record-type :any}, {:name "Term", :record-type :var} {:record-type :any}}
{{:name "E", :record-type :var} {:record-type :any}, {:name "ResolvedDrs", :record-type :var} {:record-type :any}, {:name "Par", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "TempStack", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "AntDrs", :record-type :var} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:type {:record-type :any}, :record-type :list}), :record-type :compound}), :record-type :compound}, {:name "Dom", :record-type :var} {:record-type :any}, {:name "Conds2", :record-type :var} {:record-type :any}, {:name "Conds1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Ind", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_Sym", :record-type :var} {:record-type :any}, {:name "_1252", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "App", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}, {:name "NewDrs", :record-type :var} {:functor "app", :arglist ({:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "SortedAntDrs", :record-type :var} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:type {:record-type :any}, :record-type :list}), :record-type :compound}), :record-type :compound}, {:name "Stack", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "VP", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}}
{{:name "_Stack", :record-type :var} {:record-type :any}, {:name "Ind", :record-type :var} {:record-type :any}, {:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "Drs", :record-type :var} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:type {:record-type :any}, :record-type :list}), :record-type :compound}), :record-type :compound}, {:name "E", :record-type :var} {:record-type :any}, {:name "Dom", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "_Stack", :record-type :var} {:record-type :any}, {:name "Ind", :record-type :var} {:record-type :any}, {:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "Drs", :record-type :var} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:type {:record-type :any}, :record-type :list}), :record-type :compound}), :record-type :compound}, {:name "E", :record-type :var} {:record-type :any}, {:name "Dom", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Sym", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "Conds3", :record-type :var} {:record-type :any}, {:name "Pars", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Par", :record-type :var} {:record-type :any}, {:name "TempStack", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Dom", :record-type :var} {:record-type :any}, {:name "Conds1", :record-type :var} {:record-type :any}, {:name "_880", :record-type :var} {:record-type :any}, {:name "Ind", :record-type :var} {:record-type :any}, {:name "_876", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "Drs", :record-type :var} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}, {:name "Stack", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "_396", :record-type :var} {:record-type :any}}
{{:name "InFile", :record-type :var} {:record-type :any}, {:name "FileList", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "C1", :record-type :var} {:record-type :integer}, {:name "Atom", :record-type :var} {:record-type :atom}, {:name "Year", :record-type :var} {:record-type :atom}, {:name "C4", :record-type :var} {:record-type :integer}, {:name "C2", :record-type :var} {:record-type :integer}, {:name "C3", :record-type :var} {:record-type :integer}}
{{:name "Atom", :record-type :var} {:record-type :atom}, {:name "Year", :record-type :var} {:record-type :atom}, {:name "C4", :record-type :var} {:record-type :integer}, {:name "C3", :record-type :var} {:record-type :integer}}
{{:name "R", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "PE", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "E", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:record-type :number}, {:name "L", :record-type :var} {:record-type :any}, {:name "P", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "L1", :record-type :var} {:record-type :any}}
{{:name "P", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "E", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:record-type :any}, {:name "LE", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P1", :record-type :var} {:record-type :number}, {:name "L2", :record-type :var} {:record-type :any}, {:name "R", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:record-type :any}, {:name "PE", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "E1", :record-type :var} {:record-type :any}}
{{:name "A2", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "W", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:record-type :any}, {:name "F1", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "F2", :record-type :var} {:record-type :any}, {:name "_462", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}, {:name "D2", :record-type :var} {:record-type :any}, {:name "D1", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "A2", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "W", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:record-type :any}, {:name "F1", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "F2", :record-type :var} {:record-type :any}, {:name "_462", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "D2", :record-type :var} {:record-type :any}, {:name "D1", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "W", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:record-type :any}, {:name "R2", :record-type :var} {:record-type :any}, {:name "R1", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "C1", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "_476", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}, {:name "D2", :record-type :var} {:record-type :any}, {:name "D1", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "A2", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "W", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:record-type :any}, {:name "F1", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "F2", :record-type :var} {:record-type :any}, {:name "_462", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}, {:name "D2", :record-type :var} {:record-type :any}, {:name "D1", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "A2", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "W", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:record-type :any}, {:name "F1", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "F2", :record-type :var} {:record-type :any}, {:name "_462", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "D2", :record-type :var} {:record-type :any}, {:name "D1", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:record-type :any}, {:name "Att1", :record-type :var} {:record-type :any}, {:name "Symbol", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "Lemma", :record-type :var} {:record-type :any}, {:name "Word", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}, {:name "Att2", :record-type :var} {:record-type :any}, {:name "_452", :record-type :var} {:record-type :any}}
{{:name "W", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:record-type :any}, {:name "R2", :record-type :var} {:record-type :any}, {:name "R1", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "C1", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "_476", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}, {:name "D2", :record-type :var} {:record-type :any}, {:name "D1", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:record-type :any}, {:name "CCat", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "A2", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "W", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:record-type :any}, {:name "F1", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "F2", :record-type :var} {:record-type :any}, {:name "_476", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:arglist #{{:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "app", :arglist ({:functor "app", :arglist ({:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "app", :arglist ({:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "app", :arglist ({:functor "app", :arglist ({:functor "app", :arglist ({:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}}, :record-type :one-of}, {:name "D2", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :integer}, {:name "D1", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "W", :record-type :var} {:record-type :any}, {:name "Coord", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:record-type :any}, {:name "R2", :record-type :var} {:record-type :any}, {:name "R1", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "C1", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "_476", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "app", :arglist ({:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound}, {:name "D2", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "D1", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:record-type :any}, {:name "CCat", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "A2", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "W", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:record-type :any}, {:name "F1", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "F2", :record-type :var} {:record-type :any}, {:name "_462", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "D2", :record-type :var} {:record-type :any}, {:name "D1", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "A2", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:record-type :any}, {:name "_464", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "W", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:record-type :any}, {:name "OldCat", :record-type :var} {:record-type :any}, {:name "NewCat", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}, {:name "X", :record-type :var} {:record-type :any}}
{{:name "A2", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "W", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:record-type :any}, {:name "F1", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "F2", :record-type :var} {:record-type :any}, {:name "_462", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "D2", :record-type :var} {:record-type :any}, {:name "D1", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "A2", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "W", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:record-type :any}, {:name "F1", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "F2", :record-type :var} {:record-type :any}, {:name "_476", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:arglist #{{:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "app", :arglist ({:functor "app", :arglist ({:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "app", :arglist ({:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "app", :arglist ({:functor "app", :arglist ({:functor "app", :arglist ({:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}}, :record-type :one-of}, {:name "D2", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :integer}, {:name "D1", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "A2", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "W", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:record-type :any}, {:name "F1", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "F2", :record-type :var} {:record-type :any}, {:name "_462", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "D2", :record-type :var} {:record-type :any}, {:name "D1", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "W", :record-type :var} {:record-type :any}, {:name "Coord", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:record-type :any}, {:name "R2", :record-type :var} {:record-type :any}, {:name "R1", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "C1", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "_474", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "app", :arglist ({:functor "app", :arglist ({:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound}, {:name "D3", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:record-type :any}, {:name "D2", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "D1", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "C2", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "S", :record-type :var} {:record-type :any}, {:name "Dollar", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "A1", :record-type :var} {:record-type :any}, {:name "S1", :record-type :var} {:record-type :any}, {:name "W", :record-type :var} {:record-type :any}, {:name "F1", :record-type :var} {:record-type :any}, {:name "S2", :record-type :var} {:record-type :any}, {:name "ACat", :record-type :var} {:record-type :any}, {:name "Der", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}, {:name "S3", :record-type :var} {:record-type :any}}
{{:name "A2", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "W", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:record-type :any}, {:name "F1", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "F2", :record-type :var} {:record-type :any}, {:name "_462", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "D2", :record-type :var} {:record-type :any}, {:name "D1", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "A2", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "W", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:record-type :any}, {:name "F1", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "F2", :record-type :var} {:record-type :any}, {:name "_462", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "D2", :record-type :var} {:record-type :any}, {:name "D1", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "A2", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "W", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:record-type :any}, {:name "F1", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "F2", :record-type :var} {:record-type :any}, {:name "_476", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:arglist #{{:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "app", :arglist ({:functor "app", :arglist ({:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "app", :arglist ({:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "app", :arglist ({:functor "app", :arglist ({:functor "app", :arglist ({:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}}, :record-type :one-of}, {:name "D2", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :integer}, {:name "D1", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "A3", :record-type :var} {:record-type :any}, {:name "W", :record-type :var} {:record-type :any}, {:name "_464", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "A2", :record-type :var} {:record-type :any}, {:name "OldCat", :record-type :var} {:record-type :any}, {:name "NewCat", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:record-type :any}}
{{:name "A2", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "W", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:record-type :any}, {:name "F1", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "F2", :record-type :var} {:record-type :any}, {:name "_476", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:arglist #{{:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "app", :arglist ({:functor "app", :arglist ({:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "app", :arglist ({:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "app", :arglist ({:functor "app", :arglist ({:functor "app", :arglist ({:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}}, :record-type :one-of}, {:name "D2", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :integer}, {:name "D1", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "A2", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:record-type :any}, {:name "_464", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "W", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:record-type :any}, {:name "OldCat", :record-type :var} {:record-type :any}, {:name "NewCat", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}, {:name "X", :record-type :var} {:record-type :any}}
{{:name "A2", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "W", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:record-type :any}, {:name "F1", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "F2", :record-type :var} {:record-type :any}, {:name "_462", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "D2", :record-type :var} {:record-type :any}, {:name "D1", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "_4708", :record-type :var} {:record-type :any}, {:name "_4762", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "_4708", :record-type :var} {:record-type :any}, {:name "_4762", :record-type :var} {:record-type :any}}
{{:name "Var", :record-type :var} {:record-type :var}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "R", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "SDRS", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "K1", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:arglist #{{:type {:record-type :any}, :record-type :list} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "M", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "R", :record-type :var} {:record-type :any}, {:name "B3", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Reduced", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "M", :record-type :var} {:record-type :any}}
{{:name "R", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "_424", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_680", :record-type :var} {:record-type :any}, {:name "B4", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "B3", :record-type :var} {:record-type :any}, {:name "Reduced", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "R", :record-type :var} {:record-type :any}, {:name "M", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:arglist #{{:type {:record-type :any}, :record-type :list} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}}
{{:name "R", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "B2", :record-type :var} {:record-type :any}, {:name "R", :record-type :var} {:record-type :any}, {:name "B3", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "SDRS", :record-type :var} {:record-type :any}, {:name "K1", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}}
{{:name "_424", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B2", :record-type :var} {:record-type :any}, {:name "B3", :record-type :var} {:record-type :any}, {:name "Reduced", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "R", :record-type :var} {:record-type :any}, {:name "M", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:arglist #{{:type {:record-type :any}, :record-type :list} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "_644", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "R", :record-type :var} {:record-type :any}, {:name "B3", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "SDRS", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "K1", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}}
{{:name "_424", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B2", :record-type :var} {:record-type :any}, {:name "B3", :record-type :var} {:record-type :any}, {:name "Reduced", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "R", :record-type :var} {:record-type :any}, {:name "M", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:arglist #{{:type {:record-type :any}, :record-type :list} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "_658", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}}
{{:name "_508", :record-type :var} {:record-type :any}, {:name "_424", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:arglist #{{:type {:record-type :any}, :record-type :list} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "B2", :record-type :var} {:record-type :any}, {:name "B3", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "_424", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B4", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "B3", :record-type :var} {:record-type :any}, {:name "Reduced", :record-type :var} {:record-type :any}, {:name "_694", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "R", :record-type :var} {:record-type :any}, {:name "M", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:arglist #{{:type {:record-type :any}, :record-type :list} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "T", :record-type :var} {:record-type :any}}
{{:name "_424", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:arglist #{{:type {:record-type :any}, :record-type :list} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "B2", :record-type :var} {:record-type :any}, {:name "B3", :record-type :var} {:record-type :any}, {:name "_544", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "Reduced", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "R", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "R", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "SDRS", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "K1", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}}
{{:name "R", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B4", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "B3", :record-type :var} {:record-type :any}, {:name "Reduced", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "R", :record-type :var} {:record-type :any}, {:name "M", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:arglist #{{:type {:record-type :any}, :record-type :list} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}}
{{:name "_424", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:arglist #{{:type {:record-type :any}, :record-type :list} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "B2", :record-type :var} {:record-type :any}, {:name "_558", :record-type :var} {:record-type :any}, {:name "B3", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "Reduced", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "R1", :record-type :var} {:record-type :any}, {:name "R2", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "B2", :record-type :var} {:record-type :any}, {:name "R", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "SDRS", :record-type :var} {:record-type :any}, {:name "K1", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:arglist #{{:type {:record-type :any}, :record-type :list} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "B2", :record-type :var} {:record-type :any}, {:name "B3", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "R", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "SDRS", :record-type :var} {:record-type :any}, {:name "K1", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}}
{{:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:arglist #{{:type {:record-type :any}, :record-type :list} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "B2", :record-type :var} {:record-type :any}, {:name "B3", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "Reduced", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "B2", :record-type :var} {:record-type :any}, {:name "R", :record-type :var} {:record-type :any}, {:name "B3", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "SDRS", :record-type :var} {:record-type :any}, {:name "K1", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:arglist #{{:type {:record-type :any}, :record-type :list} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "B2", :record-type :var} {:record-type :any}, {:name "B3", :record-type :var} {:record-type :any}, {:name "_538", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "Reduced", :record-type :var} {:record-type :any}, {:name "_496", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "R", :record-type :var} {:record-type :any}, {:name "B3", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "SDRS", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "K1", :record-type :var} {:record-type :any}}
{{:name "_472", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "G1", :record-type :var} {:record-type :any}, {:name "G0", :record-type :var} {:record-type :any}, {:name "_470", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "X", :record-type :var} {:record-type :atom}, {:name "Z", :record-type :var} {:record-type :atom}, {:name "_4106", :record-type :var} {:record-type :atom}, {:name "Y", :record-type :var} {:record-type :atom}, {:name "Pos", :record-type :var} {:record-type :any}}
{}
{}
{{:name "_394", :record-type :var} {:record-type :any}}
{}
{{:name "_444", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "_448", :record-type :var} {:record-type :any}, {:name "_446", :record-type :var} {:record-type :any}}
{{:name "C1", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N", :record-type :var} {:record-type :any}, {:name "Par", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "G", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "File", :record-type :var} {:record-type :any}, {:name "Input", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "R", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "R", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "R", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}}
{{:name "R", :record-type :var} {:record-type :any}, {:name "_418", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}, {:name "_422", :record-type :var} {:record-type :any}}
{{:name "R", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}}
{{:name "R", :record-type :var} {:record-type :ground}, {:name "_418", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :ground}, {:name "_422", :record-type :var} {:record-type :any}}
{{:name "_424", :record-type :var} {:record-type :any}, {:name "R", :record-type :var} {:record-type :var}, {:name "_418", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}, {:name "_422", :record-type :var} {:record-type :any}}
{{:name "R", :record-type :var} {:record-type :nonvar}, {:name "X", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :atomic}, {:name "Y", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :nonvar}, {:name "N", :record-type :var} {:record-type :integer}}
{{:name "Cond", :record-type :var} {:record-type :any}, {:name "Formula", :record-type :var} {:record-type :any}}
{{:name "Cond1", :record-type :var} {:record-type :any}, {:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Formula1", :record-type :var} {:record-type :any}, {:name "Cond2", :record-type :var} {:record-type :any}, {:name "Formula2", :record-type :var} {:record-type :any}}
{{:name "_396", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}}
{{:name "Conds", :record-type :var} {:record-type :any}, {:name "Formula", :record-type :var} {:record-type :any}, {:name "_428", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "Referents", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{}
{{:name "T", :record-type :var} {:record-type :any}}
{{:name "I", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "I", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Tags", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "XDRS", :record-type :var} {:functor "xdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}, {:name "Stream", :record-type :var} {:record-type :ground}, {:name "DRS", :record-type :var} {:record-type :any}}
{{:name "Tags", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "XDRS", :record-type :var} {:functor "xdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}, {:name "Stream", :record-type :var} {:record-type :ground}, {:name "DRS", :record-type :var} {:record-type :any}}
{{:name "_394", :record-type :var} {:record-type :any}, {:name "_396", :record-type :var} {:record-type :any}}
{{:name "S", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_548", :record-type :var} {:record-type :any}, {:name "_550", :record-type :var} {:record-type :any}, {:name "Ext", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_540", :record-type :var} {:record-type :any}, {:name "Tags", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tuples", :record-type :var} {:record-type :any}, {:name "_542", :record-type :var} {:record-type :any}, {:name "_544", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}}
{{:name "_394", :record-type :var} {:record-type :any}, {:name "_396", :record-type :var} {:record-type :any}}
{}
{{:name "Other", :record-type :var} {:record-type :any}, {:name "Da", :record-type :var} {:record-type :any}, {:name "AttValue", :record-type :var} {:functor "quant", :arglist ({:record-type :any}), :record-type :compound}}
{}
{}
{{:name "CCG2", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Sem", :record-type :var} {:record-type :any}, {:name "CCG1", :record-type :var} {:record-type :any}, {:name "Tags", :record-type :var} {:record-type :any}, {:name "Der", :record-type :var} {:record-type :any}, {:name "CCG0", :record-type :var} {:record-type :any}, {:name "UDRS", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "Closed", :record-type :var} {:record-type :any}, {:name "End", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}, {:name "Start", :record-type :var} {:record-type :any}}
{{:name "Stream", :record-type :var} {:record-type :any}, {:name "DRS", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "_450", :record-type :var} {:record-type :any}, {:name "_452", :record-type :var} {:record-type :any}, {:name "_454", :record-type :var} {:record-type :any}}
{{:name "_424", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "_450", :record-type :var} {:record-type :any}, {:name "_452", :record-type :var} {:record-type :any}, {:name "_454", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "_450", :record-type :var} {:record-type :any}, {:name "_452", :record-type :var} {:record-type :any}, {:name "_454", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "_426", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "_426", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "_438", :record-type :var} {:record-type :any}, {:name "_440", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "_448", :record-type :var} {:record-type :any}, {:name "_452", :record-type :var} {:record-type :any}, {:name "_454", :record-type :var} {:record-type :any}}
{{:name "_448", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_452", :record-type :var} {:record-type :any}, {:name "_454", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "_450", :record-type :var} {:record-type :any}, {:name "_452", :record-type :var} {:record-type :any}, {:name "_454", :record-type :var} {:record-type :any}}
{{:name "Conjunct", :record-type :var} {:record-type :nonvar}, {:name "F", :record-type :var} {:record-type :atom}, {:name "N", :record-type :var} {:record-type :integer}}
{}
{}
{}
{}
{{:name "C", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Constraint", :record-type :var} {:record-type :any}, {:name "Constraint1", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "G", :record-type :var} {:record-type :any}}
{{:name "Conds", :record-type :var} {:record-type :any}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}}
{{:name "_646", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_616", :record-type :var} {:record-type :any}, {:name "_824", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:record-type :any}, {:name "_822", :record-type :var} {:record-type :any}, {:name "_826", :record-type :var} {:record-type :any}, {:name "_908", :record-type :var} {:record-type :any}, {:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "K", :record-type :var} {:record-type :any}, {:name "_904", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:record-type :any}, {:name "_1068", :record-type :var} {:record-type :any}, {:name "_988", :record-type :var} {:record-type :any}, {:name "_1070", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_906", :record-type :var} {:record-type :any}, {:name "_984", :record-type :var} {:record-type :any}, {:name "Z", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}}
{{:name "Y", :record-type :var} {:record-type :any}, {:name "L3", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D", :record-type :var} {:record-type :any}, {:name "_682", :record-type :var} {:record-type :any}, {:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "K", :record-type :var} {:record-type :any}, {:name "_652", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Z", :record-type :var} {:record-type :any}}
{{:name "_448", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:record-type :any}}
{{:name "L2", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "or", :arglist ({:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Sym", :record-type :var} {:record-type :atom}, {:name "X", :record-type :var} {:record-type :any}, {:name "P2", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Y", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "V", :record-type :var} {:record-type :any}, {:name "B3", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "duplex", :arglist ({:record-type :atom} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:record-type :empty-list}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:record-type :any} {:functor "app", :arglist ({:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "_Sym", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:functor "/", :arglist ({:functor ":", :arglist ({:record-type :atom} {:functor "/", :arglist ({:record-type :atom} {:functor ":", :arglist ({:record-type :atom} {:functor "/", :arglist ({:record-type :atom} {:record-type :atom}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:record-type :atom}), :record-type :compound}}
{{:name "Sem", :record-type :var} {:record-type :any}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:record-type :any}}
{{:name "P", :record-type :var} {:record-type :any}, {:name "Pos", :record-type :var} {:record-type :any}, {:name "Tag", :record-type :var} {:record-type :any}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "Ne", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Class", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "alfa", :arglist ({:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "named", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Type", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}}
{{:name "P", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "CC", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "prop", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "B", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_544", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:functor ":", :arglist ({:functor "/", :arglist ({:record-type :atom} {:record-type :atom}), :record-type :compound} {:record-type :atom}), :record-type :compound}}
{{:name "Y", :record-type :var} {:record-type :any}, {:name "_588", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P2", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "_Sym", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Z", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "not", :arglist ({:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Lemma", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}}
{{:name "Sym", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "_612", :record-type :var} {:record-type :any}, {:name "Att2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "role", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "F", :record-type :var} {:record-type :any}, {:name "Role", :record-type :var} {:record-type :any}, {:name "Att1", :record-type :var} {:record-type :any}, {:name "Sense", :record-type :var} {:record-type :any}, {:name "M", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "E", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "S", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}, {:name "_720", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "E", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "K", :record-type :var} {:record-type :any}, {:name "CC", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "prop", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "_Sym", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "imp", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Lemma", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Lemma", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "alfa", :arglist ({:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Lemma", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "K2", :record-type :var} {:record-type :any}, {:name "Coord", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "or", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Lemma", :record-type :var} {:record-type :any}, {:name "K1", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "Sym", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B3", :record-type :var} {:record-type :any}, {:name "YNQ", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "duplex", :arglist ({:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Pred", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :any}, {:name "Sense", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}}
{{:name "E", :record-type :var} {:record-type :any}, {:name "S1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B3", :record-type :var} {:record-type :any}, {:name "S2", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "F", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "K2", :record-type :var} {:record-type :any}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "S1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "S2", :record-type :var} {:record-type :any}, {:name "CC", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "sdrs", :arglist ({:arglist ({:functor "sub", :arglist ({:functor "lab", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "K1", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}, {:name "_816", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:functor ":", :arglist ({:functor "/", :arglist ({:functor ":", :arglist ({:record-type :atom} {:functor ":", :arglist ({:functor "/", :arglist ({:record-type :any} {:record-type :atom}), :record-type :compound} {:record-type :any}), :record-type :compound}), :record-type :compound} {:record-type :atom}), :record-type :compound} {:record-type :any}), :record-type :compound}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "alfa", :arglist ({:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Lemma", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Card", :record-type :var} {:record-type :any}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "_612", :record-type :var} {:record-type :any}, {:name "Att2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "role", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "card", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "F", :record-type :var} {:record-type :any}, {:name "Role", :record-type :var} {:record-type :any}, {:name "Att1", :record-type :var} {:record-type :any}, {:name "M", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "alfa", :arglist ({:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Lemma", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Y", :record-type :var} {:record-type :any}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "W", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "V", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "F", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "alfa", :arglist ({:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Lemma", :record-type :var} {:record-type :atom}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "sdrs", :arglist ({:arglist ({:functor "lab", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "_416", :record-type :var} {:record-type :any}, {:name "S2", :record-type :var} {:record-type :any}, {:name "K2", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "S1", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "K1", :record-type :var} {:record-type :any}}
{{:name "Sym", :record-type :var} {:record-type :atom}, {:name "E", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "_612", :record-type :var} {:record-type :any}, {:name "Att2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lam", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "not", :arglist ({:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "role", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "F", :record-type :var} {:record-type :any}, {:name "Role", :record-type :var} {:record-type :any}, {:name "Att1", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}, {:name "Z", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "Sym", :record-type :var} {:record-type :atom}, {:name "E", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Att2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "not", :arglist ({:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "role", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "F", :record-type :var} {:record-type :any}, {:name "Role", :record-type :var} {:record-type :any}, {:name "Att1", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "alfa", :arglist ({:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Lemma", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "P", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B3", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "imp", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "not", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "eq", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "_Sym", :record-type :var} {:record-type :any}, {:name "R", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:functor "/", :arglist ({:functor "/", :arglist ({:record-type :atom} {:record-type :atom}), :record-type :compound} {:functor "/", :arglist ({:record-type :atom} {:record-type :atom}), :record-type :compound}), :record-type :compound}}
{{:name "Sym", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_612", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Sense", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Coord", :record-type :var} {:record-type :any}, {:name "_586", :record-type :var} {:record-type :any}, {:name "_588", :record-type :var} {:record-type :any}, {:name "K2", :record-type :var} {:record-type :any}, {:name "CCat", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "K1", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "alfa", :arglist ({:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Lemma", :record-type :var} {:record-type :atom}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "alfa", :arglist ({:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Lemma", :record-type :var} {:record-type :atom}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Sym", :record-type :var} {:record-type :atom}, {:name "E", :record-type :var} {:record-type :any}, {:name "_612", :record-type :var} {:record-type :any}, {:name "Att2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "role", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "F", :record-type :var} {:record-type :any}, {:name "Role", :record-type :var} {:record-type :any}, {:name "Att1", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}, {:name "Z", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pos", :arglist ({:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "S", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Token", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:record-type :any}}
{{:name "P", :record-type :var} {:record-type :any}, {:name "B4", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B3", :record-type :var} {:record-type :any}, {:name "G", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "alfa", :arglist ({:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "imp", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Lemma", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "alfa", :arglist ({:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Lemma", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "alfa", :arglist ({:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Lemma", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:functor "/", :arglist ({:record-type :atom} {:record-type :atom}), :record-type :compound}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Y", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "alfa", :arglist ({:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Lemma", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "alfa", :arglist ({:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Lemma", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "K2", :record-type :var} {:record-type :any}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "S1", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_416", :record-type :var} {:record-type :any}, {:name "S2", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "sdrs", :arglist ({:arglist ({:functor "lab", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "K1", :record-type :var} {:record-type :any}}
{{:name "P", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "RN", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B3", :record-type :var} {:record-type :any}, {:name "U", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "alfa", :arglist ({:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :atom} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:record-type :empty-list}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "_636", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}}
{{:name "P", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_Lemma", :record-type :var} {:record-type :any}, {:name "U", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:record-type :empty-list}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:functor "app", :arglist ({:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:record-type :any}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "B", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "alfa", :arglist ({:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Lemma", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "alfa", :arglist ({:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Lemma", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "_Sym", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}, {:name "X", :record-type :var} {:record-type :any}, {:name "_Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Sym", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "F", :record-type :var} {:record-type :any}, {:name "Sense", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "alfa", :arglist ({:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Lemma", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "duplex", :arglist ({:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:record-type :any} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Lemma", :record-type :var} {:record-type :atom}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "alfa", :arglist ({:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Lemma", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "alfa", :arglist ({:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Lemma", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Pos", :record-type :var} {:record-type :any}, {:name "Tag", :record-type :var} {:record-type :any}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "Ne", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}, {:name "Class", :record-type :var} {:record-type :any}, {:name "Att2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "named", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "role", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Type", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :any}, {:name "Role", :record-type :var} {:record-type :any}, {:name "Att1", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "Y", :record-type :var} {:record-type :any}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P2", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "B", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Z", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "alfa", :arglist ({:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Lemma", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "PP", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Sense", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Y", :record-type :var} {:record-type :any}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "S1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "S2", :record-type :var} {:record-type :any}, {:name "CC", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "prop", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "prop", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "prop", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "F", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "Z", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "not", :arglist ({:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Lemma", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "alfa", :arglist ({:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Lemma", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "X", :record-type :var} {:record-type :any}, {:name "_544", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "sdrs", :arglist ({:arglist ({:functor "lab", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "_416", :record-type :var} {:record-type :any}, {:name "S2", :record-type :var} {:record-type :any}, {:name "K2", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "S1", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "K1", :record-type :var} {:record-type :any}}
{{:name "P", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "X2", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_586", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "B", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}}
{{:name "K2", :record-type :var} {:record-type :any}, {:name "Coord", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "not", :arglist ({:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Lemma", :record-type :var} {:record-type :any}, {:name "K1", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "P", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B3", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "duplex", :arglist ({:record-type :atom} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "card", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lam", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "eq", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:record-type :any} {:functor "app", :arglist ({:functor "app", :arglist ({:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "_Sym", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "PP", :record-type :var} {:record-type :any}, {:name "Z", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:functor "/", :arglist ({:functor "/", :arglist ({:functor "/", :arglist ({:functor ":", :arglist ({:record-type :atom} {:functor "/", :arglist ({:record-type :atom} {:record-type :atom}), :record-type :compound}), :record-type :compound} {:functor "/", :arglist ({:functor ":", :arglist ({:record-type :atom} {:functor "/", :arglist ({:record-type :atom} {:record-type :atom}), :record-type :compound}), :record-type :compound} {:record-type :atom}), :record-type :compound}), :record-type :compound} {:record-type :atom}), :record-type :compound} {:functor "/", :arglist ({:record-type :atom} {:record-type :atom}), :record-type :compound}), :record-type :compound}, {:name "TV", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "alfa", :arglist ({:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Lemma", :record-type :var} {:record-type :atom}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "alfa", :arglist ({:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Lemma", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Relation", :record-type :var} {:record-type :any}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "_674", :record-type :var} {:record-type :any}, {:name "Att2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "card", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "F", :record-type :var} {:record-type :any}, {:name "Att1", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}, {:name "Digit", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "Sym", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "B3", :record-type :var} {:record-type :any}, {:name "_612", :record-type :var} {:record-type :any}, {:name "Att2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lam", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "imp", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "role", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "F", :record-type :var} {:record-type :any}, {:name "Role", :record-type :var} {:record-type :any}, {:name "Att1", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}, {:name "Z", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "Sym", :record-type :var} {:record-type :atom}, {:name "E", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}, {:name "Att2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "role", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "F", :record-type :var} {:record-type :any}, {:name "Role", :record-type :var} {:record-type :any}, {:name "Att1", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "X", :record-type :var} {:record-type :any}, {:name "NP", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "_636", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "imp", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Lemma", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}}
{{:name "Sym", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B3", :record-type :var} {:record-type :any}, {:name "Rel", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "duplex", :arglist ({:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:record-type :any} {:functor "app", :arglist ({:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Pred", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :any}, {:name "Sense", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:functor ":", :arglist ({:record-type :atom} {:functor "/", :arglist ({:record-type :atom} {:functor ":", :arglist ({:record-type :atom} {:functor "/", :arglist ({:record-type :atom} {:record-type :atom}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "VP", :record-type :var} {:record-type :any}}
{{:name "P", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "X2", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_586", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:record-type :empty-list}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "B", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "Z", :record-type :var} {:record-type :any}}
{{:name "A2", :record-type :var} {:record-type :any}, {:name "P", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_638", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:functor "app", :arglist ({:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound} {:functor "app", :arglist ({:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "_636", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Z", :record-type :var} {:record-type :any}}
{{:name "Y", :record-type :var} {:record-type :any}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P2", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "B", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Z", :record-type :var} {:record-type :any}}
{{:name "Relation", :record-type :var} {:record-type :any}, {:name "Pos", :record-type :var} {:record-type :any}, {:name "Tag", :record-type :var} {:record-type :any}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "Class", :record-type :var} {:record-type :any}, {:name "_612", :record-type :var} {:record-type :any}, {:name "Att2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "named", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "NE", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :any}, {:name "Att1", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "K2", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "S1", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_416", :record-type :var} {:record-type :any}, {:name "S2", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "sdrs", :arglist ({:arglist ({:functor "lab", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "_Sym", :record-type :var} {:record-type :any}, {:name "K1", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "alfa", :arglist ({:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Lemma", :record-type :var} {:record-type :atom}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "alfa", :arglist ({:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Lemma", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Sym", :record-type :var} {:record-type :atom}, {:name "E", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_612", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "not", :arglist ({:functor "app", :arglist ({:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "F", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:record-type :empty-list}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "U", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :any}, {:name "_708", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_706", :record-type :var} {:record-type :any}}
{{:name "P", :record-type :var} {:record-type :any}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "V", :record-type :var} {:record-type :any}, {:name "_612", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pos", :arglist ({:functor "app", :arglist ({:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "F", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "Sym", :record-type :var} {:record-type :atom}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_612", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "not", :arglist ({:functor "app", :arglist ({:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "F", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "alfa", :arglist ({:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Lemma", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "not", :arglist ({:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Sym", :record-type :var} {:record-type :atom}, {:name "F", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "S", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "P", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:record-type :empty-list}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "_Sym", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:functor "/", :arglist ({:functor "/", :arglist ({:record-type :atom} {:record-type :atom}), :record-type :compound} {:record-type :atom}), :record-type :compound}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "alfa", :arglist ({:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Lemma", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "_Sym", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "_612", :record-type :var} {:record-type :any}, {:name "_Index", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "Sym", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}, {:name "Att2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "role", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "F", :record-type :var} {:record-type :any}, {:name "Role", :record-type :var} {:record-type :any}, {:name "Att1", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "P", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "X2", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "B", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "Z", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "_636", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Lemma", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Y", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B3", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "duplex", :arglist ({:record-type :atom} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor "card", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lam", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "eq", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:record-type :any} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "_Sym", :record-type :var} {:record-type :any}, {:name "_1992", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "PP", :record-type :var} {:record-type :any}, {:name "Z", :record-type :var} {:record-type :any}}
{{:name "Sym", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B3", :record-type :var} {:record-type :any}, {:name "Rel", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "duplex", :arglist ({:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Pred", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :any}, {:name "Sense", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "alfa", :arglist ({:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "imp", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Lemma", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "G", :record-type :var} {:record-type :any}}
{{:name "P", :record-type :var} {:record-type :any}, {:name "Sym", :record-type :var} {:record-type :atom}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "V", :record-type :var} {:record-type :any}, {:name "_612", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "not", :arglist ({:functor "app", :arglist ({:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "F", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "alfa", :arglist ({:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Lemma", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Sense", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Pos", :record-type :var} {:record-type :any}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}, {:name "Att2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "role", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "F", :record-type :var} {:record-type :any}, {:name "Role", :record-type :var} {:record-type :any}, {:name "Att1", :record-type :var} {:record-type :any}, {:name "Sense", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "A1", :record-type :var} {:record-type :any}, {:name "_638", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "A2", :record-type :var} {:record-type :any}, {:name "_636", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "alfa", :arglist ({:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Lemma", :record-type :var} {:record-type :atom}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Pos", :record-type :var} {:record-type :any}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "_612", :record-type :var} {:record-type :any}, {:name "Att2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "role", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "F", :record-type :var} {:record-type :any}, {:name "Role", :record-type :var} {:record-type :any}, {:name "Att1", :record-type :var} {:record-type :any}, {:name "Sense", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{}
{{:name "L", :record-type :var} {:record-type :empty-list}, {:name "D", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "T", :record-type :var} {:record-type :nonvar}, {:name "N", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}}
{{:name "WhiteCodes", :record-type :var} {:type {:record-type :integer}, :record-type :list}, {:name "Atom", :record-type :var} {:record-type :atom}}
{}
{}
{}
{{:name "H", :record-type :var} {:record-type :any}, {:name "WT", :record-type :var} {:record-type :any}, {:name "Comm", :record-type :var} {:record-type :any}}
{{:name "Tab", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :var}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Tab", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :var}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "R", :record-type :var} {:record-type :any}, {:name "NewTab", :record-type :var} {:record-type :number}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "L", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Up", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "Feature", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :atom}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Up", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Up", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "_396", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "New", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "R", :record-type :var} {:record-type :any}, {:name "NewTab", :record-type :var} {:record-type :number}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "L", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Up", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "Feature", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :atom}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "R", :record-type :var} {:record-type :any}, {:name "NewTab", :record-type :var} {:record-type :number}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "L", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "New", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "_396", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "R", :record-type :var} {:record-type :any}, {:name "NewTab", :record-type :var} {:record-type :number}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "L", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Functor", :record-type :var} {:record-type :any}, {:name "VarName", :record-type :var} {:record-type :any}}
{{:name "Functor", :record-type :var} {:record-type :any}, {:name "NewList", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "VarName", :record-type :var} {:record-type :any}, {:name "MoreOccurs", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "OldList", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Occur", :record-type :var} {:record-type :any}, {:name "Functor", :record-type :var} {:record-type :any}, {:name "MoreNewOccurs", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "VarName", :record-type :var} {:record-type :any}, {:name "MoreOccurs", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Zin", :record-type :var} {:record-type :number}, {:name "X", :record-type :var} {:record-type :number}, {:name "_400", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Pos", :record-type :var} {:record-type :number}}
{}
{{:name "XDRS1", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "XDRS0", :record-type :var} {:record-type :any}, {:name "Id", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Rel", :record-type :var} {:record-type :atom}, {:name "S2", :record-type :var} {:record-type :any}, {:name "_Pops", :record-type :var} {:record-type :any}, {:name "S1", :record-type :var} {:record-type :any}, {:name "S3", :record-type :var} {:record-type :any}}
{{:name "Rel", :record-type :var} {:record-type :atom}, {:name "S2", :record-type :var} {:record-type :any}, {:name "_Pops", :record-type :var} {:record-type :any}, {:name "S1", :record-type :var} {:record-type :any}, {:name "S3", :record-type :var} {:record-type :any}}
{{:name "K2", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "_4216", :record-type :var} {:record-type :any}, {:name "_4218", :record-type :var} {:record-type :any}, {:name "DRS", :record-type :var} {:record-type :any}, {:name "Rel", :record-type :var} {:record-type :any}, {:name "_4274", :record-type :var} {:record-type :any}, {:name "K1", :record-type :var} {:record-type :any}, {:name "_4122", :record-type :var} {:record-type :any}, {:name "_4120", :record-type :var} {:record-type :any}, {:name "_4272", :record-type :var} {:record-type :any}, {:name "_4220", :record-type :var} {:record-type :any}, {:name "SDRS", :record-type :var} {:functor "sdrs", :arglist ({:arglist ({:functor "sub", :arglist ({:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}, {:name "_4126", :record-type :var} {:record-type :any}}
{{:name "Rel", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:record-type :any}, {:name "R", :record-type :var} {:record-type :any}, {:name "S2", :record-type :var} {:record-type :any}, {:name "S1", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Rel", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "New", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "R1", :record-type :var} {:record-type :any}, {:name "R2", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "Rel", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "R", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "K2", :record-type :var} {:record-type :any}, {:name "SDRS", :record-type :var} {:functor "sdrs", :arglist ({:arglist ({:functor "sub", :arglist ({:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:type {:record-type :any}, :record-type :list}), :record-type :compound}, {:name "K1", :record-type :var} {:record-type :any}}
{{:name "Term", :record-type :var} {:record-type :any}, {:name "Variables", :record-type :var} {:type {:record-type :var}, :record-type :list}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "C1", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D", :record-type :var} {:record-type :any}, {:name "C3", :record-type :var} {:record-type :any}}
{{:name "C1", :record-type :var} {:arglist #{{:type {:record-type :any}, :record-type :list} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "D1", :record-type :var} {:arglist #{{:type {:record-type :any}, :record-type :list} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "D2", :record-type :var} {:record-type :any}, {:name "D3", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:record-type :any}, {:name "C3", :record-type :var} {:record-type :any}}
{{:name "L2", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "L3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "L3", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L", :record-type :var} {:record-type :any}}
{{:name "_420", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:record-type :any}}
{{:name "R0", :record-type :var} {:record-type :any}, {:name "D1", :record-type :var} {:record-type :any}, {:name "D0", :record-type :var} {:record-type :any}, {:name "D2", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "Atom", :record-type :var} {:record-type :any}, {:name "Prompt", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "_3986", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "X", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "HostType", :record-type :var} {:record-type :any}}
{{:name "Var", :record-type :var} {:record-type :any}, {:name "_400", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "MoreVars", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_398", :record-type :var} {:record-type :any}}
{{:name "_396", :record-type :var} {:record-type :any}}
{{:name "Edge", :record-type :var} {:record-type :any}, {:name "Node1", :record-type :var} {:record-type :any}, {:name "_Index", :record-type :var} {:record-type :any}, {:name "Node2", :record-type :var} {:record-type :any}, {:name "Order", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Words", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "T", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "_444", :record-type :var} {:record-type :integer}, {:name "C", :record-type :var} {:record-type :nonvar}, {:name "R", :record-type :var} {:record-type :atomic}}
{{:name "AbsDom", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "Par", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Abs", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Dom", :record-type :var} {:record-type :any}, {:name "_622", :record-type :var} {:record-type :any}, {:name "AntInd", :record-type :var} {:record-type :any}, {:name "AI", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "AbsCond", :record-type :var} {:record-type :any}, {:name "Ind", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_Sym", :record-type :var} {:record-type :any}, {:name "Lam", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :any}, {:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B", :record-type :var} {:record-type :any}, {:name "ParRef", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Drs", :record-type :var} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}}
{{:name "ID", :record-type :var} {:record-type :any}, {:name "Tags", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Rel", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_6504", :record-type :var} {:record-type :any}}
{{:name "Rel", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "H", :record-type :var} {:record-type :any}, {:name "WT", :record-type :var} {:record-type :any}, {:name "Comm", :record-type :var} {:record-type :any}}
{{:name "Rep", :record-type :var} {:record-type :any}, {:name "Max", :record-type :var} {:record-type :any}, {:name "G", :record-type :var} {:arglist #{{:functor "&", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "if", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bag", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "_432", :record-type :var} {:record-type :any}}
{{:name "_436", :record-type :var} {:record-type :any}, {:name "_438", :record-type :var} {:record-type :any}, {:name "_434", :record-type :var} {:record-type :any}, {:name "_432", :record-type :var} {:record-type :any}}
{{:name "Rep", :record-type :var} {:record-type :any}, {:name "Max", :record-type :var} {:record-type :any}, {:name "G", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :integer}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "_436", :record-type :var} {:record-type :any}, {:name "_434", :record-type :var} {:record-type :any}, {:name "_432", :record-type :var} {:record-type :any}}
{{:name "_436", :record-type :var} {:record-type :any}, {:name "_434", :record-type :var} {:record-type :any}, {:name "_432", :record-type :var} {:record-type :any}}
{{:name "M1", :record-type :var} {:record-type :number}, {:name "Rep", :record-type :var} {:record-type :any}, {:name "Max", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "G", :record-type :var} {:arglist #{{:functor "&", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "if", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bag", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "_432", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :integer}}
{{:name "Rep1", :record-type :var} {:record-type :any}, {:name "Rep", :record-type :var} {:record-type :any}, {:name "Max", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "_678", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:arglist #{{:functor "&", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "if", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bag", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "G", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :integer}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "_436", :record-type :var} {:record-type :any}, {:name "_434", :record-type :var} {:record-type :any}, {:name "_432", :record-type :var} {:record-type :any}}
{{:name "_436", :record-type :var} {:record-type :any}, {:name "_434", :record-type :var} {:record-type :any}, {:name "_432", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:record-type :any}, {:name "Rep", :record-type :var} {:record-type :any}, {:name "_434", :record-type :var} {:record-type :any}, {:name "G", :record-type :var} {:arglist #{{:functor "&", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "if", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bag", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "_432", :record-type :var} {:record-type :any}}
{{:name "_436", :record-type :var} {:record-type :any}, {:name "_434", :record-type :var} {:record-type :any}, {:name "_432", :record-type :var} {:record-type :any}}
{{:name "T", :record-type :var} {:record-type :any}}
{{:name "X2", :record-type :var} {:record-type :any}, {:name "T2", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X1", :record-type :var} {:record-type :any}, {:name "T1", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "T3", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Lx", :record-type :var} {:arglist ({:record-type :any}), :record-type :tuple}, {:name "Y", :record-type :var} {:record-type :any}, {:name "Ly", :record-type :var} {:arglist ({:record-type :any}), :record-type :tuple}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Lx", :record-type :var} {:record-type :empty-list}, {:name "Y", :record-type :var} {:record-type :any}, {:name "Ly", :record-type :var} {:record-type :empty-list}}
{{:name "ArgY", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :nonvar}, {:name "F", :record-type :var} {:record-type :any}, {:name "Lx", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :nonvar}, {:name "ArgX", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Ly", :record-type :var} {:record-type :any}}
{{:name "_464", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:record-type :any}}
{{:name "_646", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "_642", :record-type :var} {:record-type :any}, {:name "Rel", :record-type :var} {:record-type :any}, {:name "_576", :record-type :var} {:record-type :any}, {:name "_768", :record-type :var} {:record-type :any}, {:name "_498", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "_644", :record-type :var} {:record-type :any}, {:name "_500", :record-type :var} {:record-type :any}, {:name "_578", :record-type :var} {:record-type :any}}
{{:name "Rel", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "New", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "R1", :record-type :var} {:record-type :any}, {:name "R2", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "_792", :record-type :var} {:record-type :any}, {:name "_646", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "_642", :record-type :var} {:record-type :any}, {:name "Rel", :record-type :var} {:record-type :any}, {:name "_576", :record-type :var} {:record-type :any}, {:name "_498", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "_644", :record-type :var} {:record-type :any}, {:name "_500", :record-type :var} {:record-type :any}, {:name "_578", :record-type :var} {:record-type :any}}
{{:name "K2", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B2", :record-type :var} {:record-type :any}, {:name "R3", :record-type :var} {:record-type :any}, {:name "R2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B3", :record-type :var} {:record-type :any}, {:name "R1", :record-type :var} {:record-type :any}, {:name "Rel", :record-type :var} {:record-type :any}, {:name "K1", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "SDRS", :record-type :var} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}}
{{:name "K2", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B4", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "R3", :record-type :var} {:record-type :any}, {:name "R2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "R1", :record-type :var} {:record-type :any}, {:name "Rel", :record-type :var} {:record-type :any}, {:name "K1", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "SDRS", :record-type :var} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "Rel", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "R", :record-type :var} {:record-type :any}, {:name "B3", :record-type :var} {:record-type :any}, {:name "SDRS", :record-type :var} {:record-type :any}, {:name "K3", :record-type :var} {:record-type :any}}
{{:name "K2", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B2", :record-type :var} {:record-type :any}, {:name "R3", :record-type :var} {:record-type :any}, {:name "R2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "R1", :record-type :var} {:record-type :any}, {:name "Rel", :record-type :var} {:record-type :any}, {:name "K1", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "SDRS", :record-type :var} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}}
{{:name "K2", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B4", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "R3", :record-type :var} {:record-type :any}, {:name "R2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B3", :record-type :var} {:record-type :any}, {:name "R1", :record-type :var} {:record-type :any}, {:name "Rel", :record-type :var} {:record-type :any}, {:name "K1", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "SDRS", :record-type :var} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "_8010", :record-type :var} {:record-type :any}}
{{:name "Var", :record-type :var} {:record-type :var}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "R1", :record-type :var} {:record-type :any}, {:name "R2", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}}
{{:name "N1", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "T2", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "B3", :record-type :var} {:record-type :any}, {:name "N2", :record-type :var} {:record-type :any}, {:name "T1", :record-type :var} {:record-type :any}}
{{:name "N1", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "B3", :record-type :var} {:record-type :any}, {:name "N2", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "R2", :record-type :var} {:record-type :any}}
{{:name "T", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Var", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "N1", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "B3", :record-type :var} {:record-type :any}, {:name "N2", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}}
{{:name "B", :record-type :var} {:record-type :any}}
{{:name "N", :record-type :var} {:record-type :any}, {:name "_430", :record-type :var} {:record-type :any}}
{{:name "N", :record-type :var} {:record-type :any}}
{{:name "Bi1", :record-type :var} {:record-type :any}, {:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X2", :record-type :var} {:record-type :any}, {:name "Ac", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X1", :record-type :var} {:record-type :any}, {:name "Alfa", :record-type :var} {:record-type :any}, {:name "Bi2", :record-type :var} {:record-type :any}}
{{:name "Bi1", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:arglist #{{:functor "smerge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Ac", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Alfa", :record-type :var} {:record-type :any}, {:name "Bi2", :record-type :var} {:record-type :any}}
{{:name "Bi1", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Ac", :record-type :var} {:record-type :any}, {:name "B3", :record-type :var} {:record-type :any}, {:name "Res", :record-type :var} {:record-type :any}, {:name "Alfa", :record-type :var} {:record-type :any}, {:name "Bi2", :record-type :var} {:record-type :any}}
{{:name "Bi1", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:arglist #{{:functor "smerge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Ac", :record-type :var} {:record-type :any}, {:name "Alfa", :record-type :var} {:record-type :any}, {:name "Bi2", :record-type :var} {:record-type :any}}
{{:name "Bi1", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:arglist #{{:functor "smerge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Ac", :record-type :var} {:record-type :any}, {:name "Alfa", :record-type :var} {:record-type :any}, {:name "Bi2", :record-type :var} {:record-type :any}}
{{:name "Bi1", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Ac", :record-type :var} {:record-type :any}, {:name "Res", :record-type :var} {:record-type :any}, {:name "Alfa", :record-type :var} {:record-type :any}, {:name "Bi2", :record-type :var} {:record-type :any}}
{{:name "Res", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :any}, {:name "B3", :record-type :var} {:record-type :any}, {:name "Ac", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}, {:name "Bi2", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "Bi1", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Alfa", :record-type :var} {:record-type :any}}
{{:name "Bi1", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:arglist #{{:functor "smerge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Ac", :record-type :var} {:record-type :any}, {:name "Alfa", :record-type :var} {:record-type :any}, {:name "Bi2", :record-type :var} {:record-type :any}}
{{:name "Bi1", :record-type :var} {:record-type :any}, {:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Ac", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Alfa", :record-type :var} {:record-type :any}, {:name "Bi2", :record-type :var} {:record-type :any}, {:name "Cond", :record-type :var} {:record-type :any}}
{{:name "MoreQuantifiedAtoms", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Atom", :record-type :var} {:record-type :any}, {:name "Quantifying", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "MoreAtoms", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Atoms", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Quantifying", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "QuantifiedAtoms", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Atoms", :record-type :var} {:record-type :any}, {:name "_422", :record-type :var} {:record-type :any}}
{{:name "_420", :record-type :var} {:record-type :any}, {:name "_422", :record-type :var} {:record-type :any}}
{{:name "MoreVarStructs", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Variable", :record-type :var} {:record-type :any}, {:name "MoreVariables", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Where", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}}
{{:name "Functor", :record-type :var} {:record-type :any}}
{{:name "Functor", :record-type :var} {:record-type :any}, {:name "Tail", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Functor", :record-type :var} {:record-type :any}, {:name "Head", :record-type :var} {:record-type :any}, {:name "Tail", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "NewTail", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}}
{{:name "_458", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_434", :record-type :var} {:record-type :any}, {:name "_452", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{{:name "H", :record-type :var} {:record-type :any}, {:name "WT", :record-type :var} {:record-type :any}}
{{:name "H", :record-type :var} {:record-type :any}, {:name "WT", :record-type :var} {:record-type :any}, {:name "Comm", :record-type :var} {:record-type :any}}
{{:name "_408", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}, {:name "_474", :record-type :var} {:record-type :any}}
{{:name "_408", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}}
{{:name "H", :record-type :var} {:record-type :any}, {:name "_504", :record-type :var} {:record-type :any}, {:name "_552", :record-type :var} {:record-type :any}, {:name "WT", :record-type :var} {:record-type :any}}
{{:name "_508", :record-type :var} {:record-type :any}, {:name "_408", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}}
{{:name "_408", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}}
{{:name "_408", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}}
{}
{}
{{:name "A", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}}
{{:name "_412", :record-type :var} {:record-type :any}, {:name "_520", :record-type :var} {:record-type :any}, {:name "M", :record-type :var} {:record-type :any}, {:name "_466", :record-type :var} {:record-type :any}, {:name "Timex", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "_412", :record-type :var} {:record-type :any}, {:name "_520", :record-type :var} {:record-type :any}, {:name "M", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "_466", :record-type :var} {:record-type :any}, {:name "_574", :record-type :var} {:record-type :any}, {:name "Timex", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "S", :record-type :var} {:record-type :any}, {:name "H2", :record-type :var} {:record-type :integer}, {:name "S1", :record-type :var} {:record-type :integer}, {:name "H1", :record-type :var} {:record-type :integer}, {:name "S2", :record-type :var} {:record-type :integer}, {:name "M1", :record-type :var} {:record-type :integer}, {:name "M2", :record-type :var} {:record-type :integer}, {:name "H", :record-type :var} {:record-type :any}, {:name "Timex", :record-type :var} {:arglist ({:record-type :integer} {:record-type :integer} {:record-type :integer} {:record-type :integer} {:record-type :integer} {:record-type :integer} {:record-type :integer} {:record-type :integer}), :record-type :tuple}, {:name "M", :record-type :var} {:record-type :any}}
{{:name "Y", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:record-type :any}, {:name "Y2", :record-type :var} {:record-type :integer}, {:name "M1", :record-type :var} {:record-type :integer}, {:name "M2", :record-type :var} {:record-type :integer}, {:name "Y1", :record-type :var} {:record-type :integer}, {:name "Y4", :record-type :var} {:record-type :integer}, {:name "Timex", :record-type :var} {:arglist ({:record-type :integer} {:record-type :integer} {:record-type :integer} {:record-type :integer} {:record-type :integer} {:record-type :integer} {:record-type :integer} {:record-type :integer} {:record-type :integer}), :record-type :tuple}, {:name "D2", :record-type :var} {:record-type :integer}, {:name "M", :record-type :var} {:record-type :any}, {:name "D1", :record-type :var} {:record-type :integer}, {:name "PM", :record-type :var} {:record-type :integer}, {:name "C", :record-type :var} {:record-type :any}, {:name "Y3", :record-type :var} {:record-type :integer}}
{{:name "_412", :record-type :var} {:record-type :any}, {:name "_520", :record-type :var} {:record-type :any}, {:name "M", :record-type :var} {:record-type :any}, {:name "_466", :record-type :var} {:record-type :any}, {:name "Timex", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "F2", :record-type :var} {:record-type :any}, {:name "F1", :record-type :var} {:record-type :any}, {:name "Sense", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "F2", :record-type :var} {:record-type :any}, {:name "F1", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}}
{{:name "F2", :record-type :var} {:record-type :any}, {:name "F1", :record-type :var} {:record-type :any}, {:name "Sense", :record-type :var} {:record-type :any}}
{{:name "F2", :record-type :var} {:record-type :any}, {:name "F1", :record-type :var} {:record-type :any}, {:name "Sense", :record-type :var} {:record-type :any}}
{{:name "F", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:arglist #{{:functor "time", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "date", :arglist ({:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "date", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "_Sense", :record-type :var} {:record-type :any}}
{{:name "F2", :record-type :var} {:record-type :any}, {:name "F1", :record-type :var} {:record-type :any}, {:name "Sense", :record-type :var} {:record-type :any}}
{{:name "F2", :record-type :var} {:record-type :any}, {:name "F1", :record-type :var} {:record-type :any}, {:name "Sense", :record-type :var} {:record-type :any}}
{{:name "F2", :record-type :var} {:record-type :any}, {:name "F1", :record-type :var} {:record-type :any}, {:name "Sense", :record-type :var} {:record-type :any}}
{{:name "F2", :record-type :var} {:record-type :atom}, {:name "A3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "A1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "A2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "A4", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "F1", :record-type :var} {:record-type :any}, {:name "Sense", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Substitutions", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Y", :record-type :var} {:record-type :any}}
{}
{{:name "B", :record-type :var} {:record-type :any}}
{{:name "T", :record-type :var} {:record-type :any}}
{{:name "R0", :record-type :var} {:record-type :any}, {:name "D0", :record-type :var} {:record-type :any}, {:name "_434", :record-type :var} {:record-type :any}}
{{:name "NA", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "R0", :record-type :var} {:record-type :any}, {:name "D1", :record-type :var} {:record-type :any}, {:name "D0", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "R", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D2", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "PDs", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:record-type :any}, {:name "_484", :record-type :var} {:record-type :any}, {:name "Der", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "_480", :record-type :var} {:record-type :any}, {:name "_486", :record-type :var} {:record-type :any}}
{{:name "_394", :record-type :var} {:record-type :any}}
{{:name "H2", :record-type :var} {:record-type :any}, {:name "R", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "H", :record-type :var} {:record-type :any}}
{{:name "Num", :record-type :var} {:record-type :any}}
{{:name "_420", :record-type :var} {:record-type :any}, {:name "D0", :record-type :var} {:record-type :any}}
{{:name "NA", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D1", :record-type :var} {:record-type :any}, {:name "D2", :record-type :var} {:record-type :any}, {:name "PE", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "PN", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "E", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :number}, {:name "D", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "G", :record-type :var} {:record-type :any}}
{{:name "Option", :record-type :var} {:record-type :any}, {:name "Value", :record-type :var} {:record-type :any}}
{{:name "Question", :record-type :var} {:record-type :any}, {:name "Answer", :record-type :var} {:record-type :any}, {:name "_Times", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "Y", :record-type :var} {:record-type :var}, {:name "C", :record-type :var} {:record-type :any}}
{{:name "Y", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}}
{{:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "T", :record-type :var} {:record-type :any}}
{}
{{:name "N3", :record-type :var} {:record-type :any}, {:name "T3", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sub", :arglist ({:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "N2", :record-type :var} {:record-type :any}, {:name "W", :record-type :var} {:record-type :any}, {:name "R3", :record-type :var} {:record-type :any}, {:name "R2", :record-type :var} {:record-type :any}, {:name "R1", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "T2", :record-type :var} {:record-type :any}, {:name "R", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sub", :arglist ({:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "T1", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:record-type :any}, {:name "I2", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :any}, {:name "I3", :record-type :var} {:record-type :any}}
{{:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N2", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "W", :record-type :var} {:record-type :any}, {:name "Word", :record-type :var} {:record-type :any}, {:name "R2", :record-type :var} {:record-type :any}, {:name "R1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "K", :record-type :var} {:record-type :any}, {:name "T2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "R", :record-type :var} {:record-type :any}, {:name "T1", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_482", :record-type :var} {:record-type :any}, {:name "I2", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:functor "tuple", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any} {:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound}}
{{:name "Y", :record-type :var} {:record-type :nonvar}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N2", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "W", :record-type :var} {:record-type :any}, {:name "E3", :record-type :var} {:functor "tuple", :arglist ({:type {:record-type :any}, :record-type :list} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:record-type :nonvar}), :record-type :compound} {:record-type :any}), :record-type :compound}, {:name "Word", :record-type :var} {:record-type :any}, {:name "R2", :record-type :var} {:record-type :any}, {:name "R1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "K", :record-type :var} {:record-type :any}, {:name "_516", :record-type :var} {:record-type :any}, {:name "CC", :record-type :var} {:record-type :any}, {:name "E2", :record-type :var} {:functor "tuple", :arglist ({:record-type :empty-list} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:record-type :nonvar}), :record-type :compound} {:record-type :empty-list}), :record-type :compound}, {:name "T2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Sense", :record-type :var} {:record-type :any}, {:name "T1", :record-type :var} {:record-type :any}, {:name "D2", :record-type :var} {:record-type :any}, {:name "D1", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :nonvar}, {:name "I1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I2", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :any}, {:name "E1", :record-type :var} {:functor "tuple", :arglist ({:record-type :empty-list} {:record-type :any} {:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:record-type :empty-list}), :record-type :compound}}
{{:name "N3", :record-type :var} {:record-type :any}, {:name "T3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "K2", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N2", :record-type :var} {:record-type :any}, {:name "W", :record-type :var} {:record-type :any}, {:name "R1", :record-type :var} {:record-type :any}, {:name "_474", :record-type :var} {:record-type :any}, {:name "N4", :record-type :var} {:record-type :any}, {:name "CC", :record-type :var} {:record-type :any}, {:name "E2", :record-type :var} {:functor "tuple", :arglist ({:record-type :empty-list} {:functor ":", :arglist ({:record-type :any} {:record-type :atom}), :record-type :compound} {:record-type :atom} {:record-type :any} {:record-type :empty-list}), :record-type :compound}, {:name "_1486", :record-type :var} {:record-type :any}, {:name "K1", :record-type :var} {:record-type :any}, {:name "T2", :record-type :var} {:record-type :any}, {:name "T1", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sub", :arglist ({:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "I1", :record-type :var} {:record-type :any}, {:name "I2", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :any}, {:name "_444", :record-type :var} {:record-type :any}, {:name "E1", :record-type :var} {:functor "tuple", :arglist ({:record-type :empty-list} {:record-type :any} {:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:record-type :atom}), :record-type :compound} {:record-type :empty-list}), :record-type :compound}, {:name "_1230", :record-type :var} {:record-type :any}, {:name "I3", :record-type :var} {:record-type :any}}
{{:name "N3", :record-type :var} {:record-type :any}, {:name "T3", :record-type :var} {:record-type :any}, {:name "N2", :record-type :var} {:record-type :any}, {:name "W", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sub", :arglist ({:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "R3", :record-type :var} {:record-type :any}, {:name "R2", :record-type :var} {:record-type :any}, {:name "R1", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "T2", :record-type :var} {:record-type :any}, {:name "T1", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sub", :arglist ({:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "I2", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :any}, {:name "I3", :record-type :var} {:record-type :any}}
{{:name "N3", :record-type :var} {:record-type :any}, {:name "T3", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N2", :record-type :var} {:record-type :any}, {:name "W", :record-type :var} {:record-type :any}, {:name "Dom", :record-type :var} {:record-type :any}, {:name "R1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "K", :record-type :var} {:record-type :any}, {:name "T2", :record-type :var} {:record-type :any}, {:name "T1", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sub", :arglist ({:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "_1186", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :nonvar}, {:name "I1", :record-type :var} {:record-type :any}, {:name "_458", :record-type :var} {:record-type :any}, {:name "_930", :record-type :var} {:record-type :any}, {:name "I2", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :any}, {:name "_488", :record-type :var} {:record-type :any}, {:name "I3", :record-type :var} {:record-type :any}}
{{:name "N3", :record-type :var} {:record-type :any}, {:name "T3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N2", :record-type :var} {:record-type :any}, {:name "W", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sub", :arglist ({:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "R3", :record-type :var} {:record-type :any}, {:name "R2", :record-type :var} {:record-type :any}, {:name "R1", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "T2", :record-type :var} {:record-type :any}, {:name "T1", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sub", :arglist ({:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "I2", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:functor "tuple", :arglist ({:record-type :empty-list} {:record-type :any} {:record-type :atom} {:record-type :any} {:record-type :empty-list}), :record-type :compound}, {:name "I3", :record-type :var} {:record-type :any}}
{{:name "Sym", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N2", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "W", :record-type :var} {:record-type :any}, {:name "Word", :record-type :var} {:record-type :any}, {:name "R2", :record-type :var} {:record-type :any}, {:name "Dom", :record-type :var} {:record-type :any}, {:name "R1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "K", :record-type :var} {:record-type :any}, {:name "_516", :record-type :var} {:record-type :any}, {:name "CC", :record-type :var} {:record-type :any}, {:name "E2", :record-type :var} {:functor "tuple", :arglist ({:type {:record-type :any}, :record-type :list} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:record-type :nonvar}), :record-type :compound} {:record-type :any}), :record-type :compound}, {:name "Type", :record-type :var} {:record-type :any}, {:name "T2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "T1", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :nonvar}, {:name "I1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_482", :record-type :var} {:record-type :any}, {:name "I2", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :any}, {:name "E1", :record-type :var} {:functor "tuple", :arglist ({:record-type :empty-list} {:record-type :any} {:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:record-type :empty-list}), :record-type :compound}}
{{:name "Y", :record-type :var} {:record-type :nonvar}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N2", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "W", :record-type :var} {:record-type :any}, {:name "E3", :record-type :var} {:functor "tuple", :arglist ({:type {:record-type :any}, :record-type :list} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:record-type :nonvar}), :record-type :compound} {:record-type :any}), :record-type :compound}, {:name "Word", :record-type :var} {:record-type :any}, {:name "R2", :record-type :var} {:record-type :any}, {:name "R1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "K", :record-type :var} {:record-type :any}, {:name "_516", :record-type :var} {:record-type :any}, {:name "CC", :record-type :var} {:record-type :any}, {:name "E2", :record-type :var} {:functor "tuple", :arglist ({:record-type :empty-list} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:record-type :nonvar}), :record-type :compound} {:record-type :empty-list}), :record-type :compound}, {:name "T2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "T1", :record-type :var} {:record-type :any}, {:name "D2", :record-type :var} {:record-type :any}, {:name "D1", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :nonvar}, {:name "I1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Dir", :record-type :var} {:record-type :any}, {:name "I2", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :any}, {:name "E1", :record-type :var} {:functor "tuple", :arglist ({:record-type :empty-list} {:record-type :any} {:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:record-type :empty-list}), :record-type :compound}}
{{:name "N3", :record-type :var} {:record-type :any}, {:name "T3", :record-type :var} {:record-type :any}, {:name "_1772", :record-type :var} {:record-type :any}, {:name "K2", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N5", :record-type :var} {:record-type :any}, {:name "N2", :record-type :var} {:record-type :any}, {:name "W", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sub", :arglist ({:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "E3", :record-type :var} {:functor "tuple", :arglist ({:record-type :empty-list} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :atom} {:record-type :any} {:record-type :empty-list}), :record-type :compound}, {:name "R2", :record-type :var} {:record-type :any}, {:name "R1", :record-type :var} {:record-type :any}, {:name "N4", :record-type :var} {:record-type :any}, {:name "_516", :record-type :var} {:record-type :any}, {:name "CC", :record-type :var} {:record-type :any}, {:name "_2028", :record-type :var} {:record-type :any}, {:name "K3", :record-type :var} {:record-type :any}, {:name "E2", :record-type :var} {:functor "tuple", :arglist ({:record-type :empty-list} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :atom} {:record-type :any} {:record-type :empty-list}), :record-type :compound}, {:name "_480", :record-type :var} {:record-type :any}, {:name "T4", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_486", :record-type :var} {:record-type :any}, {:name "K1", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}, {:name "T2", :record-type :var} {:record-type :any}, {:name "T1", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sub", :arglist ({:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "I4", :record-type :var} {:record-type :any}, {:name "I2", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :any}, {:name "E1", :record-type :var} {:functor "tuple", :arglist ({:record-type :empty-list} {:record-type :any} {:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :empty-list}), :record-type :compound}, {:name "N6", :record-type :var} {:record-type :any}, {:name "I3", :record-type :var} {:record-type :any}}
{{:name "W", :record-type :var} {:record-type :any}, {:name "R", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "Err", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "T", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}}
{{:name "_628", :record-type :var} {:record-type :any}, {:name "R", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "_624", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}}
{{:name "Sym", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N2", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "W", :record-type :var} {:record-type :any}, {:name "Word", :record-type :var} {:record-type :any}, {:name "R2", :record-type :var} {:record-type :any}, {:name "Dom", :record-type :var} {:record-type :any}, {:name "R1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "K", :record-type :var} {:record-type :any}, {:name "_516", :record-type :var} {:record-type :any}, {:name "CC", :record-type :var} {:record-type :any}, {:name "E2", :record-type :var} {:functor "tuple", :arglist ({:type {:record-type :any}, :record-type :list} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:record-type :nonvar}), :record-type :compound} {:record-type :any}), :record-type :compound}, {:name "T2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Sense", :record-type :var} {:record-type :any}, {:name "T1", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :nonvar}, {:name "I1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I2", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :any}, {:name "E1", :record-type :var} {:functor "tuple", :arglist ({:record-type :empty-list} {:record-type :any} {:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:record-type :empty-list}), :record-type :compound}}
{{:name "Y", :record-type :var} {:record-type :any}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:functor "tuple", :arglist ({:record-type :empty-list} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N2", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "W", :record-type :var} {:record-type :any}, {:name "Word", :record-type :var} {:record-type :any}, {:name "R2", :record-type :var} {:record-type :any}, {:name "R1", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "_852", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "T2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "T1", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I2", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :any}}
{{:name "N3", :record-type :var} {:record-type :any}, {:name "T3", :record-type :var} {:record-type :any}, {:name "K2", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N5", :record-type :var} {:record-type :any}, {:name "N2", :record-type :var} {:record-type :any}, {:name "W", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sub", :arglist ({:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "E3", :record-type :var} {:functor "tuple", :arglist ({:record-type :empty-list} {:functor ":", :arglist ({:record-type :any} {:record-type :atom}), :record-type :compound} {:record-type :atom} {:record-type :any} {:record-type :empty-list}), :record-type :compound}, {:name "R2", :record-type :var} {:record-type :any}, {:name "R1", :record-type :var} {:record-type :any}, {:name "N4", :record-type :var} {:record-type :any}, {:name "_1744", :record-type :var} {:record-type :any}, {:name "CC", :record-type :var} {:record-type :any}, {:name "K3", :record-type :var} {:record-type :any}, {:name "E2", :record-type :var} {:functor "tuple", :arglist ({:record-type :empty-list} {:functor ":", :arglist ({:record-type :any} {:record-type :atom}), :record-type :compound} {:record-type :atom} {:record-type :any} {:record-type :empty-list}), :record-type :compound}, {:name "T4", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "K1", :record-type :var} {:record-type :any}, {:name "_2000", :record-type :var} {:record-type :any}, {:name "T2", :record-type :var} {:record-type :any}, {:name "T1", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:record-type :any}, {:name "_458", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sub", :arglist ({:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "I4", :record-type :var} {:record-type :any}, {:name "I2", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :any}, {:name "_488", :record-type :var} {:record-type :any}, {:name "E1", :record-type :var} {:functor "tuple", :arglist ({:record-type :empty-list} {:record-type :any} {:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:record-type :atom}), :record-type :compound} {:record-type :empty-list}), :record-type :compound}, {:name "N6", :record-type :var} {:record-type :any}, {:name "I3", :record-type :var} {:record-type :any}}
{{:name "J", :record-type :var} {:record-type :any}, {:name "_1086", :record-type :var} {:record-type :any}, {:name "_992", :record-type :var} {:record-type :any}, {:name "POS", :record-type :var} {:record-type :any}, {:name "_1080", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tu1", :record-type :var} {:functor "tuple", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any} {:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound}, {:name "_1076", :record-type :var} {:record-type :any}, {:name "N2", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "W", :record-type :var} {:record-type :any}, {:name "Word", :record-type :var} {:record-type :any}, {:name "R2", :record-type :var} {:record-type :any}, {:name "R1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_902", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "_900", :record-type :var} {:record-type :any}, {:name "Tu2", :record-type :var} {:functor "tuple", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :atom} {:record-type :any} {:record-type :any}), :record-type :compound}, {:name "_1360", :record-type :var} {:record-type :any}, {:name "_1116", :record-type :var} {:record-type :any}, {:name "T2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "R", :record-type :var} {:record-type :any}, {:name "_1364", :record-type :var} {:record-type :any}, {:name "T1", :record-type :var} {:record-type :any}, {:name "_1022", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_1398", :record-type :var} {:record-type :any}, {:name "_482", :record-type :var} {:record-type :any}, {:name "I2", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N1", :record-type :var} {:record-type :any}}
{{:name "N3", :record-type :var} {:record-type :any}, {:name "T3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "K2", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N2", :record-type :var} {:record-type :any}, {:name "W", :record-type :var} {:record-type :any}, {:name "R1", :record-type :var} {:record-type :any}, {:name "_474", :record-type :var} {:record-type :any}, {:name "N4", :record-type :var} {:record-type :any}, {:name "CC", :record-type :var} {:record-type :any}, {:name "E2", :record-type :var} {:functor "tuple", :arglist ({:record-type :empty-list} {:functor ":", :arglist ({:record-type :any} {:record-type :atom}), :record-type :compound} {:record-type :atom} {:record-type :any} {:record-type :empty-list}), :record-type :compound}, {:name "_1486", :record-type :var} {:record-type :any}, {:name "K1", :record-type :var} {:record-type :any}, {:name "T2", :record-type :var} {:record-type :any}, {:name "T1", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sub", :arglist ({:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "I1", :record-type :var} {:record-type :any}, {:name "I2", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :any}, {:name "_444", :record-type :var} {:record-type :any}, {:name "E1", :record-type :var} {:functor "tuple", :arglist ({:record-type :empty-list} {:record-type :any} {:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:record-type :atom}), :record-type :compound} {:record-type :empty-list}), :record-type :compound}, {:name "_1230", :record-type :var} {:record-type :any}, {:name "I3", :record-type :var} {:record-type :any}}
{{:name "N3", :record-type :var} {:record-type :any}, {:name "T3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N2", :record-type :var} {:record-type :any}, {:name "W", :record-type :var} {:record-type :any}, {:name "Dom", :record-type :var} {:record-type :any}, {:name "R1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "K", :record-type :var} {:record-type :any}, {:name "T2", :record-type :var} {:record-type :any}, {:name "T1", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sub", :arglist ({:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "X", :record-type :var} {:record-type :nonvar}, {:name "I1", :record-type :var} {:record-type :any}, {:name "_458", :record-type :var} {:record-type :any}, {:name "I2", :record-type :var} {:record-type :any}, {:name "_1406", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :any}, {:name "_1150", :record-type :var} {:record-type :any}, {:name "_488", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:functor "tuple", :arglist ({:record-type :empty-list} {:record-type :any} {:functor ":", :arglist ({:record-type :atom} {:record-type :atom}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:record-type :nonvar}), :record-type :compound} {:record-type :empty-list}), :record-type :compound}, {:name "I3", :record-type :var} {:record-type :any}}
{{:name "Sym", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N2", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "W", :record-type :var} {:record-type :any}, {:name "Word", :record-type :var} {:record-type :any}, {:name "R2", :record-type :var} {:record-type :any}, {:name "Dom", :record-type :var} {:record-type :any}, {:name "R1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "K", :record-type :var} {:record-type :any}, {:name "CC", :record-type :var} {:record-type :any}, {:name "E2", :record-type :var} {:functor "tuple", :arglist ({:type {:record-type :any}, :record-type :list} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:record-type :nonvar}), :record-type :compound} {:record-type :any}), :record-type :compound}, {:name "_502", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}, {:name "T2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "T1", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :nonvar}, {:name "I1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I2", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :any}, {:name "E1", :record-type :var} {:functor "tuple", :arglist ({:record-type :empty-list} {:record-type :any} {:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:record-type :empty-list}), :record-type :compound}}
{{:name "L", :record-type :var} {:record-type :any}, {:name "N2", :record-type :var} {:record-type :any}, {:name "W", :record-type :var} {:record-type :any}, {:name "R2", :record-type :var} {:record-type :any}, {:name "R1", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "T2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "T1", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sub", :arglist ({:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "I1", :record-type :var} {:record-type :any}, {:name "I2", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:functor "tuple", :arglist ({:record-type :empty-list} {:record-type :any} {:record-type :atom} {:record-type :any} {:record-type :empty-list}), :record-type :compound}}
{{:name "E", :record-type :var} {:functor "tuple", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any} {:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:record-type :nonvar}), :record-type :compound} {:record-type :any}), :record-type :compound}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N2", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "W", :record-type :var} {:record-type :any}, {:name "Word", :record-type :var} {:record-type :any}, {:name "R2", :record-type :var} {:record-type :any}, {:name "Dom", :record-type :var} {:record-type :any}, {:name "R1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "K", :record-type :var} {:record-type :any}, {:name "_516", :record-type :var} {:record-type :any}, {:name "_478", :record-type :var} {:record-type :any}, {:name "T2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "T1", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :nonvar}, {:name "I1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I2", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :any}}
{{:name "N3", :record-type :var} {:record-type :any}, {:name "T3", :record-type :var} {:record-type :any}, {:name "_424", :record-type :var} {:record-type :any}, {:name "N2", :record-type :var} {:record-type :any}, {:name "W", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sub", :arglist ({:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "R3", :record-type :var} {:record-type :any}, {:name "R2", :record-type :var} {:record-type :any}, {:name "R1", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "T2", :record-type :var} {:record-type :any}, {:name "T1", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sub", :arglist ({:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "I2", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :any}, {:name "I3", :record-type :var} {:record-type :any}}
{{:name "Y", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N2", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "W", :record-type :var} {:record-type :any}, {:name "Word", :record-type :var} {:record-type :any}, {:name "R2", :record-type :var} {:record-type :any}, {:name "Dom", :record-type :var} {:record-type :any}, {:name "R1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "K", :record-type :var} {:record-type :any}, {:name "CC", :record-type :var} {:record-type :any}, {:name "E2", :record-type :var} {:functor "tuple", :arglist ({:type {:record-type :any}, :record-type :list} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:record-type :nonvar}), :record-type :compound} {:record-type :any}), :record-type :compound}, {:name "_502", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}, {:name "T2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "T1", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :nonvar}, {:name "I1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I2", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :any}, {:name "E1", :record-type :var} {:functor "tuple", :arglist ({:record-type :empty-list} {:record-type :any} {:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:record-type :empty-list}), :record-type :compound}}
{{:name "Y", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I", :record-type :var} {:record-type :any}, {:name "W", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "R", :record-type :var} {:record-type :any}, {:name "Sense", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Is", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}}
{{:name "Sym", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N2", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "W", :record-type :var} {:record-type :any}, {:name "Word", :record-type :var} {:record-type :any}, {:name "R2", :record-type :var} {:record-type :any}, {:name "Dom", :record-type :var} {:record-type :any}, {:name "R1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "K", :record-type :var} {:record-type :any}, {:name "_516", :record-type :var} {:record-type :any}, {:name "CC", :record-type :var} {:record-type :any}, {:name "E2", :record-type :var} {:functor "tuple", :arglist ({:type {:record-type :any}, :record-type :list} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:record-type :nonvar}), :record-type :compound} {:record-type :any}), :record-type :compound}, {:name "T2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Sense", :record-type :var} {:record-type :any}, {:name "T1", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :nonvar}, {:name "I1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I2", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :any}, {:name "E1", :record-type :var} {:functor "tuple", :arglist ({:record-type :empty-list} {:record-type :any} {:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:record-type :empty-list}), :record-type :compound}}
{{:name "N3", :record-type :var} {:record-type :any}, {:name "T3", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N2", :record-type :var} {:record-type :any}, {:name "W", :record-type :var} {:record-type :any}, {:name "R3", :record-type :var} {:record-type :any}, {:name "R2", :record-type :var} {:record-type :any}, {:name "R1", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}, {:name "T2", :record-type :var} {:record-type :any}, {:name "T1", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:record-type :any}, {:name "I2", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :any}, {:name "I3", :record-type :var} {:record-type :any}}
{{:name "_430", :record-type :var} {:record-type :any}, {:name "N2", :record-type :var} {:record-type :any}, {:name "W", :record-type :var} {:record-type :any}, {:name "R2", :record-type :var} {:record-type :any}, {:name "R1", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "T2", :record-type :var} {:record-type :any}, {:name "T1", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:record-type :any}, {:name "I2", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sub", :arglist ({:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "N1", :record-type :var} {:record-type :any}}
{{:name "Sym", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N2", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "W", :record-type :var} {:record-type :any}, {:name "Word", :record-type :var} {:record-type :any}, {:name "R2", :record-type :var} {:record-type :any}, {:name "Dom", :record-type :var} {:record-type :any}, {:name "R1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "K", :record-type :var} {:record-type :any}, {:name "_516", :record-type :var} {:record-type :any}, {:name "CC", :record-type :var} {:record-type :any}, {:name "E2", :record-type :var} {:functor "tuple", :arglist ({:type {:record-type :any}, :record-type :list} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:record-type :nonvar}), :record-type :compound} {:record-type :any}), :record-type :compound}, {:name "T2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Sense", :record-type :var} {:record-type :any}, {:name "T1", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :nonvar}, {:name "I1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I2", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :any}, {:name "E1", :record-type :var} {:functor "tuple", :arglist ({:record-type :empty-list} {:record-type :any} {:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:record-type :empty-list}), :record-type :compound}}
{{:name "N3", :record-type :var} {:record-type :any}, {:name "T3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "K2", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N2", :record-type :var} {:record-type :any}, {:name "W", :record-type :var} {:record-type :any}, {:name "R1", :record-type :var} {:record-type :any}, {:name "_474", :record-type :var} {:record-type :any}, {:name "N4", :record-type :var} {:record-type :any}, {:name "CC", :record-type :var} {:record-type :any}, {:name "E2", :record-type :var} {:functor "tuple", :arglist ({:record-type :empty-list} {:functor ":", :arglist ({:record-type :any} {:record-type :atom}), :record-type :compound} {:record-type :atom} {:record-type :any} {:record-type :empty-list}), :record-type :compound}, {:name "_1486", :record-type :var} {:record-type :any}, {:name "K1", :record-type :var} {:record-type :any}, {:name "T2", :record-type :var} {:record-type :any}, {:name "T1", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sub", :arglist ({:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "I1", :record-type :var} {:record-type :any}, {:name "I2", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :any}, {:name "_444", :record-type :var} {:record-type :any}, {:name "E1", :record-type :var} {:functor "tuple", :arglist ({:record-type :empty-list} {:record-type :any} {:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:record-type :atom}), :record-type :compound} {:record-type :empty-list}), :record-type :compound}, {:name "_1230", :record-type :var} {:record-type :any}, {:name "I3", :record-type :var} {:record-type :any}}
{{:name "Y", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "W", :record-type :var} {:record-type :any}, {:name "R2", :record-type :var} {:record-type :any}, {:name "R1", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "_632", :record-type :var} {:record-type :any}, {:name "_648", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "M", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "I4", :record-type :var} {:record-type :any}, {:name "I2", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}, {:name "I3", :record-type :var} {:record-type :any}}
{{:name "N3", :record-type :var} {:record-type :any}, {:name "T3", :record-type :var} {:record-type :any}, {:name "K2", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N5", :record-type :var} {:record-type :any}, {:name "N2", :record-type :var} {:record-type :any}, {:name "W", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sub", :arglist ({:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "E3", :record-type :var} {:functor "tuple", :arglist ({:record-type :empty-list} {:functor ":", :arglist ({:record-type :any} {:record-type :atom}), :record-type :compound} {:record-type :atom} {:record-type :any} {:record-type :empty-list}), :record-type :compound}, {:name "R2", :record-type :var} {:record-type :any}, {:name "R1", :record-type :var} {:record-type :any}, {:name "N4", :record-type :var} {:record-type :any}, {:name "_1744", :record-type :var} {:record-type :any}, {:name "CC", :record-type :var} {:record-type :any}, {:name "K3", :record-type :var} {:record-type :any}, {:name "E2", :record-type :var} {:functor "tuple", :arglist ({:record-type :empty-list} {:functor ":", :arglist ({:record-type :any} {:record-type :atom}), :record-type :compound} {:record-type :atom} {:record-type :any} {:record-type :empty-list}), :record-type :compound}, {:name "T4", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "K1", :record-type :var} {:record-type :any}, {:name "_2000", :record-type :var} {:record-type :any}, {:name "T2", :record-type :var} {:record-type :any}, {:name "T1", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:record-type :any}, {:name "_458", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sub", :arglist ({:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "I4", :record-type :var} {:record-type :any}, {:name "I2", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :any}, {:name "_488", :record-type :var} {:record-type :any}, {:name "E1", :record-type :var} {:functor "tuple", :arglist ({:record-type :empty-list} {:record-type :any} {:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:record-type :atom}), :record-type :compound} {:record-type :empty-list}), :record-type :compound}, {:name "N6", :record-type :var} {:record-type :any}, {:name "I3", :record-type :var} {:record-type :any}}
{{:name "Sym", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N2", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "W", :record-type :var} {:record-type :any}, {:name "Word", :record-type :var} {:record-type :any}, {:name "R2", :record-type :var} {:record-type :any}, {:name "Dom", :record-type :var} {:record-type :any}, {:name "R1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "K", :record-type :var} {:record-type :any}, {:name "_516", :record-type :var} {:record-type :any}, {:name "CC", :record-type :var} {:record-type :any}, {:name "E2", :record-type :var} {:functor "tuple", :arglist ({:type {:record-type :any}, :record-type :list} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:record-type :nonvar}), :record-type :compound} {:record-type :any}), :record-type :compound}, {:name "T2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Sense", :record-type :var} {:record-type :any}, {:name "T1", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :nonvar}, {:name "I1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I2", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :any}, {:name "E1", :record-type :var} {:functor "tuple", :arglist ({:record-type :empty-list} {:record-type :any} {:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:record-type :empty-list}), :record-type :compound}}
{{:name "Y", :record-type :var} {:record-type :nonvar}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N2", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "W", :record-type :var} {:record-type :any}, {:name "E3", :record-type :var} {:functor "tuple", :arglist ({:record-type :empty-list} {:functor ":", :arglist ({:record-type :any} {:record-type :atom}), :record-type :compound} {:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:record-type :nonvar}), :record-type :compound} {:record-type :empty-list}), :record-type :compound}, {:name "Word", :record-type :var} {:record-type :any}, {:name "R2", :record-type :var} {:record-type :any}, {:name "R1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "K", :record-type :var} {:record-type :any}, {:name "CC", :record-type :var} {:record-type :any}, {:name "E2", :record-type :var} {:functor "tuple", :arglist ({:record-type :empty-list} {:functor ":", :arglist ({:record-type :any} {:record-type :atom}), :record-type :compound} {:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:record-type :nonvar}), :record-type :compound} {:record-type :empty-list}), :record-type :compound}, {:name "T2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "T1", :record-type :var} {:record-type :any}, {:name "D2", :record-type :var} {:record-type :any}, {:name "D1", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :nonvar}, {:name "I1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I2", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :any}, {:name "_488", :record-type :var} {:record-type :any}, {:name "E1", :record-type :var} {:functor "tuple", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any} {:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:record-type :atom}), :record-type :compound} {:record-type :any}), :record-type :compound}}
{{:name "N3", :record-type :var} {:record-type :any}, {:name "T3", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N2", :record-type :var} {:record-type :any}, {:name "W", :record-type :var} {:record-type :any}, {:name "R3", :record-type :var} {:record-type :any}, {:name "R2", :record-type :var} {:record-type :any}, {:name "R1", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "T2", :record-type :var} {:record-type :any}, {:name "T1", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:record-type :any}, {:name "I2", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :any}, {:name "I3", :record-type :var} {:record-type :any}}
{{:name "Stream", :record-type :var} {:record-type :ground}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :ground}}
{{:name "_A", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :nonvar}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Occur", :record-type :var} {:functor "/", :arglist ({:record-type :atom} {:record-type :integer}), :record-type :compound}, {:name "MoreOccurs", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "T", :record-type :var} {:record-type :any}}
{{:name "T", :record-type :var} {:record-type :any}}
{{:name "T", :record-type :var} {:record-type :any}, {:name "_494", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "X", :record-type :var} {:record-type :any}}
{{:name "T", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Dom", :record-type :var} {:record-type :any}}
{{:name "T", :record-type :var} {:record-type :any}, {:name "_444", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "_426", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_542", :record-type :var} {:record-type :any}, {:name "A2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_430", :record-type :var} {:record-type :any}, {:name "_540", :record-type :var} {:record-type :any}}
{{:name "Con", :record-type :var} {:record-type :any}, {:name "Context", :record-type :var} {:record-type :any}, {:name "Presups", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :any}, {:name "Dom", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "K", :record-type :var} {:record-type :any}, {:name "_454", :record-type :var} {:record-type :any}, {:name "As", :record-type :var} {:record-type :any}, {:name "_452", :record-type :var} {:record-type :any}}
{{:name "FDom", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "A2", :record-type :var} {:record-type :any}, {:name "Context", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I", :record-type :var} {:record-type :any}, {:name "Con", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Dom", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "K", :record-type :var} {:record-type :any}, {:name "FCon", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "F", :record-type :var} {:record-type :any}, {:name "R", :record-type :var} {:record-type :any}, {:name "Presups", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Dependencies", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:record-type :any}, {:name "Is", :record-type :var} {:record-type :any}, {:name "I2", :record-type :var} {:record-type :any}, {:name "_1144", :record-type :var} {:record-type :any}}
{{:name "P", :record-type :var} {:record-type :any}, {:name "Context", :record-type :var} {:record-type :any}, {:name "_452", :record-type :var} {:record-type :any}, {:name "_454", :record-type :var} {:record-type :any}, {:name "Con", :record-type :var} {:record-type :any}, {:name "Dom", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_662", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "As", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :any}, {:name "Presups", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Context", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_452", :record-type :var} {:record-type :any}, {:name "_454", :record-type :var} {:record-type :any}, {:name "Con", :record-type :var} {:record-type :any}, {:name "Dom", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_662", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "As", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :any}, {:name "Presups", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}}
{{:name "_396", :record-type :var} {:record-type :any}}
{{:name "Subs", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "Rx", :record-type :var} {:record-type :any}, {:name "Ry", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "R", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_440", :record-type :var} {:record-type :any}, {:name "_442", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :integer}}
{{:name "R", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "T", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "_398", :record-type :var} {:record-type :any}}
{{:name "_7596", :record-type :var} {:record-type :any}, {:name "Option", :record-type :var} {:record-type :any}, {:name "_7594", :record-type :var} {:record-type :any}}
{{:name "Command", :record-type :var} {:record-type :any}, {:name "Options", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :ground}, {:name "Version", :record-type :var} {:record-type :any}}
{{:name "_394", :record-type :var} {:record-type :any}, {:name "_396", :record-type :var} {:record-type :any}}
{{:name "_484", :record-type :var} {:record-type :any}, {:name "Der", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Cat", :record-type :var} {:record-type :any}, {:name "_486", :record-type :var} {:record-type :any}, {:name "_482", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "Decade", :record-type :var} {:record-type :any}, {:name "Date", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "FileName", :record-type :var} {:arglist #{{:functor nil, :arglist (), :record-type :compound} {:record-type :atom} {:record-type :string}}, :record-type :one-of}, {:name "FileString", :record-type :var} {:record-type :any}, {:name "ICList", :record-type :var} {:record-type :any}, {:name "NoWhitesString", :record-type :var} {:record-type :any}, {:name "FileString2", :record-type :var} {:record-type :any}}
{{:name "_396", :record-type :var} {:record-type :any}}
{{:name "H", :record-type :var} {:record-type :any}, {:name "V", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "_6634", :record-type :var} {:record-type :any}, {:name "_6604", :record-type :var} {:record-type :any}}
{{:name "_412", :record-type :var} {:record-type :any}}
{{:name "_406", :record-type :var} {:record-type :any}, {:name "_408", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:record-type :any}, {:name "_472", :record-type :var} {:record-type :any}, {:name "_474", :record-type :var} {:record-type :any}, {:name "_470", :record-type :var} {:record-type :any}, {:name "_468", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}}
{{:name "P", :record-type :var} {:record-type :any}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "N2", :record-type :var} {:record-type :any}, {:name "C3", :record-type :var} {:record-type :any}, {:name "C1", :record-type :var} {:record-type :any}, {:name "Ind", :record-type :var} {:record-type :any}, {:name "Ps", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C2", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :any}, {:name "Stack", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "R", :record-type :var} {:record-type :any}, {:name "O", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :any}, {:name "Args1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Args", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "T", :record-type :var} {:functor nil, :arglist (), :record-type :compound}, {:name "T1", :record-type :var} {:record-type :nonvar}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}}
{{:name "T", :record-type :var} {:record-type :any}, {:name "_420", :record-type :var} {:record-type :any}, {:name "_422", :record-type :var} {:record-type :any}}
{{:name "R0", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "R", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_532", :record-type :var} {:record-type :any}, {:name "P", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "G", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "R", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_498", :record-type :var} {:record-type :any}, {:name "CR", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Time", :record-type :var} {:record-type :any}, {:name "G", :record-type :var} {:record-type :any}, {:name "_782", :record-type :var} {:record-type :any}, {:name "Pr", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "R", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "CR", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Time", :record-type :var} {:record-type :any}, {:name "_506", :record-type :var} {:record-type :any}, {:name "_504", :record-type :var} {:record-type :any}, {:name "_816", :record-type :var} {:record-type :any}, {:name "G", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}}
{{:name "N1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "LX", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Goal", :record-type :var} {:record-type :any}, {:name "Input", :record-type :var} {:record-type :any}, {:name "OldFile", :record-type :var} {:record-type :ground}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :atomic}, {:name "_396", :record-type :var} {:record-type :any}}
{}
{{:name "R", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "E", :record-type :var} {:record-type :any}, {:name "_430", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "T", :record-type :var} {:record-type :any}}
{}
{{:name "InFile", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "X", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "_4048", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "_4000", :record-type :var} {:record-type :any}, {:name "_3998", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "_4048", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "_4076", :record-type :var} {:record-type :atom}, {:name "_4078", :record-type :var} {:record-type :atom}, {:name "X", :record-type :var} {:record-type :atom}, {:name "_4072", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :atom}}
{{:name "_406", :record-type :var} {:record-type :any}, {:name "Len", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}}
{{:name "_406", :record-type :var} {:record-type :any}}
{{:name "M", :record-type :var} {:record-type :number}, {:name "X", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}}
{}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Dom", :record-type :var} {:record-type :any}}
{{:name "I", :record-type :var} {:record-type :any}, {:name "Beg", :record-type :var} {:record-type :any}, {:name "AntInd", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "End", :record-type :var} {:record-type :any}}
{{:name "_420", :record-type :var} {:record-type :any}}
{{:name "MoreVariables", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "VarName1", :record-type :var} {:record-type :any}, {:name "Where", :record-type :var} {:record-type :any}, {:name "Remaining", :record-type :var} {:record-type :any}, {:name "VarName", :record-type :var} {:record-type :any}, {:name "MoreOccurs", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Type", :record-type :var} {:record-type :any}}
{{:name "MoreRemaining", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Variable", :record-type :var} {:record-type :any}, {:name "MoreVariables", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "VarName", :record-type :var} {:record-type :any}, {:name "Occurs", :record-type :var} {:record-type :any}}
{{:name "K", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "K1", :record-type :var} {:record-type :number}}
{{:name "K", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}}
{{:name "_520", :record-type :var} {:record-type :any}, {:name "_460", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "CCG", :record-type :var} {:record-type :any}}
{{:name "Co", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Percentage", :record-type :var} {:record-type :number}, {:name "At", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}}
{}
{{:name "_442", :record-type :var} {:record-type :any}, {:name "LD", :record-type :var} {:record-type :integer}, {:name "D", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "DR", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "R2", :record-type :var} {:record-type :any}, {:name "R1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L2", :record-type :var} {:record-type :integer}, {:name "T2", :record-type :var} {:record-type :any}, {:name "R", :record-type :var} {:record-type :any}, {:name "T1", :record-type :var} {:record-type :any}, {:name "_538", :record-type :var} {:record-type :any}}
{{:name "D", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_398", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:arglist ({:record-type :integer} {:record-type :integer}), :record-type :tuple}, {:name "Y", :record-type :var} {:record-type :var}}
{{:name "Y", :record-type :var} {:record-type :atom}, {:name "C", :record-type :var} {:type {:record-type :integer}, :record-type :list}}
{{:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D", :record-type :var} {:record-type :any}, {:name "C3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Mod2", :record-type :var} {:arglist #{{:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "role", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :integer}), :record-type :compound} {:functor "card", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "C6", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D", :record-type :var} {:record-type :any}, {:name "C7", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Mod3", :record-type :var} {:arglist #{{:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "role", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :integer}), :record-type :compound} {:functor "card", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Mod4", :record-type :var} {:arglist #{{:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "role", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :integer}), :record-type :compound} {:functor "card", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Mod1", :record-type :var} {:arglist #{{:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "role", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :integer}), :record-type :compound} {:functor "card", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "C5", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "A", :record-type :var} {:record-type :any}, {:name "C4", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C", :record-type :var} {:record-type :any}}
{{:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "C4", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Mod", :record-type :var} {:arglist #{{:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "role", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :integer}), :record-type :compound} {:functor "card", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "D", :record-type :var} {:record-type :any}, {:name "C3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:record-type :any}}
{{:name "Mod2", :record-type :var} {:arglist #{{:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "role", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :integer}), :record-type :compound} {:functor "card", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "D", :record-type :var} {:record-type :any}, {:name "C3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Mod1", :record-type :var} {:arglist #{{:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "role", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :integer}), :record-type :compound} {:functor "card", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "C5", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "A", :record-type :var} {:record-type :any}, {:name "C4", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C", :record-type :var} {:record-type :any}}
{{:name "Mod2", :record-type :var} {:arglist #{{:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "role", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :integer}), :record-type :compound} {:functor "card", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "C6", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D", :record-type :var} {:record-type :any}, {:name "C3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Mod3", :record-type :var} {:arglist #{{:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "role", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :integer}), :record-type :compound} {:functor "card", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Mod1", :record-type :var} {:arglist #{{:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "role", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :integer}), :record-type :compound} {:functor "card", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "C5", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "A", :record-type :var} {:record-type :any}, {:name "C4", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C", :record-type :var} {:record-type :any}}
{{:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D", :record-type :var} {:record-type :any}, {:name "C3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "V", :record-type :var} {:record-type :any}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "V", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "A", :record-type :var} {:record-type :any}, {:name "L3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "_4034", :record-type :var} {:record-type :atom}, {:name "_4036", :record-type :var} {:record-type :atom}}
{{:name "_914", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Sen2", :record-type :var} {:record-type :number}, {:name "POS", :record-type :var} {:record-type :any}, {:name "Prob5", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Prob6", :record-type :var} {:record-type :any}, {:name "IDs", :record-type :var} {:record-type :any}, {:name "Prob3", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Sen1", :record-type :var} {:record-type :number}, {:name "Prob1", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Prob4", :record-type :var} {:record-type :integer}, {:name "Sort1", :record-type :var} {:record-type :any}, {:name "Ana", :record-type :var} {:record-type :any}, {:name "SenDif", :record-type :var} {:record-type :number}, {:name "Score", :record-type :var} {:record-type :number}, {:name "Sort", :record-type :var} {:record-type :any}, {:name "FAna", :record-type :var} {:record-type :any}, {:name "FAnt", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Symb1", :record-type :var} {:record-type :any}, {:name "Ant", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Prob61", :record-type :var} {:record-type :any}, {:name "Prob51", :record-type :var} {:record-type :any}, {:name "Symb", :record-type :var} {:record-type :any}, {:name "AnaPos", :record-type :var} {:record-type :number}, {:name "I2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "AntPos", :record-type :var} {:record-type :number}}
{{:name "Margin", :record-type :var} {:record-type :atom}}
{{:name "Margin", :record-type :var} {:record-type :atom}}
{{:name "Margin", :record-type :var} {:record-type :atom}}
{{:name "Margin", :record-type :var} {:record-type :atom}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "_PathTerm", :record-type :var} {:record-type :any}}
{{:name "NT", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "H", :record-type :var} {:record-type :any}, {:name "PathTerm", :record-type :var} {:record-type :any}, {:name "NH", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "R", :record-type :var} {:record-type :any}, {:name "O", :record-type :var} {:record-type :any}, {:name "U", :record-type :var} {:record-type :any}}
{{:name "_4034", :record-type :var} {:record-type :any}, {:name "_4010", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B", :record-type :var} {:arglist #{{:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sub", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}}
{{:name "_4004", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:arglist #{{:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sub", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}}
{{:name "R", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_4008", :record-type :var} {:record-type :any}}
{{:name "B", :record-type :var} {:arglist #{{:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sub", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "_4006", :record-type :var} {:record-type :any}}
{{:name "B", :record-type :var} {:arglist #{{:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sub", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "_4006", :record-type :var} {:record-type :any}}
{{:name "_4016", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_4022", :record-type :var} {:record-type :any}}
{{:name "_4004", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:arglist #{{:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sub", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}}
{{:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_3990", :record-type :var} {:record-type :any}}
{{:name "_4016", :record-type :var} {:record-type :any}, {:name "_4018", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:arglist #{{:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sub", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}}
{{:name "_4004", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:arglist #{{:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sub", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}}
{{:name "B", :record-type :var} {:arglist #{{:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sub", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "_3992", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "_4016", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:arglist #{{:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sub", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "_4020", :record-type :var} {:record-type :any}}
{{:name "Num", :record-type :var} {:record-type :integer}, {:name "On", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "N", :record-type :var} {:record-type :number}, {:name "Prop", :record-type :var} {:record-type :atom}}
{{:name "I", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "Words", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "I", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "Words", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "I", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "Words", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "I", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "Words", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "L", :record-type :var} {:record-type :any}}
{{:name "Y", :record-type :var} {:record-type :any}, {:name "L3", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "R", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I4", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I2", :record-type :var} {:record-type :any}, {:name "I3", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "R", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:record-type :any}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "R", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:record-type :any}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "R", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}, {:name "L3", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L", :record-type :var} {:record-type :any}, {:name "_418", :record-type :var} {:record-type :any}}
{{:name "E", :record-type :var} {:record-type :any}}
{{:name "D1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D0", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "E", :record-type :var} {:record-type :any}, {:name "E1", :record-type :var} {:record-type :any}, {:name "P", :record-type :var} {:record-type :any}}
{{:name "D1", :record-type :var} {:record-type :any}, {:name "D0", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "E", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "E1", :record-type :var} {:record-type :any}, {:name "P", :record-type :var} {:record-type :any}, {:name "_478", :record-type :var} {:record-type :any}}
{{:name "_414", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "E1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_512", :record-type :var} {:record-type :any}}
{{:name "_394", :record-type :var} {:record-type :any}}
{{:name "N1", :record-type :var} {:record-type :number}, {:name "N", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Stream", :record-type :var} {:record-type :ground}}
{}
{{:name "Sym", :record-type :var} {:record-type :any}, {:name "_4044", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_4050", :record-type :var} {:record-type :any}, {:name "Pos", :record-type :var} {:record-type :atom}}
{{:name "_3990", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :any}, {:name "_4002", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Sym", :record-type :var} {:record-type :any}, {:name "_4044", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_4050", :record-type :var} {:record-type :any}, {:name "Pos", :record-type :var} {:record-type :any}}
{}
{{:name "Codes", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "NoWhiteCodes", :record-type :var} {:record-type :any}, {:name "MoreCodes", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "MoreCodes", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Code", :record-type :var} {:record-type :any}, {:name "MoreNoWhiteCodes", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{{:name "X", :record-type :var} {:record-type :any}}
{{:name "Tc", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{}
{{:name "LH", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "LMIN", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "H", :record-type :var} {:record-type :any}, {:name "LL", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "LMAX", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "T", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "LT", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "HPattern", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :integer}, {:name "List", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "_396", :record-type :var} {:record-type :any}}
{{:name "Signature", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :ground}, {:name "MoreSOKB", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Atom", :record-type :var} {:record-type :any}, {:name "MoreAtoms", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :ground}, {:name "MoreSOKB", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Atom", :record-type :var} {:record-type :any}, {:name "MoreAtoms", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :ground}, {:name "MoreSOKB", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Atom", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :ground}, {:name "MoreSOKB", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Atom", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :ground}, {:name "MoreSOKB", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{}
{{:name "H", :record-type :var} {:record-type :nonvar}, {:name "T", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "_420", :record-type :var} {:record-type :any}, {:name "Variables", :record-type :var} {:record-type :any}}
{{:name "IntVariables", :record-type :var} {:record-type :any}, {:name "DisjunctNumber", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "OldVariables", :record-type :var} {:record-type :any}, {:name "NewVariables", :record-type :var} {:record-type :any}, {:name "Disjunct", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "NewDisjunctNumber", :record-type :var} {:record-type :number}, {:name "MoreDisjuncts", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "X", :record-type :var} {:arglist #{{:record-type :nonvar} {:record-type :var}}, :record-type :one-of}, {:name "Vars", :record-type :var} {:record-type :any}, {:name "New", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "_408", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "_408", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:arglist #{{:record-type :nonvar} {:record-type :var}}, :record-type :one-of}, {:name "Vars", :record-type :var} {:record-type :any}, {:name "New", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "_536", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_506", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "B", :record-type :var} {:arglist #{{:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sub", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "_414", :record-type :var} {:record-type :any}}
{{:name "B", :record-type :var} {:arglist #{{:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sub", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}}
{{:name "_412", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:arglist #{{:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sub", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}}
{{:name "_412", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:arglist #{{:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sub", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}}
{{:name "B", :record-type :var} {:arglist #{{:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sub", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "_440", :record-type :var} {:record-type :any}, {:name "_442", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "B", :record-type :var} {:arglist #{{:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sub", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "_440", :record-type :var} {:record-type :any}, {:name "_442", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "_436", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:arglist #{{:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sub", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "_440", :record-type :var} {:record-type :any}, {:name "_442", :record-type :var} {:record-type :any}}
{{:name "B", :record-type :var} {:arglist #{{:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sub", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "_414", :record-type :var} {:record-type :any}}
{{:name "_436", :record-type :var} {:record-type :any}, {:name "_438", :record-type :var} {:record-type :any}, {:name "_440", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:arglist #{{:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sub", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}}
{{:name "_412", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:arglist #{{:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sub", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}}
{{:name "_394", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:record-type :integer}, {:name "T", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :ground}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Res", :record-type :var} {:record-type :any}, {:name "Res1", :record-type :var} {:record-type :any}}
{{:name "_394", :record-type :var} {:record-type :any}}
{{:name "_396", :record-type :var} {:record-type :any}}
{{:name "Time", :record-type :var} {:record-type :any}, {:name "Event", :record-type :var} {:record-type :any}}
{{:name "Receiver", :record-type :var} {:record-type :any}}
{{:name "_382", :record-type :var} {:record-type :any}}
{{:name "Events", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}}
{{:name "Arguments", :record-type :var} {:record-type :any}}
{{:name "_400", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N", :record-type :var} {:record-type :any}, {:name "_398", :record-type :var} {:record-type :any}}
{}
{{:name "_382", :record-type :var} {:record-type :any}}
{{:name "_382", :record-type :var} {:record-type :any}}
{{:name "Performative", :record-type :var} {:record-type :any}}
{{:name "Time", :record-type :var} {:record-type :any}}
{{:name "_382", :record-type :var} {:record-type :any}}
{{:name "_382", :record-type :var} {:record-type :any}}
{{:name "N1", :record-type :var} {:record-type :any}, {:name "MoreEvents", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Event", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}}
{{:name "Act", :record-type :var} {:record-type :any}}
{{:name "Events", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}}
{{:name "_382", :record-type :var} {:record-type :any}}
{{:name "_382", :record-type :var} {:record-type :any}}
{}
{{:name "Arguments", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Performative", :record-type :var} {:record-type :any}, {:name "Content1", :record-type :var} {:record-type :any}, {:name "Time", :record-type :var} {:record-type :any}, {:name "Act", :record-type :var} {:record-type :any}, {:name "Receiver", :record-type :var} {:record-type :any}, {:name "Sender", :record-type :var} {:record-type :any}, {:name "Content", :record-type :var} {:record-type :any}, {:name "Dialog", :record-type :var} {:record-type :any}}
{{:name "Time", :record-type :var} {:record-type :any}, {:name "Content", :record-type :var} {:record-type :any}}
{{:name "_412", :record-type :var} {:record-type :any}}
{{:name "Time", :record-type :var} {:record-type :any}}
{{:name "Dialog", :record-type :var} {:record-type :any}}
{}
{{:name "Sender", :record-type :var} {:record-type :any}}
{{:name "Time", :record-type :var} {:record-type :any}, {:name "Content", :record-type :var} {:record-type :any}}
{{:name "Arity", :record-type :var} {:record-type :integer}, {:name "Variables", :record-type :var} {:record-type :any}, {:name "Functor", :record-type :var} {:record-type :atomic}, {:name "NewArguments", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "NewAtom1", :record-type :var} {:record-type :nonvar}, {:name "NewAtom", :record-type :var} {:record-type :any}, {:name "OldOccurList", :record-type :var} {:record-type :any}, {:name "NewOccurList", :record-type :var} {:record-type :any}, {:name "Atom", :record-type :var} {:record-type :nonvar}, {:name "Arguments", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "_424", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :var}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "NewTab", :record-type :var} {:record-type :number}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "_460", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "NewTab", :record-type :var} {:record-type :number}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "_460", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "_424", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :atom}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Label", :record-type :var} {:record-type :any}, {:name "NewTab", :record-type :var} {:record-type :number}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "NextTab", :record-type :var} {:record-type :number}, {:name "D", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "Words", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "NewTab", :record-type :var} {:record-type :number}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "_460", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "_424", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :atom}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "NewerTab", :record-type :var} {:record-type :number}, {:name "Rels", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Labs", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "NewTab", :record-type :var} {:record-type :number}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Words", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "_474", :record-type :var} {:record-type :any}, {:name "NewTab", :record-type :var} {:record-type :number}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Type", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "NextTab", :record-type :var} {:record-type :number}, {:name "Words", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "IDs", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "NewTab", :record-type :var} {:record-type :number}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Label", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "SortedIDs", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "C", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "Words", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "_424", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :var}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "_424", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :nonvar}, {:name "_486", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "_424", :record-type :var} {:record-type :any}, {:name "_420", :record-type :var} {:record-type :any}, {:name "Error", :record-type :var} {:record-type :any}, {:name "_422", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "NewTab", :record-type :var} {:record-type :number}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "_460", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "_424", :record-type :var} {:record-type :any}, {:name "_420", :record-type :var} {:record-type :any}, {:name "Error", :record-type :var} {:record-type :any}, {:name "_422", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "NewTab", :record-type :var} {:record-type :number}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "_460", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "NextTab", :record-type :var} {:record-type :number}, {:name "Words", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "IDs", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "NewTab", :record-type :var} {:record-type :number}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Label", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "SortedIDs", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "_424", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :nonvar}, {:name "_486", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Label", :record-type :var} {:record-type :any}, {:name "NewTab", :record-type :var} {:record-type :number}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "NextTab", :record-type :var} {:record-type :number}, {:name "D", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "NewerTab", :record-type :var} {:record-type :number}, {:name "Rels", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Labs", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "NewTab", :record-type :var} {:record-type :number}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Words", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "_474", :record-type :var} {:record-type :any}, {:name "NewTab", :record-type :var} {:record-type :number}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Type", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "NewTab", :record-type :var} {:record-type :number}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "_460", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Index1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index2", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Substitutions", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "_4016", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :var}, {:name "_4014", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :nonvar}}
{{:name "OldSubstitutions", :record-type :var} {:record-type :any}, {:name "NewSubstitutions", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :nonvar}, {:name "F", :record-type :var} {:record-type :atomic}, {:name "Y", :record-type :var} {:record-type :nonvar}, {:name "N", :record-type :var} {:record-type :integer}}
{{:name "OldSubstitutions", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :var}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Substitutions", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "_Sym", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Sense", :record-type :var} {:record-type :any}, {:name "_Cat", :record-type :var} {:record-type :any}}
{{:name "_Sym", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Sense", :record-type :var} {:record-type :integer}, {:name "_Cat", :record-type :var} {:record-type :any}}
{{:name "H", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Ones", :record-type :var} {:record-type :any}, {:name "TensNum", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Tens", :record-type :var} {:record-type :any}, {:name "Sep", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :atom}, {:name "OnesNum", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Y", :record-type :var} {:record-type :number}}
{{:name "Ones", :record-type :var} {:record-type :any}, {:name "Sep", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :atom}, {:name "OnesNum", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Y", :record-type :var} {:record-type :number}, {:name "Cens", :record-type :var} {:record-type :any}, {:name "CensNum", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "Codes2", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :number}, {:name "Codes0", :record-type :var} {:record-type :any}, {:name "Codes1", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "Codes2", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :number}, {:name "Codes0", :record-type :var} {:record-type :any}, {:name "Codes1", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :atom}, {:name "Y", :record-type :var} {:record-type :integer}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :number}, {:name "Codes", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "Sym", :record-type :var} {:record-type :any}}
{{:name "_406", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "_468", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "_408", :record-type :var} {:record-type :any}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "_470", :record-type :var} {:record-type :any}}
{{:name "Sort", :record-type :var} {:record-type :any}}
{{:name "Sort", :record-type :var} {:record-type :any}}
{{:name "_Sort", :record-type :var} {:record-type :any}}
{{:name "Sort", :record-type :var} {:record-type :any}}
{{:name "Sort", :record-type :var} {:record-type :any}}
{{:name "Theory", :record-type :var} {:record-type :any}, {:name "Sort", :record-type :var} {:record-type :any}, {:name "TheoryStringList", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{}
{{:name "File", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{}
{{:name "_692", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "_486", :record-type :var} {:record-type :any}}
{{:name "G", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:record-type :any}}
{{:name "G", :record-type :var} {:record-type :any}}
{{:name "_442", :record-type :var} {:record-type :any}}
{}
{{:name "_550", :record-type :var} {:record-type :any}, {:name "_554", :record-type :var} {:record-type :any}, {:name "DB", :record-type :var} {:record-type :integer}, {:name "Q", :record-type :var} {:record-type :any}}
{}
{{:name "DB", :record-type :var} {:record-type :integer}, {:name "Q", :record-type :var} {:record-type :any}}
{}
{}
{{:name "N", :record-type :var} {:record-type :integer}}
{{:name "Cmd", :record-type :var} {:record-type :any}}
{{:name "G", :record-type :var} {:record-type :any}}
{{:name "G", :record-type :var} {:record-type :any}}
{{:name "N", :record-type :var} {:record-type :any}}
{{:name "G", :record-type :var} {:record-type :any}}
{{:name "File", :record-type :var} {:record-type :any}}
{{:name "Done", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C", :record-type :var} {:record-type :any}, {:name "R", :record-type :var} {:record-type :any}, {:name "_500", :record-type :var} {:record-type :any}, {:name "G", :record-type :var} {:record-type :any}}
{{:name "_394", :record-type :var} {:record-type :any}, {:name "_396", :record-type :var} {:record-type :any}}
{{:name "Tags3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "New", :record-type :var} {:record-type :any}, {:name "Tags1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Lem", :record-type :var} {:record-type :any}, {:name "Tags2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Pos", :record-type :var} {:record-type :any}}
{{:name "Tags", :record-type :var} {:record-type :any}}
{{:name "R", :record-type :var} {:record-type :any}, {:name "Vars", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{}
{{:name "OccurList", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "_394", :record-type :var} {:record-type :any}}
{}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "MoreLists", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "MoreOccurs", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "MoreOccurs1", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}}
{{:name "_428", :record-type :var} {:record-type :any}, {:name "Sorted", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Numbers", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Sorted", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "XDRS", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Numbers", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "NewIndex", :record-type :var} {:record-type :number}, {:name "Id", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "_408", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}}
{{:name "Index", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_398", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "_406", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :empty-list}}
{{:name "S", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}}
{{:name "R", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "S1", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Atom", :record-type :var} {:record-type :any}, {:name "In", :record-type :var} {:record-type :ground}}
{}
{{:name "Mode", :record-type :var} {:arglist #{{:value "append", :record-type :exact} {:value "write", :record-type :exact} {:value "read", :record-type :exact}}, :record-type :one-of}, {:name "OriginalSOKB", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Dynamic", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Destination", :record-type :var} {:arglist #{{:functor nil, :arglist (), :record-type :compound} {:record-type :atom} {:record-type :string}}, :record-type :one-of}, {:name "Origin", :record-type :var} {:arglist #{{:functor nil, :arglist (), :record-type :compound} {:record-type :atom} {:record-type :string}}, :record-type :one-of}, {:name "DynamicRewrittenSOKB", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "RewrittenSOKB", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Sort", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Y", :record-type :var} {:record-type :number}}
{{:name "Sort", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Concepts", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{}
{{:name "H", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "T2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "H", :record-type :var} {:record-type :any}, {:name "T1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "DC", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:record-type :any}, {:name "_470", :record-type :var} {:record-type :any}, {:name "DC0", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}, {:name "Vs", :record-type :var} {:record-type :any}}
{{:name "_408", :record-type :var} {:record-type :any}}
{{:name "InFile", :record-type :var} {:record-type :any}, {:name "Empty", :record-type :var} {:record-type :any}, {:name "Empty1", :record-type :var} {:record-type :any}, {:name "Rest", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "History", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :ground}}
{{:name "Conds", :record-type :var} {:record-type :any}, {:name "_484", :record-type :var} {:record-type :any}, {:name "_480", :record-type :var} {:record-type :any}, {:name "_486", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "_482", :record-type :var} {:record-type :any}}
{{:name "_702", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "N3", :record-type :var} {:record-type :any}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "Conds3", :record-type :var} {:record-type :any}, {:name "N2", :record-type :var} {:record-type :number}, {:name "Par", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_932", :record-type :var} {:record-type :any}, {:name "AntDrs", :record-type :var} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:type {:record-type :any}, :record-type :list}), :record-type :compound}), :record-type :compound}, {:name "AntInd", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Conds2", :record-type :var} {:record-type :any}, {:name "Conds1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "New", :record-type :var} {:functor ":", :arglist ({:arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :tuple} {:functor "pred", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :number}), :record-type :compound}), :record-type :compound}, {:name "Ind", :record-type :var} {:record-type :any}, {:name "Beg", :record-type :var} {:record-type :any}, {:name "NewInd", :record-type :var} {:arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :tuple}, {:name "End", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "SortedAntDrs", :record-type :var} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:type {:record-type :any}, :record-type :list}), :record-type :compound}), :record-type :compound}, {:name "Stack", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Sym", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "N2", :record-type :var} {:record-type :any}, {:name "Par", :record-type :var} {:record-type :any}, {:name "Conds2", :record-type :var} {:record-type :any}, {:name "Conds1", :record-type :var} {:record-type :any}, {:name "Ind", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :any}, {:name "Stack", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_398", :record-type :var} {:record-type :any}}
{{:name "_Constraint", :record-type :var} {:record-type :any}}
{{:name "NT", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "H", :record-type :var} {:record-type :any}, {:name "Constraint", :record-type :var} {:record-type :any}, {:name "NH", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Codes", :record-type :var} {:type {:record-type :integer}, :record-type :list}, {:name "Ref", :record-type :var} {:record-type :atom}, {:name "X", :record-type :var} {:record-type :integer}, {:name "Code", :record-type :var} {:record-type :any}}
{{:name "_394", :record-type :var} {:record-type :any}, {:name "_396", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}}
{{:name "R", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "RT", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_440", :record-type :var} {:record-type :any}, {:name "_442", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}}
{}
{{:name "T", :record-type :var} {:arglist #{{:functor ":-", :arglist ({:record-type :any} {:arglist #{{:functor "&", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor ";", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :atom} {:functor ",", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}), :record-type :compound} {:functor "<-", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor ":-", :arglist ({:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Mesg", :record-type :var} {:record-type :any}}
{{:name "T", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}}
{{:name "Y", :record-type :var} {:record-type :any}}
{{:name "Y", :record-type :var} {:record-type :any}}
{{:name "_3998", :record-type :var} {:record-type :any}}
{{:name "Y", :record-type :var} {:record-type :any}}
{{:name "Y", :record-type :var} {:record-type :any}}
{{:name "_4000", :record-type :var} {:record-type :any}}
{{:name "_408", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}}
{{:name "Tab", :record-type :var} {:record-type :any}, {:name "Token", :record-type :var} {:arglist #{{:record-type :number} {:record-type :atom} {:functor "f", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "NiceToken", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Tab", :record-type :var} {:record-type :any}, {:name "Token", :record-type :var} {:arglist #{{:record-type :number} {:record-type :atom} {:functor "f", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "NiceToken", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "_408", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}}
{{:name "_396", :record-type :var} {:record-type :any}}
{{:name "Functor", :record-type :var} {:record-type :any}}
{}
{{:name "_382", :record-type :var} {:record-type :any}, {:name "Functor", :record-type :var} {:record-type :any}}
{}
{}
{{:name "_382", :record-type :var} {:record-type :any}, {:name "Functor", :record-type :var} {:record-type :any}}
{}
{}
{{:name "_382", :record-type :var} {:record-type :any}, {:name "Functor", :record-type :var} {:record-type :any}}
{{:name "Functor", :record-type :var} {:record-type :any}, {:name "Time", :record-type :var} {:record-type :any}, {:name "Content", :record-type :var} {:record-type :any}, {:name "Event", :record-type :var} {:record-type :any}}
{}
{{:name "IC", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "MoreICs", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{}
{}
{{:name "Atom", :record-type :var} {:record-type :any}}
{{:name "Disjunct", :record-type :var} {:record-type :any}, {:name "MoreDisjuncts", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "MoreConjuncts", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Conjunct", :record-type :var} {:record-type :any}}
{{:name "_382", :record-type :var} {:record-type :any}}
{}
{{:name "Functor", :record-type :var} {:record-type :any}, {:name "Arguments", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Atom", :record-type :var} {:record-type :any}}
{{:name "Term2", :record-type :var} {:record-type :any}, {:name "Operator", :record-type :var} {:record-type :any}, {:name "Term1", :record-type :var} {:record-type :any}, {:name "Relation", :record-type :var} {:record-type :any}}
{}
{{:name "Conjunct", :record-type :var} {:record-type :any}}
{{:name "Functor", :record-type :var} {:record-type :any}}
{}
{}
{}
{{:name "Disjunct1", :record-type :var} {:record-type :any}, {:name "Disjunct", :record-type :var} {:record-type :any}}
{{:name "Functor", :record-type :var} {:record-type :any}, {:name "Time", :record-type :var} {:record-type :any}, {:name "Content", :record-type :var} {:record-type :any}, {:name "Abducible", :record-type :var} {:record-type :any}}
{{:name "Number", :record-type :var} {:record-type :any}}
{{:name "Relation", :record-type :var} {:record-type :any}}
{}
{{:name "_382", :record-type :var} {:record-type :any}}
{{:name "Disjunct", :record-type :var} {:record-type :any}, {:name "MoreDisjuncts", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "MoreConjuncts", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Conjunct", :record-type :var} {:record-type :any}}
{{:name "_382", :record-type :var} {:record-type :any}, {:name "Functor", :record-type :var} {:record-type :any}, {:name "Content", :record-type :var} {:record-type :any}}
{}
{{:name "MoreConjuncts", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Conjunct", :record-type :var} {:record-type :any}}
{{:name "BodyAtom", :record-type :var} {:record-type :any}, {:name "MoreBodyAtoms", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{}
{}
{{:name "Conjunct", :record-type :var} {:record-type :any}}
{}
{{:name "Variable", :record-type :var} {:record-type :any}}
{{:name "CLPOperator", :record-type :var} {:record-type :any}, {:name "Operand2", :record-type :var} {:record-type :any}, {:name "Operand1", :record-type :var} {:record-type :any}, {:name "Expression", :record-type :var} {:record-type :any}}
{{:name "Body", :record-type :var} {:record-type :any}, {:name "Head", :record-type :var} {:record-type :any}}
{{:name "BodyAtom", :record-type :var} {:record-type :any}}
{{:name "_400", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N", :record-type :var} {:record-type :any}, {:name "_398", :record-type :var} {:record-type :any}}
{}
{}
{{:name "MoreConjuncts", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Conjunct", :record-type :var} {:record-type :any}}
{{:name "Head", :record-type :var} {:record-type :any}}
{}
{{:name "Expression", :record-type :var} {:record-type :any}}
{{:name "_382", :record-type :var} {:record-type :any}, {:name "Functor", :record-type :var} {:record-type :any}, {:name "Content", :record-type :var} {:record-type :any}}
{}
{{:name "BodyAtom", :record-type :var} {:record-type :any}}
{{:name "BodyAtom", :record-type :var} {:record-type :any}}
{{:name "BodyAtom", :record-type :var} {:record-type :any}, {:name "MoreAtoms", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Relation", :record-type :var} {:record-type :any}}
{{:name "MoreConjuncts", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Conjunct", :record-type :var} {:record-type :any}}
{{:name "Conjunct", :record-type :var} {:record-type :any}}
{{:name "Content", :record-type :var} {:record-type :any}}
{}
{{:name "Relop", :record-type :var} {:record-type :any}, {:name "Expression2", :record-type :var} {:record-type :any}, {:name "Expression1", :record-type :var} {:record-type :any}, {:name "Relation", :record-type :var} {:record-type :any}}
{}
{}
{{:name "Head", :record-type :var} {:record-type :any}}
{}
{{:name "Functor", :record-type :var} {:record-type :any}}
{{:name "BodyAtom", :record-type :var} {:record-type :any}}
{{:name "Expression", :record-type :var} {:record-type :any}}
{{:name "Conjunct", :record-type :var} {:record-type :any}}
{{:name "Functor", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{{:name "_382", :record-type :var} {:record-type :any}, {:name "Functor", :record-type :var} {:record-type :any}}
{{:name "_382", :record-type :var} {:record-type :any}}
{{:name "_382", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "R", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "CR", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_822", :record-type :var} {:record-type :any}, {:name "Expls", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "G", :record-type :var} {:record-type :any}, {:name "Pr", :record-type :var} {:record-type :any}}
{{:name "Option", :record-type :var} {:record-type :any}}
{{:name "HLatest", :record-type :var} {:record-type :any}}
{{:name "T", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}}
{{:name "T", :record-type :var} {:record-type :atom}, {:name "_396", :record-type :var} {:record-type :any}}
{{:name "_440", :record-type :var} {:record-type :any}, {:name "Args", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "T", :record-type :var} {:record-type :nonvar}, {:name "Q", :record-type :var} {:record-type :any}}
{{:name "H", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Q", :record-type :var} {:record-type :any}}
{{:name "_TotalAttempted", :record-type :var} {:record-type :any}, {:name "Correct", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Total", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "_432", :record-type :var} {:record-type :any}}
{{:name "_TotalAttempted", :record-type :var} {:record-type :any}, {:name "_Correct", :record-type :var} {:record-type :any}, {:name "_Total", :record-type :var} {:record-type :any}, {:name "_432", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:record-type :any}, {:name "TT2", :record-type :var} {:record-type :number}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "TA", :record-type :var} {:record-type :any}, {:name "TT1", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Es", :record-type :var} {:record-type :any}, {:name "_398", :record-type :var} {:record-type :any}}
{{:name "TA2", :record-type :var} {:record-type :number}, {:name "_430", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_548", :record-type :var} {:record-type :any}, {:name "TT1", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "TA1", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "TT2", :record-type :var} {:record-type :number}, {:name "A", :record-type :var} {:record-type :any}, {:name "Es", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C", :record-type :var} {:record-type :any}}
{{:name "TA2", :record-type :var} {:record-type :number}, {:name "E", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_548", :record-type :var} {:record-type :any}, {:name "TT1", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "C1", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "TA1", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "TT2", :record-type :var} {:record-type :number}, {:name "A", :record-type :var} {:record-type :any}, {:name "Es", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:record-type :number}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "H1", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}}
{}
{{:name "W", :record-type :var} {:record-type :any}, {:name "_688", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "W", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "W", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "_962", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "S", :record-type :var} {:record-type :any}, {:name "N2", :record-type :var} {:record-type :any}, {:name "S1", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "W", :record-type :var} {:record-type :any}, {:name "C1", :record-type :var} {:arglist ({:functor "/", :arglist ({:record-type :atom} {:record-type :atom}), :record-type :compound} {:record-type :any} {:record-type :any} {:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :tuple}, {:name "S2", :record-type :var} {:record-type :any}, {:name "_944", :record-type :var} {:record-type :any}, {:name "Rel", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C2", :record-type :var} {:arglist ({:functor "/", :arglist ({:record-type :atom} {:record-type :atom}), :record-type :compound} {:record-type :any} {:record-type :any} {:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :tuple}, {:name "_998", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :tuple}, {:name "_926", :record-type :var} {:record-type :any}}
{{:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}}
{{:name "_428", :record-type :var} {:record-type :any}, {:name "_436", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "_428", :record-type :var} {:record-type :any}, {:name "_436", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "MoreOccurrences", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_398", :record-type :var} {:record-type :any}}
{{:name "_428", :record-type :var} {:record-type :any}, {:name "_436", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "_428", :record-type :var} {:record-type :any}, {:name "_436", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "_4092", :record-type :var} {:record-type :atom}, {:name "X", :record-type :var} {:record-type :atom}, {:name "_4090", :record-type :var} {:record-type :atom}, {:name "Y", :record-type :var} {:record-type :atom}, {:name "Pos", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "_406", :record-type :var} {:record-type :any}, {:name "Lx", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Y", :record-type :var} {:record-type :any}, {:name "Ly", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_408", :record-type :var} {:record-type :any}, {:name "_532", :record-type :var} {:record-type :any}, {:name "_524", :record-type :var} {:record-type :any}, {:name "U", :record-type :var} {:record-type :any}, {:name "_562", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "_528", :record-type :var} {:record-type :any}}
{{:name "_406", :record-type :var} {:record-type :any}, {:name "_408", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "E", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Y", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "E", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Y", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "E", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Y", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "E", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Y", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "Stream", :record-type :var} {:record-type :ground}, {:name "Term", :record-type :var} {:record-type :any}}
{{:name "E", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:record-type :any}, {:name "A0", :record-type :var} {:record-type :any}, {:name "QR", :record-type :var} {:record-type :any}, {:name "How", :record-type :var} {:record-type :any}, {:name "WT", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}, {:name "EVs", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}, {:name "BL", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "_P", :record-type :var} {:record-type :any}}
{{:name "Arguments", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Function", :record-type :var} {:record-type :any}, {:name "PathTerm", :record-type :var} {:record-type :any}, {:name "TransformedArguments", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "TransformedTerm", :record-type :var} {:record-type :any}, {:name "Term", :record-type :var} {:record-type :nonvar}}
{{:name "A", :record-type :var} {:record-type :any}}
{{:name "A1", :record-type :var} {:record-type :any}, {:name "R", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "A", :record-type :var} {:record-type :any}}
{{:name "R", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "A", :record-type :var} {:record-type :any}, {:name "R1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "FillLen", :record-type :var} {:record-type :number}, {:name "Fill", :record-type :var} {:record-type :atom}, {:name "Line", :record-type :var} {:record-type :atom}, {:name "Max", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Rule", :record-type :var} {:record-type :atom}, {:name "Line1", :record-type :var} {:record-type :atom}, {:name "Line2", :record-type :var} {:record-type :atom}, {:name "Len", :record-type :var} {:record-type :integer}}
{{:name "WordsM", :record-type :var} {:record-type :any}, {:name "Atom", :record-type :var} {:record-type :any}, {:name "In", :record-type :var} {:record-type :any}, {:name "Words", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{{:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_532", :record-type :var} {:record-type :any}, {:name "_524", :record-type :var} {:record-type :any}, {:name "U", :record-type :var} {:record-type :any}, {:name "_562", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}}
{{:name "_406", :record-type :var} {:record-type :any}, {:name "_408", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Form", :record-type :var} {:record-type :any}}
{{:name "_4016", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Form", :record-type :var} {:record-type :any}}
{{:name "Conds", :record-type :var} {:record-type :any}, {:name "Formula", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Referents", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_4020", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "_3988", :record-type :var} {:record-type :any}}
{{:name "Cond1", :record-type :var} {:record-type :any}, {:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Formula1", :record-type :var} {:record-type :any}, {:name "Cond2", :record-type :var} {:record-type :any}, {:name "Formula2", :record-type :var} {:record-type :any}}
{{:name "Cond", :record-type :var} {:record-type :any}, {:name "Formula", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:arglist #{{:functor "smerge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Form", :record-type :var} {:record-type :any}, {:name "Gap", :record-type :var} {:record-type :any}}
{{:name "R", :record-type :var} {:record-type :any}, {:name "G", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}}
{{:name "G", :record-type :var} {:record-type :var}}
{{:name "_426", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "G", :record-type :var} {:record-type :nonvar}, {:name "Par", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "G", :record-type :var} {:record-type :nonvar}, {:name "_444", :record-type :var} {:record-type :integer}}
{{:name "G", :record-type :var} {:record-type :ground}}
{{:name "_428", :record-type :var} {:record-type :any}, {:name "_436", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "_428", :record-type :var} {:record-type :any}, {:name "_436", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "MoreOccurrences", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_398", :record-type :var} {:record-type :any}}
{{:name "_428", :record-type :var} {:record-type :any}, {:name "_436", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{}
{{:name "MoreVarStructs", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Remaining", :record-type :var} {:record-type :any}, {:name "VarStruct", :record-type :var} {:functor "variable", :arglist ({:record-type :any} {:type {:record-type :any}, :record-type :list}), :record-type :compound}, {:name "Variables", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Var", :record-type :var} {:record-type :any}, {:name "Other", :record-type :var} {:record-type :any}, {:name "Goals", :record-type :var} {:record-type :any}}
{}
{}
{}
{{:name "Copy", :record-type :var} {:record-type :any}, {:name "Der", :record-type :var} {:record-type :any}, {:name "CCG", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}}
{{:name "CCG", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :ground}}
{{:name "_3974", :record-type :var} {:record-type :any}}
{{:name "J", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "G", :record-type :var} {:record-type :any}, {:name "_562", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "H", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}}
{{:name "W", :record-type :var} {:record-type :any}}
{}
{{:name "C1", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{}
{{:name "Der", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Att", :record-type :var} {:record-type :any}, {:name "_480", :record-type :var} {:record-type :any}, {:name "_486", :record-type :var} {:record-type :any}, {:name "_482", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :integer}, {:name "S", :record-type :var} {:type {:record-type :integer}, :record-type :list}}
{{:name "A", :record-type :var} {:record-type :atom}, {:name "S", :record-type :var} {:type {:record-type :integer}, :record-type :list}}
{}
{{:name "Quantification", :record-type :var} {:record-type :atom}, {:name "Variable", :record-type :var} {:functor "variable", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}, {:name "MoreVariables", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "J", :record-type :var} {:record-type :number}, {:name "_594", :record-type :var} {:record-type :any}, {:name "_740", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Ext", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "V", :record-type :var} {:record-type :any}, {:name "_742", :record-type :var} {:record-type :any}, {:name "S2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_586", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_596", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_750", :record-type :var} {:record-type :any}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_586", :record-type :var} {:record-type :any}, {:name "S2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Ext", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "J", :record-type :var} {:record-type :number}, {:name "V", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_594", :record-type :var} {:record-type :any}}
{{:name "_418", :record-type :var} {:record-type :any}, {:name "_420", :record-type :var} {:record-type :any}, {:name "_422", :record-type :var} {:record-type :any}}
{{:name "_568", :record-type :var} {:record-type :any}, {:name "J", :record-type :var} {:record-type :number}, {:name "_564", :record-type :var} {:record-type :any}, {:name "S1", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Ext", :record-type :var} {:record-type :any}, {:name "_570", :record-type :var} {:record-type :any}, {:name "S2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_572", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "X", :record-type :var} {:record-type :any}}
{{:name "R", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "RT", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "T", :record-type :var} {:record-type :any}}
{{:name "B", :record-type :var} {:record-type :any}}
{{:name "_432", :record-type :var} {:record-type :any}, {:name "_436", :record-type :var} {:record-type :any}}
{{:name "Space1", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:record-type :any}, {:name "L3", :record-type :var} {:record-type :any}, {:name "Space2", :record-type :var} {:record-type :any}}
{{:name "Space1", :record-type :var} {:record-type :any}, {:name "X2", :record-type :var} {:record-type :atom}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Temp", :record-type :var} {:record-type :atom}, {:name "L3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X1", :record-type :var} {:record-type :atom}, {:name "Space2", :record-type :var} {:record-type :any}, {:name "X3", :record-type :var} {:record-type :atom}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Space1", :record-type :var} {:record-type :any}, {:name "L3", :record-type :var} {:record-type :any}, {:name "Space2", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:record-type :any}}
{{:name "_436", :record-type :var} {:record-type :any}, {:name "_438", :record-type :var} {:record-type :any}, {:name "_430", :record-type :var} {:record-type :any}, {:name "_432", :record-type :var} {:record-type :any}}
{{:name "KeyedDisjunct", :record-type :var} {:type {:functor "-", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}, :record-type :list}, {:name "SortedDisjunct", :record-type :var} {:type {:functor "-", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}, :record-type :list}, {:name "Disjunct", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "ShuffledDisjunct", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{}
{{:name "T", :record-type :var} {:record-type :any}, {:name "V", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "MinID", :record-type :var} {:record-type :atom}, {:name "M2", :record-type :var} {:record-type :atom}, {:name "M1", :record-type :var} {:record-type :atom}, {:name "Min", :record-type :var} {:record-type :atom}}
{{:name "T", :record-type :var} {:record-type :any}}
{{:name "Var", :record-type :var} {:record-type :var}}
{{:name "Var", :record-type :var} {:record-type :atom}}
{{:name "Var", :record-type :var} {:record-type :nonvar}}
{{:name "A3", :record-type :var} {:arglist #{{:record-type :atom} {:record-type :integer}}, :record-type :one-of}, {:name "A1", :record-type :var} {:arglist #{{:record-type :atom} {:record-type :integer}}, :record-type :one-of}, {:name "S2", :record-type :var} {:type {:record-type :integer}, :record-type :list}, {:name "A2", :record-type :var} {:arglist #{{:record-type :atom} {:record-type :integer}}, :record-type :one-of}, {:name "S1", :record-type :var} {:type {:record-type :integer}, :record-type :list}, {:name "S3", :record-type :var} {:type {:record-type :integer}, :record-type :list}}
{{:name "C", :record-type :var} {:record-type :any}, {:name "G", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "A", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}}
{{:name "_938", :record-type :var} {:record-type :any}, {:name "Codes", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Line", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Var", :record-type :var} {:arglist #{{:functor nil, :arglist (), :record-type :compound} {:record-type :atom}}, :record-type :one-of}, {:name "N", :record-type :var} {:record-type :integer}}
{{:name "Lines1", :record-type :var} {:record-type :any}, {:name "Length2", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Drs2", :record-type :var} {:record-type :any}, {:name "Drs1", :record-type :var} {:record-type :any}, {:name "Length1", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Lines", :record-type :var} {:record-type :any}, {:name "Lines2", :record-type :var} {:record-type :any}, {:name "Length", :record-type :var} {:record-type :number}}
{{:name "Middle", :record-type :var} {:record-type :any}, {:name "ConLines0", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "DrsLines0", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Length", :record-type :var} {:record-type :number}, {:name "CleanRel", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Rel", :record-type :var} {:record-type :any}, {:name "Top", :record-type :var} {:record-type :any}, {:name "RelLength", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "ConLength", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Conds", :record-type :var} {:record-type :any}, {:name "ConLines1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Width", :record-type :var} {:record-type :number}, {:name "Lines", :record-type :var} {:record-type :any}, {:name "DrsLines1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Lines1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N2", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Length", :record-type :var} {:record-type :number}, {:name "OpCode", :record-type :var} {:type {:record-type :integer}, :record-type :list}, {:name "Complex", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Lines3", :record-type :var} {:record-type :any}, {:name "Drs2", :record-type :var} {:record-type :any}, {:name "Drs1", :record-type :var} {:record-type :any}, {:name "Lines2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Op", :record-type :var} {:record-type :atom}, {:name "OpLen", :record-type :var} {:record-type :integer}, {:name "N1", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}}
{{:name "Line4", :record-type :var} {:record-type :any}, {:name "Lines1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tail", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Line2", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Lines4", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "OpWidth", :record-type :var} {:record-type :integer}, {:name "Line1", :record-type :var} {:record-type :any}, {:name "Length", :record-type :var} {:record-type :number}, {:name "DrsWidth", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "LeftMargin", :record-type :var} {:record-type :integer}, {:name "Line3", :record-type :var} {:record-type :any}, {:name "VarLen", :record-type :var} {:record-type :integer}, {:name "Lines2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:arglist #{{:functor nil, :arglist (), :record-type :compound} {:record-type :atom}}, :record-type :one-of}, {:name "Dummy", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Rest", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Drs", :record-type :var} {:record-type :any}}
{{:name "RefLength", :record-type :var} {:record-type :integer}, {:name "Line", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "CondLines1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Refs1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "CondLength", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Length", :record-type :var} {:record-type :number}, {:name "Dom", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "SortedConds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Top", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "CondLines2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Conds", :record-type :var} {:record-type :any}, {:name "Width", :record-type :var} {:record-type :number}, {:name "CleanConds", :record-type :var} {:record-type :any}, {:name "Refs3", :record-type :var} {:record-type :any}}
{{:name "Codes", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "Width", :record-type :var} {:record-type :any}, {:name "_430", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:record-type :any}}
{{:name "Lines1", :record-type :var} {:arglist ({:type {:record-type :any}, :record-type :list} {:type {:record-type :any}, :record-type :list} {:type {:record-type :any}, :record-type :list} {:type {:record-type :any}, :record-type :list} {:type {:record-type :any}, :record-type :list}), :record-type :tuple}, {:name "N2", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Length", :record-type :var} {:record-type :number}, {:name "M1", :record-type :var} {:record-type :number}, {:name "M2", :record-type :var} {:record-type :number}, {:name "Lines3", :record-type :var} {:record-type :any}, {:name "Lines2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:arglist #{{:functor nil, :arglist (), :record-type :compound} {:record-type :atom}}, :record-type :one-of}, {:name "N1", :record-type :var} {:record-type :integer}, {:name "Drs", :record-type :var} {:record-type :any}}
{{:name "_436", :record-type :var} {:record-type :any}, {:name "_438", :record-type :var} {:record-type :any}, {:name "_434", :record-type :var} {:record-type :any}, {:name "_432", :record-type :var} {:record-type :any}}
{{:name "N1", :record-type :var} {:record-type :number}, {:name "R", :record-type :var} {:functor nil, :arglist (), :record-type :compound}, {:name "Tn", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Rn", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:functor nil, :arglist (), :record-type :compound}, {:name "N", :record-type :var} {:record-type :integer}}
{{:name "N1", :record-type :var} {:record-type :number}, {:name "A", :record-type :var} {:arglist #{{:functor "&", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "if", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :atom}}, :record-type :one-of}, {:name "N2", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "B", :record-type :var} {:arglist #{{:functor "&", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "if", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :atom}}, :record-type :one-of}}
{{:name "H", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}}
{{:name "N", :record-type :var} {:record-type :any}}
{{:name "N", :record-type :var} {:record-type :any}}
{{:name "N", :record-type :var} {:record-type :any}}
{{:name "_414", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}}
{{:name "N", :record-type :var} {:record-type :any}}
{{:name "MoreVariables", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Where", :record-type :var} {:record-type :any}, {:name "Remaining", :record-type :var} {:record-type :any}, {:name "VarName", :record-type :var} {:record-type :any}, {:name "MoreOccurs", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Type", :record-type :var} {:record-type :any}}
{{:name "_402", :record-type :var} {:record-type :any}, {:name "_404", :record-type :var} {:record-type :any}}
{{:name "_402", :record-type :var} {:record-type :any}, {:name "_404", :record-type :var} {:record-type :any}}
{{:name "_402", :record-type :var} {:record-type :any}, {:name "_404", :record-type :var} {:record-type :any}}
{}
{{:name "_402", :record-type :var} {:record-type :any}, {:name "_404", :record-type :var} {:record-type :any}}
{{:name "_402", :record-type :var} {:record-type :any}, {:name "_404", :record-type :var} {:record-type :any}}
{{:name "_402", :record-type :var} {:record-type :any}, {:name "_404", :record-type :var} {:record-type :any}}
{{:name "Rep", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "BL", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Rep", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}}
{{:name "H", :record-type :var} {:record-type :any}}
{{:name "H", :record-type :var} {:record-type :any}}
{{:name "Rep", :record-type :var} {:record-type :any}, {:name "Max", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "Comm", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:arglist #{{:functor "&", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "if", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :atom} {:functor "bag", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}}
{{:name "H", :record-type :var} {:record-type :any}}
{{:name "H", :record-type :var} {:record-type :any}}
{{:name "_688", :record-type :var} {:record-type :any}, {:name "DB", :record-type :var} {:record-type :integer}, {:name "Rep", :record-type :var} {:record-type :any}, {:name "G", :record-type :var} {:record-type :any}}
{{:name "FileName", :record-type :var} {:arglist #{{:functor nil, :arglist (), :record-type :compound} {:record-type :atom} {:record-type :string}}, :record-type :one-of}, {:name "FileString", :record-type :var} {:record-type :any}, {:name "ICList", :record-type :var} {:record-type :any}, {:name "XML", :record-type :var} {:record-type :any}, {:name "Error", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "_6506", :record-type :var} {:record-type :any}, {:name "Roles", :record-type :var} {:arglist ({:record-type :atom}), :record-type :tuple}}
{{:name "Verb", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "Roles", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "_6506", :record-type :var} {:record-type :any}, {:name "_6600", :record-type :var} {:record-type :any}, {:name "Roles", :record-type :var} {:arglist ({:record-type :atom}), :record-type :tuple}}
{{:name "Verb", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "Roles", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "Verb", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "Roles", :record-type :var} {:record-type :any}}
{{:name "Verb", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Roles", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "_462", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Roles", :record-type :var} {:record-type :any}, {:name "_460", :record-type :var} {:record-type :any}}
{{:name "Verb", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "Roles", :record-type :var} {:record-type :any}}
{{:name "Verb", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "Roles", :record-type :var} {:record-type :empty-list}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "O2", :record-type :var} {:record-type :any}, {:name "StartParse", :record-type :var} {:record-type :any}, {:name "Mid", :record-type :var} {:record-type :any}, {:name "O1", :record-type :var} {:record-type :any}, {:name "Callback", :record-type :var} {:record-type :any}}
{{:name "R0", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Done", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L", :record-type :var} {:record-type :integer}, {:name "DC", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "G", :record-type :var} {:record-type :any}, {:name "DC1", :record-type :var} {:record-type :number}, {:name "R", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Given", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "T", :record-type :var} {:record-type :any}}
{{:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Stream", :record-type :var} {:record-type :any}}
{{:name "_382", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :ground}, {:name "List", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:record-type :any}}
{{:name "_472", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "_474", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "_404", :record-type :var} {:record-type :any}}
{{:name "_402", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :number}, {:name "E", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "B", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "_424", :record-type :var} {:record-type :any}, {:name "_420", :record-type :var} {:record-type :any}, {:name "_422", :record-type :var} {:record-type :any}}
{{:name "Subs", :record-type :var} {:record-type :any}, {:name "Yn", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :number}, {:name "X", :record-type :var} {:functor nil, :arglist (), :record-type :compound}, {:name "Xn", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:functor nil, :arglist (), :record-type :compound}, {:name "N", :record-type :var} {:record-type :integer}}
{{:name "Stream", :record-type :var} {:record-type :ground}}
{{:name "History", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :ground}}
{{:name "Var", :record-type :var} {:arglist #{{:record-type :nonvar} {:record-type :var}}, :record-type :one-of}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}}
{{:name "Dom2", :record-type :var} {:record-type :any}, {:name "Conds1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Conds2", :record-type :var} {:record-type :any}, {:name "Dom1", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "A2", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "A2", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "A2", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "A2", :record-type :var} {:record-type :any}}
{{:name "C1", :record-type :var} {:record-type :any}, {:name "X2", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C2", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}}
{{:name "Atom", :record-type :var} {:record-type :any}, {:name "Words", :record-type :var} {:record-type :any}}
{}
{{:name "Atom", :record-type :var} {:record-type :any}, {:name "Words", :record-type :var} {:record-type :any}}
{}
{{:name "_396", :record-type :var} {:record-type :any}, {:name "Atom", :record-type :var} {:record-type :any}, {:name "Level", :record-type :var} {:record-type :any}}
{{:name "Temp", :record-type :var} {:record-type :atom}, {:name "X", :record-type :var} {:record-type :atom}, {:name "F", :record-type :var} {:record-type :atom}, {:name "Cat", :record-type :var} {:record-type :atom}, {:name "_452", :record-type :var} {:record-type :any}}
{{:name "Temp2", :record-type :var} {:record-type :atom}, {:name "Atom", :record-type :var} {:record-type :atom}, {:name "Temp3", :record-type :var} {:record-type :atom}, {:name "X", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :atom}, {:name "F", :record-type :var} {:record-type :atom}, {:name "Temp1", :record-type :var} {:record-type :atom}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "Atom", :record-type :var} {:record-type :atom}, {:name "Temp", :record-type :var} {:record-type :atom}, {:name "X", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :atom}, {:name "F", :record-type :var} {:record-type :atom}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :atom}, {:name "_410", :record-type :var} {:record-type :any}}
{}
{{:name "MoreClauses", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "NewClause", :record-type :var} {:record-type :nonvar}, {:name "Clause", :record-type :var} {:record-type :nonvar}, {:name "MoreNewClauses", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Occur", :record-type :var} {:functor "/", :arglist ({:record-type :atom} {:record-type :integer}), :record-type :compound}, {:name "_400", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "MoreOccurs", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_398", :record-type :var} {:record-type :any}}
{{:name "T", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}, {:name "Qnew", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Lines", :record-type :var} {:record-type :any}, {:name "Len", :record-type :var} {:record-type :any}}
{{:name "Tok", :record-type :var} {:record-type :any}, {:name "_4604", :record-type :var} {:record-type :any}, {:name "_4602", :record-type :var} {:record-type :any}, {:name "Line1", :record-type :var} {:record-type :any}, {:name "Line2", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}, {:name "Len", :record-type :var} {:record-type :any}, {:name "Line3", :record-type :var} {:record-type :any}}
{{:name "Max", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "L3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Line2", :record-type :var} {:record-type :atom}, {:name "TreeLen", :record-type :var} {:record-type :any}, {:name "Line1", :record-type :var} {:record-type :atom}, {:name "CatLen", :record-type :var} {:record-type :integer}, {:name "L2", :record-type :var} {:record-type :any}, {:name "Rule", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "Tree", :record-type :var} {:record-type :any}, {:name "Atom", :record-type :var} {:record-type :atom}, {:name "RuleName", :record-type :var} {:record-type :atom}}
{{:name "Max", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "L3", :record-type :var} {:record-type :any}, {:name "Middle", :record-type :var} {:record-type :any}, {:name "Line2", :record-type :var} {:record-type :atom}, {:name "L7", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "TreeLen", :record-type :var} {:record-type :number}, {:name "MaxTemp", :record-type :var} {:record-type :number}, {:name "Line1", :record-type :var} {:record-type :atom}, {:name "CatLen", :record-type :var} {:record-type :integer}, {:name "MaxMiddle", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "MaxRight", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "L5", :record-type :var} {:record-type :any}, {:name "L6", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:record-type :any}, {:name "_580", :record-type :var} {:record-type :any}, {:name "_576", :record-type :var} {:record-type :any}, {:name "Left", :record-type :var} {:record-type :any}, {:name "Rule", :record-type :var} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}, {:name "MaxLeft", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "N", :record-type :var} {:record-type :any}, {:name "Right", :record-type :var} {:record-type :any}, {:name "L4", :record-type :var} {:record-type :any}, {:name "Atom", :record-type :var} {:record-type :atom}, {:name "RuleName", :record-type :var} {:record-type :atom}, {:name "_578", :record-type :var} {:record-type :any}}
{{:name "Tok", :record-type :var} {:record-type :atom}, {:name "TokLen", :record-type :var} {:record-type :integer}, {:name "Line1", :record-type :var} {:record-type :atom}, {:name "Line2", :record-type :var} {:record-type :atom}, {:name "Cat", :record-type :var} {:record-type :any}, {:name "CatAtom", :record-type :var} {:record-type :atom}, {:name "CatLen", :record-type :var} {:record-type :integer}, {:name "Len", :record-type :var} {:record-type :number}, {:name "Line3", :record-type :var} {:record-type :atom}}
{{:name "Tok", :record-type :var} {:record-type :any}, {:name "Line1", :record-type :var} {:record-type :any}, {:name "_454", :record-type :var} {:record-type :any}, {:name "Line2", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}, {:name "Len", :record-type :var} {:record-type :any}, {:name "_456", :record-type :var} {:record-type :any}, {:name "Line3", :record-type :var} {:record-type :any}, {:name "_452", :record-type :var} {:record-type :any}}
{{:name "Max", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "L3", :record-type :var} {:record-type :any}, {:name "Line2", :record-type :var} {:record-type :atom}, {:name "TreeLen", :record-type :var} {:record-type :number}, {:name "Line1", :record-type :var} {:record-type :atom}, {:name "CatLen", :record-type :var} {:record-type :integer}, {:name "MaxRight", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "L5", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L2", :record-type :var} {:record-type :any}, {:name "Left", :record-type :var} {:record-type :any}, {:name "Name", :record-type :var} {:record-type :atom}, {:name "Rule", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "MaxLeft", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "N", :record-type :var} {:record-type :any}, {:name "Right", :record-type :var} {:record-type :any}, {:name "L4", :record-type :var} {:record-type :any}, {:name "Atom", :record-type :var} {:record-type :atom}}
{{:name "Ana", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_604", :record-type :var} {:record-type :any}, {:name "Pro", :record-type :var} {:record-type :any}, {:name "_406", :record-type :var} {:record-type :any}, {:name "_610", :record-type :var} {:record-type :any}}
{{:name "Ana", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Sort", :record-type :var} {:record-type :any}, {:name "_498", :record-type :var} {:record-type :any}, {:name "Symb", :record-type :var} {:record-type :any}, {:name "_616", :record-type :var} {:record-type :any}, {:name "_504", :record-type :var} {:record-type :any}, {:name "_610", :record-type :var} {:record-type :any}, {:name "Ant", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "_614", :record-type :var} {:record-type :any}, {:name "Ana", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Same", :record-type :var} {:record-type :any}, {:name "_498", :record-type :var} {:record-type :any}, {:name "_616", :record-type :var} {:record-type :any}, {:name "_504", :record-type :var} {:record-type :any}, {:name "_502", :record-type :var} {:record-type :any}, {:name "_610", :record-type :var} {:record-type :any}, {:name "Ant", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Ana", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Sort", :record-type :var} {:record-type :any}, {:name "Same", :record-type :var} {:record-type :any}, {:name "_498", :record-type :var} {:record-type :any}, {:name "_616", :record-type :var} {:record-type :any}, {:name "_504", :record-type :var} {:record-type :any}, {:name "_610", :record-type :var} {:record-type :any}, {:name "Ant", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "_614", :record-type :var} {:record-type :any}, {:name "Ana", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_498", :record-type :var} {:record-type :any}, {:name "Symb", :record-type :var} {:record-type :any}, {:name "_616", :record-type :var} {:record-type :any}, {:name "_504", :record-type :var} {:record-type :any}, {:name "_502", :record-type :var} {:record-type :any}, {:name "_610", :record-type :var} {:record-type :any}, {:name "Ant", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "_406", :record-type :var} {:record-type :any}, {:name "_408", :record-type :var} {:record-type :any}}
{{:name "_7334", :record-type :var} {:record-type :any}}
{{:name "_7334", :record-type :var} {:record-type :any}}
{{:name "_7334", :record-type :var} {:record-type :any}}
{{:name "_7334", :record-type :var} {:record-type :any}}
{{:name "_7334", :record-type :var} {:record-type :any}}
{{:name "_7334", :record-type :var} {:record-type :any}}
{{:name "_7334", :record-type :var} {:record-type :any}}
{}
{{:name "_7334", :record-type :var} {:record-type :any}}
{{:name "_7334", :record-type :var} {:record-type :any}}
{{:name "_396", :record-type :var} {:record-type :any}}
{{:name "Arg2", :record-type :var} {:record-type :any}, {:name "Label", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Cons", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Arg1", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "L2", :record-type :var} {:record-type :any}, {:name "Label", :record-type :var} {:record-type :any}, {:name "Cons", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Label", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Cons", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Arg", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "_482", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Label", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Cons", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Label", :record-type :var} {:record-type :any}, {:name "Cons", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Arg2", :record-type :var} {:record-type :any}, {:name "Label", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Cons", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Sense", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Arg1", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "L2", :record-type :var} {:record-type :any}, {:name "Label", :record-type :var} {:record-type :any}, {:name "Cons", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Label", :record-type :var} {:record-type :any}, {:name "Labels", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Cons", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Label", :record-type :var} {:record-type :any}, {:name "Cons", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "L2", :record-type :var} {:record-type :any}, {:name "Label", :record-type :var} {:record-type :any}, {:name "Cons", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Label", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Cons", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Y", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Label", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Cons", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Y", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Label", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Cons", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Sense", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Arg", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Label", :record-type :var} {:record-type :any}, {:name "Cons", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "L2", :record-type :var} {:record-type :any}, {:name "Label", :record-type :var} {:record-type :any}, {:name "Cons", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Label", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Cons", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Y", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "L2", :record-type :var} {:record-type :any}, {:name "Label", :record-type :var} {:record-type :any}, {:name "Cons", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:record-type :any}, {:name "_476", :record-type :var} {:record-type :any}, {:name "_480", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Arg2", :record-type :var} {:record-type :any}, {:name "Label", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Cons", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Y", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Z", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "Z", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "_572", :record-type :var} {:record-type :any}, {:name "Z", :record-type :var} {:record-type :any}, {:name "_454", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "_572", :record-type :var} {:record-type :any}, {:name "Z", :record-type :var} {:record-type :any}, {:name "_454", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "Z", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "_572", :record-type :var} {:record-type :any}, {:name "Z", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "Z", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "Z", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "_572", :record-type :var} {:record-type :any}, {:name "Z", :record-type :var} {:record-type :any}, {:name "_454", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "_572", :record-type :var} {:record-type :any}, {:name "Z", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "_572", :record-type :var} {:record-type :any}, {:name "Z", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "_572", :record-type :var} {:record-type :any}, {:name "Z", :record-type :var} {:record-type :any}, {:name "_570", :record-type :var} {:record-type :any}, {:name "_454", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}, {:name "_452", :record-type :var} {:record-type :any}}
{{:name "Z", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "_572", :record-type :var} {:record-type :any}, {:name "Z", :record-type :var} {:record-type :any}, {:name "_454", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "_572", :record-type :var} {:record-type :any}, {:name "Z", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "_558", :record-type :var} {:record-type :any}, {:name "Z", :record-type :var} {:record-type :any}, {:name "_556", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "Z", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "_558", :record-type :var} {:record-type :any}, {:name "Z", :record-type :var} {:record-type :any}, {:name "_556", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "Z", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "_572", :record-type :var} {:record-type :any}, {:name "Z", :record-type :var} {:record-type :any}, {:name "_570", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "_572", :record-type :var} {:record-type :any}, {:name "Z", :record-type :var} {:record-type :any}, {:name "_570", :record-type :var} {:record-type :any}, {:name "_454", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "_572", :record-type :var} {:record-type :any}, {:name "Z", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "_572", :record-type :var} {:record-type :any}, {:name "Z", :record-type :var} {:record-type :any}, {:name "_570", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "Z", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "_572", :record-type :var} {:record-type :any}, {:name "Z", :record-type :var} {:record-type :any}, {:name "_570", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "_572", :record-type :var} {:record-type :any}, {:name "Z", :record-type :var} {:record-type :any}, {:name "_570", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "_572", :record-type :var} {:record-type :any}, {:name "Z", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "Y", :record-type :var} {:record-type :any}, {:name "_616", :record-type :var} {:record-type :any}, {:name "D4", :record-type :var} {:record-type :any}, {:name "_454", :record-type :var} {:record-type :any}, {:name "_830", :record-type :var} {:record-type :any}, {:name "_562", :record-type :var} {:record-type :any}, {:name "_884", :record-type :var} {:record-type :any}, {:name "D3", :record-type :var} {:record-type :any}, {:name "_508", :record-type :var} {:record-type :any}, {:name "_938", :record-type :var} {:record-type :any}, {:name "D2", :record-type :var} {:record-type :any}, {:name "D1", :record-type :var} {:record-type :any}, {:name "Z", :record-type :var} {:record-type :any}, {:name "_776", :record-type :var} {:record-type :any}}
{{:name "Z", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "_572", :record-type :var} {:record-type :any}, {:name "Z", :record-type :var} {:record-type :any}, {:name "_454", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "_572", :record-type :var} {:record-type :any}, {:name "Z", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "_444", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_442", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "G", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "Index1", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "E", :record-type :var} {:record-type :any}, {:name "_552", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :number}, {:name "K", :record-type :var} {:record-type :any}, {:name "Tuples", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index2", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "_648", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_714", :record-type :var} {:record-type :any}, {:name "Event", :record-type :var} {:record-type :any}, {:name "_560", :record-type :var} {:record-type :any}, {:name "Distance", :record-type :var} {:record-type :number}}
{{:name "Index1", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "E", :record-type :var} {:record-type :any}, {:name "_552", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :number}, {:name "K", :record-type :var} {:record-type :any}, {:name "Tuples", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index2", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "_648", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_714", :record-type :var} {:record-type :any}, {:name "Event", :record-type :var} {:record-type :any}, {:name "_560", :record-type :var} {:record-type :any}, {:name "Distance", :record-type :var} {:record-type :number}}
{{:name "H", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}}
{{:name "H2", :record-type :var} {:record-type :any}, {:name "H1", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "H", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "H", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "H2", :record-type :var} {:record-type :any}, {:name "H1", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "H", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "H", :record-type :var} {:arglist #{{:functor "=<", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "number", :arglist ({:record-type :any}), :record-type :compound} {:functor "is", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor ">=", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "=\\=", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "<", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor ">", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "_430", :record-type :var} {:functor "ground", :arglist ({:record-type :any}), :record-type :compound}}
{{:name "_408", :record-type :var} {:record-type :any}}
{{:name "L2", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Col", :record-type :var} {:record-type :atom}, {:name "Num", :record-type :var} {:record-type :integer}, {:name "Num1", :record-type :var} {:record-type :number}}
{{:name "_394", :record-type :var} {:record-type :any}, {:name "R", :record-type :var} {:record-type :var}}
{{:name "_V", :record-type :var} {:record-type :any}, {:name "Res", :record-type :var} {:record-type :any}}
{{:name "R", :record-type :var} {:record-type :any}, {:name "Res", :record-type :var} {:record-type :any}, {:name "V", :record-type :var} {:record-type :any}, {:name "RL", :record-type :var} {:record-type :any}}
{{:name "V", :record-type :var} {:record-type :any}, {:name "Res", :record-type :var} {:record-type :any}}
{{:name "V", :record-type :var} {:record-type :ground}, {:name "_396", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:record-type :any}, {:name "_414", :record-type :var} {:record-type :any}, {:name "_544", :record-type :var} {:record-type :any}, {:name "P", :record-type :var} {:record-type :any}}
{{:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C3", :record-type :var} {:record-type :any}, {:name "IDs", :record-type :var} {:record-type :any}, {:name "P2", :record-type :var} {:record-type :any}, {:name "C1", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:record-type :any}, {:name "P3", :record-type :var} {:record-type :any}, {:name "_446", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}}
{{:name "_412", :record-type :var} {:record-type :any}, {:name "Context", :record-type :var} {:record-type :any}, {:name "IDs", :record-type :var} {:record-type :any}, {:name "P", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "_508", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "U", :record-type :var} {:record-type :any}, {:name "P", :record-type :var} {:record-type :any}}
{{:name "P3", :record-type :var} {:record-type :any}, {:name "C1", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "P2", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:record-type :any}, {:name "IDs", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:record-type :any}, {:name "C3", :record-type :var} {:record-type :any}}
{{:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C3", :record-type :var} {:record-type :any}, {:name "IDs", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "P4", :record-type :var} {:record-type :any}, {:name "P2", :record-type :var} {:record-type :any}, {:name "C1", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:record-type :any}, {:name "P3", :record-type :var} {:record-type :any}, {:name "_840", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}}
{{:name "P3", :record-type :var} {:record-type :any}, {:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P2", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "IDs", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "As", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "E", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "eq", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "F", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "Sym", :record-type :var} {:record-type :any}, {:name "_824", :record-type :var} {:record-type :any}, {:name "X2", :record-type :var} {:record-type :any}, {:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Type", :record-type :var} {:record-type :any}, {:name "Sense", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:record-type :any}, {:name "X0", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_534", :record-type :var} {:record-type :any}}
{{:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X2", :record-type :var} {:record-type :any}, {:name "_734", :record-type :var} {:record-type :any}, {:name "_738", :record-type :var} {:record-type :any}, {:name "X0", :record-type :var} {:record-type :any}, {:name "_534", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_742", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:record-type :any}}
{{:name "_692", :record-type :var} {:record-type :any}, {:name "D4", :record-type :var} {:record-type :any}, {:name "X2", :record-type :var} {:record-type :any}, {:name "_530", :record-type :var} {:record-type :any}, {:name "_942", :record-type :var} {:record-type :any}, {:name "_584", :record-type :var} {:record-type :any}, {:name "_948", :record-type :var} {:record-type :any}, {:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_638", :record-type :var} {:record-type :any}, {:name "_996", :record-type :var} {:record-type :any}, {:name "D3", :record-type :var} {:record-type :any}, {:name "_738", :record-type :var} {:record-type :any}, {:name "D2", :record-type :var} {:record-type :any}, {:name "D1", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:record-type :any}, {:name "X0", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_1150", :record-type :var} {:record-type :any}}
{{:name "_692", :record-type :var} {:record-type :any}, {:name "D4", :record-type :var} {:record-type :any}, {:name "X2", :record-type :var} {:record-type :any}, {:name "_530", :record-type :var} {:record-type :any}, {:name "_942", :record-type :var} {:record-type :any}, {:name "_584", :record-type :var} {:record-type :any}, {:name "_948", :record-type :var} {:record-type :any}, {:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_638", :record-type :var} {:record-type :any}, {:name "_996", :record-type :var} {:record-type :any}, {:name "D3", :record-type :var} {:record-type :any}, {:name "_738", :record-type :var} {:record-type :any}, {:name "D2", :record-type :var} {:record-type :any}, {:name "D1", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:record-type :any}, {:name "X0", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_1150", :record-type :var} {:record-type :any}}
{{:name "Sym", :record-type :var} {:record-type :any}, {:name "X2", :record-type :var} {:record-type :any}, {:name "_530", :record-type :var} {:record-type :any}, {:name "_742", :record-type :var} {:record-type :any}, {:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_738", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:record-type :any}, {:name "X0", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_534", :record-type :var} {:record-type :any}}
{{:name "Sym", :record-type :var} {:record-type :any}, {:name "_824", :record-type :var} {:record-type :any}, {:name "X2", :record-type :var} {:record-type :any}, {:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Type", :record-type :var} {:record-type :any}, {:name "Sense", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:record-type :any}, {:name "X0", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_534", :record-type :var} {:record-type :any}}
{{:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X2", :record-type :var} {:record-type :any}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "X0", :record-type :var} {:record-type :any}, {:name "Sense", :record-type :var} {:record-type :any}, {:name "_534", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_742", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:record-type :any}}
{{:name "_1056", :record-type :var} {:record-type :any}, {:name "X2", :record-type :var} {:record-type :any}, {:name "_530", :record-type :var} {:record-type :any}, {:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "NE", :record-type :var} {:record-type :any}, {:name "_1052", :record-type :var} {:record-type :any}, {:name "_1048", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:record-type :any}, {:name "X0", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_534", :record-type :var} {:record-type :any}}
{{:name "Sym", :record-type :var} {:record-type :any}, {:name "X2", :record-type :var} {:record-type :any}, {:name "_530", :record-type :var} {:record-type :any}, {:name "_742", :record-type :var} {:record-type :any}, {:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_738", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:record-type :any}, {:name "X0", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_534", :record-type :var} {:record-type :any}}
{{:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X2", :record-type :var} {:record-type :any}, {:name "_734", :record-type :var} {:record-type :any}, {:name "_738", :record-type :var} {:record-type :any}, {:name "X0", :record-type :var} {:record-type :any}, {:name "_534", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_742", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "CC", :record-type :var} {:record-type :any}}
{{:name "_436", :record-type :var} {:record-type :any}, {:name "_438", :record-type :var} {:record-type :any}, {:name "_434", :record-type :var} {:record-type :any}, {:name "_432", :record-type :var} {:record-type :any}}
{{:name "Index1", :record-type :var} {:record-type :any}, {:name "Words", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tok", :record-type :var} {:arglist #{{:record-type :number} {:record-type :atom} {:functor "f", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "Index2", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :atom}, {:name "NiceToken", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "_644", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Tok", :record-type :var} {:arglist #{{:record-type :number} {:record-type :atom} {:functor "f", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "_566", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "_460", :record-type :var} {:record-type :any}, {:name "Words", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "NiceToken", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Tab", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Words", :record-type :var} {:record-type :any}, {:name "_398", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Tok", :record-type :var} {:arglist #{{:record-type :number} {:record-type :atom} {:functor "f", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "_566", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "_460", :record-type :var} {:record-type :any}, {:name "Words", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "NiceToken", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Index1", :record-type :var} {:record-type :any}, {:name "Words", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tok", :record-type :var} {:arglist #{{:record-type :number} {:record-type :atom} {:functor "f", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index2", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :atom}, {:name "NiceToken", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:record-type :any}, {:name "_644", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Index1", :record-type :var} {:record-type :any}, {:name "Words", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tok", :record-type :var} {:arglist #{{:record-type :number} {:record-type :atom} {:functor "f", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "Index2", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :atom}, {:name "NiceToken", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "_644", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Tab", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Words", :record-type :var} {:record-type :any}, {:name "_398", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "_436", :record-type :var} {:record-type :any}, {:name "_438", :record-type :var} {:record-type :any}, {:name "_434", :record-type :var} {:record-type :any}, {:name "_432", :record-type :var} {:record-type :any}}
{{:name "Index1", :record-type :var} {:record-type :any}, {:name "Words", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tok", :record-type :var} {:arglist #{{:record-type :number} {:record-type :atom} {:functor "f", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index2", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :atom}, {:name "NiceToken", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:record-type :any}, {:name "_644", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "_434", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:record-type :any}, {:name "ICList", :record-type :var} {:record-type :any}}
{}
{{:name "R", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "A", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Functor", :record-type :var} {:record-type :any}, {:name "_498", :record-type :var} {:record-type :any}, {:name "Fconv", :record-type :var} {:record-type :any}, {:name "_484", :record-type :var} {:record-type :any}}
{{:name "_448", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:record-type :any}, {:name "ICList", :record-type :var} {:record-type :any}}
{{:name "AtomArgs", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Fun", :record-type :var} {:record-type :any}, {:name "_454", :record-type :var} {:record-type :any}, {:name "Args", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Ctor", :record-type :var} {:record-type :nonvar}, {:name "Term", :record-type :var} {:record-type :nonvar}}
{{:name "IC", :record-type :var} {:functor "ic", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}, {:name "Body", :record-type :var} {:record-type :any}, {:name "Head", :record-type :var} {:record-type :any}, {:name "_506", :record-type :var} {:record-type :any}, {:name "BodyX", :record-type :var} {:record-type :any}, {:name "_596", :record-type :var} {:record-type :any}, {:name "HeadX", :record-type :var} {:record-type :any}, {:name "_610", :record-type :var} {:record-type :any}}
{{:name "AtomArgs", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Atom", :record-type :var} {:record-type :nonvar}, {:name "Rel", :record-type :var} {:record-type :nonvar}, {:name "Fun", :record-type :var} {:record-type :any}, {:name "_454", :record-type :var} {:record-type :any}, {:name "Args", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "String", :record-type :var} {:type {:record-type :integer}, :record-type :list}, {:name "_470", :record-type :var} {:record-type :any}, {:name "VarName", :record-type :var} {:record-type :atom}}
{{:name "Functor", :record-type :var} {:arglist ({:functor "pcdata", :arglist ({:type {:record-type :integer}, :record-type :list}), :record-type :compound}), :record-type :tuple}, {:name "Fconv", :record-type :var} {:record-type :atom}, {:name "F", :record-type :var} {:type {:record-type :integer}, :record-type :list}}
{}
{{:name "X", :record-type :var} {:record-type :any}, {:name "ICList", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "IC1", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "AtomArgs", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Atom", :record-type :var} {:record-type :nonvar}, {:name "Rel", :record-type :var} {:record-type :nonvar}, {:name "NegFun", :record-type :var} {:record-type :atom}, {:name "Fun", :record-type :var} {:record-type :atom}, {:name "Args", :record-type :var} {:record-type :any}, {:name "XML", :record-type :var} {:record-type :any}}
{{:name "C1", :record-type :var} {:type {:record-type :integer}, :record-type :list}, {:name "String", :record-type :var} {:type {:record-type :integer}, :record-type :list}, {:name "C2", :record-type :var} {:type {:record-type :integer}, :record-type :list}, {:name "VarName", :record-type :var} {:functor "$VAR", :arglist ({:record-type :integer}), :record-type :compound}, {:name "N", :record-type :var} {:record-type :integer}}
{{:name "Functor", :record-type :var} {:record-type :any}, {:name "_498", :record-type :var} {:record-type :any}, {:name "Fconv", :record-type :var} {:record-type :any}, {:name "_484", :record-type :var} {:record-type :any}}
{{:name "RuleML", :record-type :var} {:record-type :any}, {:name "List", :record-type :var} {:record-type :any}}
{{:name "_426", :record-type :var} {:record-type :any}, {:name "Functor", :record-type :var} {:record-type :any}, {:name "Fconv", :record-type :var} {:record-type :any}}
{{:name "AtomArgs", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Fun", :record-type :var} {:record-type :any}, {:name "Args", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Ctor", :record-type :var} {:record-type :any}, {:name "Term", :record-type :var} {:record-type :nonvar}}
{{:name "_430", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :nonvar}}
{{:name "AtomArgs", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Atom", :record-type :var} {:record-type :nonvar}, {:name "Rel", :record-type :var} {:record-type :any}, {:name "NegFun", :record-type :var} {:record-type :atom}, {:name "Fun", :record-type :var} {:record-type :atom}, {:name "_526", :record-type :var} {:record-type :any}, {:name "Args", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_512", :record-type :var} {:record-type :any}}
{{:name "IC", :record-type :var} {:functor "ic", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}, {:name "Body", :record-type :var} {:record-type :any}, {:name "Head", :record-type :var} {:record-type :any}, {:name "_506", :record-type :var} {:record-type :any}, {:name "BodyX", :record-type :var} {:record-type :any}, {:name "_596", :record-type :var} {:record-type :any}, {:name "HeadX", :record-type :var} {:record-type :any}, {:name "_610", :record-type :var} {:record-type :any}}
{{:name "R", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "A", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "_426", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:record-type :any}, {:name "ICList", :record-type :var} {:record-type :any}}
{{:name "String", :record-type :var} {:type {:record-type :integer}, :record-type :list}, {:name "_470", :record-type :var} {:record-type :any}, {:name "Constant", :record-type :var} {:record-type :atom}}
{{:name "_426", :record-type :var} {:record-type :any}, {:name "_424", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:record-type :any}, {:name "ICList", :record-type :var} {:record-type :any}}
{}
{}
{{:name "_426", :record-type :var} {:record-type :any}, {:name "_524", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L", :record-type :var} {:record-type :any}, {:name "_522", :record-type :var} {:record-type :any}, {:name "_504", :record-type :var} {:record-type :any}, {:name "List", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "_426", :record-type :var} {:record-type :any}, {:name "_524", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L", :record-type :var} {:record-type :any}, {:name "_522", :record-type :var} {:record-type :any}, {:name "_504", :record-type :var} {:record-type :any}, {:name "List", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "AtomArgs", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Atom", :record-type :var} {:record-type :nonvar}, {:name "Rel", :record-type :var} {:record-type :nonvar}, {:name "NegFun", :record-type :var} {:record-type :atom}, {:name "Fun", :record-type :var} {:record-type :atom}, {:name "Args", :record-type :var} {:record-type :any}, {:name "XML", :record-type :var} {:record-type :any}}
{{:name "_426", :record-type :var} {:record-type :any}, {:name "Functor", :record-type :var} {:record-type :any}, {:name "Fconv", :record-type :var} {:record-type :any}}
{{:name "AtomArgs", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Atom", :record-type :var} {:record-type :nonvar}, {:name "Rel", :record-type :var} {:record-type :any}, {:name "NegFun", :record-type :var} {:record-type :atom}, {:name "Fun", :record-type :var} {:record-type :atom}, {:name "_526", :record-type :var} {:record-type :any}, {:name "Args", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_512", :record-type :var} {:record-type :any}}
{{:name "Functor", :record-type :var} {:arglist ({:functor "pcdata", :arglist ({:record-type :any}), :record-type :compound}), :record-type :tuple}, {:name "Fconv", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :any}}
{{:name "Atom", :record-type :var} {:record-type :any}, {:name "RuleML", :record-type :var} {:record-type :any}}
{{:name "AtomArgs", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Atom", :record-type :var} {:record-type :nonvar}, {:name "Rel", :record-type :var} {:record-type :any}, {:name "Fun", :record-type :var} {:record-type :any}, {:name "Args", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "R", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "A", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Words", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :ground}}
{{:name "Words", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :ground}}
{{:name "Words", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Words", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :ground}}
{{:name "Words", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :ground}}
{{:name "Words", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :ground}}
{{:name "DB", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}}
{{:name "_408", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}}
{{:name "_410", :record-type :var} {:record-type :any}, {:name "Comm", :record-type :var} {:record-type :integer}, {:name "Q", :record-type :var} {:record-type :any}}
{{:name "Q", :record-type :var} {:record-type :any}, {:name "DB", :record-type :var} {:record-type :any}}
{{:name "_408", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}}
{{:name "DB", :record-type :var} {:record-type :any}, {:name "Comm", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}}
{{:name "_426", :record-type :var} {:record-type :any}, {:name "_424", :record-type :var} {:record-type :any}, {:name "V2", :record-type :var} {:record-type :any}, {:name "V1", :record-type :var} {:record-type :any}}
{{:name "N1", :record-type :var} {:record-type :number}, {:name "N2", :record-type :var} {:record-type :any}}
{{:name "N1", :record-type :var} {:record-type :number}, {:name "N2", :record-type :var} {:record-type :any}}
{{:name "_426", :record-type :var} {:record-type :any}, {:name "_424", :record-type :var} {:record-type :any}, {:name "V2", :record-type :var} {:record-type :any}, {:name "V1", :record-type :var} {:record-type :any}}
{{:name "C1", :record-type :var} {:type {:record-type :integer}, :record-type :list}, {:name "S2", :record-type :var} {:record-type :atom}, {:name "C2", :record-type :var} {:type {:record-type :integer}, :record-type :list}, {:name "S1", :record-type :var} {:record-type :atom}}
{{:name "C1", :record-type :var} {:type {:record-type :integer}, :record-type :list}, {:name "S2", :record-type :var} {:record-type :atom}, {:name "C2", :record-type :var} {:type {:record-type :integer}, :record-type :list}, {:name "S1", :record-type :var} {:record-type :atom}}
{{:name "N1", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Codes", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "N2", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Y", :record-type :var} {:record-type :any}, {:name "_684", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "A2", :record-type :var} {:record-type :any}, {:name "P", :record-type :var} {:record-type :any}, {:name "Counter", :record-type :var} {:record-type :any}, {:name "Context", :record-type :var} {:record-type :any}, {:name "_4332", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "_878", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:record-type :any}, {:name "A3", :record-type :var} {:record-type :any}, {:name "W3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "W2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "W1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Ass0", :record-type :var} {:record-type :any}, {:name "Rep1", :record-type :var} {:record-type :any}, {:name "DB", :record-type :var} {:record-type :any}, {:name "Rep", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "Res", :record-type :var} {:arglist #{{:functor "&", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "if", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bag", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Ass1", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Ass0", :record-type :var} {:record-type :any}, {:name "DB", :record-type :var} {:record-type :any}, {:name "Rep", :record-type :var} {:record-type :any}, {:name "Ass1", :record-type :var} {:record-type :any}, {:name "_470", :record-type :var} {:record-type :any}, {:name "_468", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "_472", :record-type :var} {:record-type :any}, {:name "_474", :record-type :var} {:record-type :any}, {:name "_470", :record-type :var} {:record-type :any}, {:name "_468", :record-type :var} {:record-type :any}, {:name "_480", :record-type :var} {:record-type :any}, {:name "_478", :record-type :var} {:record-type :any}}
{{:name "Ass0", :record-type :var} {:record-type :any}, {:name "DB", :record-type :var} {:record-type :any}, {:name "Rep", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "Res", :record-type :var} {:record-type :any}, {:name "Ass1", :record-type :var} {:record-type :any}, {:name "Comm", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "_472", :record-type :var} {:record-type :any}, {:name "_474", :record-type :var} {:record-type :any}, {:name "_470", :record-type :var} {:record-type :any}, {:name "_468", :record-type :var} {:record-type :any}, {:name "_480", :record-type :var} {:record-type :any}, {:name "_478", :record-type :var} {:record-type :any}}
{{:name "_472", :record-type :var} {:record-type :any}, {:name "_474", :record-type :var} {:record-type :any}, {:name "_470", :record-type :var} {:record-type :any}, {:name "_468", :record-type :var} {:record-type :any}, {:name "_476", :record-type :var} {:record-type :any}, {:name "_480", :record-type :var} {:record-type :any}, {:name "_478", :record-type :var} {:record-type :any}}
{{:name "Ass0", :record-type :var} {:record-type :any}, {:name "DB", :record-type :var} {:record-type :any}, {:name "Rep", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "Res", :record-type :var} {:record-type :any}, {:name "Ass1", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{}
{{:name "T", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "H", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "P", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Y", :record-type :var} {:record-type :any}, {:name "K2", :record-type :var} {:record-type :any}, {:name "Cs", :record-type :var} {:record-type :any}, {:name "Solutions", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D", :record-type :var} {:record-type :any}, {:name "IDs", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:functor "drs", :arglist ({:record-type :any} {:type {:record-type :any}, :record-type :list}), :record-type :compound}, {:name "Bs", :record-type :var} {:record-type :any}, {:name "P2", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:record-type :any}, {:name "_468", :record-type :var} {:record-type :any}, {:name "K0", :record-type :var} {:record-type :any}, {:name "K1", :record-type :var} {:record-type :any}, {:name "Score", :record-type :var} {:record-type :number}, {:name "Ant", :record-type :var} {:arglist #{{:functor ":", :arglist ({:record-type :atom} {:record-type :any}), :record-type :compound} {:record-type :atom}}, :record-type :one-of}, {:name "X", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "P", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Y", :record-type :var} {:record-type :any}, {:name "K2", :record-type :var} {:record-type :any}, {:name "Cs", :record-type :var} {:record-type :any}, {:name "Solutions", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:record-type :any}, {:name "IDs", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Bs", :record-type :var} {:record-type :any}, {:name "P2", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:record-type :any}, {:name "_468", :record-type :var} {:record-type :any}, {:name "K1", :record-type :var} {:record-type :any}, {:name "Deps1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "_498", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "Deps2", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Cs", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_646", :record-type :var} {:record-type :any}, {:name "Solutions", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "IDs", :record-type :var} {:record-type :any}, {:name "Bs", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "_698", :record-type :var} {:record-type :any}, {:name "_700", :record-type :var} {:record-type :any}, {:name "Ps", :record-type :var} {:functor "-", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}, {:name "_644", :record-type :var} {:record-type :any}}
{{:name "P", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Cs", :record-type :var} {:record-type :any}, {:name "Solutions", :record-type :var} {:record-type :any}, {:name "IDs", :record-type :var} {:record-type :any}, {:name "Bs", :record-type :var} {:record-type :any}, {:name "P2", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:record-type :any}, {:name "Dep", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "_398", :record-type :var} {:record-type :any}}
{{:name "P", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "K2", :record-type :var} {:record-type :any}, {:name "Cs", :record-type :var} {:record-type :any}, {:name "Solutions", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:record-type :any}, {:name "IDs", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Bs", :record-type :var} {:record-type :any}, {:name "P2", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:record-type :any}, {:name "Dep", :record-type :var} {:record-type :any}, {:name "K1", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "_444", :record-type :var} {:record-type :any}}
{{:name "Cs", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Dep", :record-type :var} {:record-type :any}, {:name "Bs", :record-type :var} {:record-type :any}, {:name "Ps", :record-type :var} {:functor "-", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}, {:name "K", :record-type :var} {:record-type :any}, {:name "IDs", :record-type :var} {:record-type :any}, {:name "Solutions", :record-type :var} {:record-type :any}}
{{:name "_420", :record-type :var} {:record-type :any}, {:name "Head", :record-type :var} {:record-type :any}}
{{:name "RName", :record-type :var} {:record-type :any}, {:name "OldHead", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_498", :record-type :var} {:record-type :any}, {:name "MoreVars", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Disjunct", :record-type :var} {:record-type :any}, {:name "IntHead", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_504", :record-type :var} {:record-type :any}, {:name "NewHead", :record-type :var} {:record-type :any}, {:name "OName", :record-type :var} {:record-type :any}}
{{:name "O2", :record-type :var} {:record-type :any}, {:name "UIn", :record-type :var} {:record-type :any}, {:name "Mid", :record-type :var} {:record-type :any}, {:name "O1", :record-type :var} {:record-type :any}, {:name "_Callback", :record-type :var} {:record-type :any}, {:name "_StartParse", :record-type :var} {:record-type :any}}
{{:name "Arg1", :record-type :var} {:record-type :any}}
{{:name "Arg1", :record-type :var} {:record-type :any}, {:name "Arg2", :record-type :var} {:record-type :any}}
{{:name "Constraint1", :record-type :var} {:record-type :any}, {:name "Constraint2", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "R", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "A", :record-type :var} {:record-type :any}, {:name "_Tags", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Es", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "_394", :record-type :var} {:record-type :any}, {:name "_396", :record-type :var} {:record-type :any}}
{{:name "Term", :record-type :var} {:record-type :any}, {:name "Variables", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "_418", :record-type :var} {:record-type :any}, {:name "_420", :record-type :var} {:record-type :any}, {:name "_424", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "NP", :record-type :var} {:record-type :number}, {:name "_466", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "T", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}}
{{:name "R", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}, {:name "_422", :record-type :var} {:record-type :any}}
{{:name "_464", :record-type :var} {:record-type :any}, {:name "Left", :record-type :var} {:record-type :any}, {:name "_462", :record-type :var} {:record-type :any}, {:name "Right", :record-type :var} {:record-type :any}, {:name "_466", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}}
{{:name "_464", :record-type :var} {:record-type :any}, {:name "Left", :record-type :var} {:record-type :any}, {:name "_462", :record-type :var} {:record-type :any}, {:name "Right", :record-type :var} {:record-type :any}, {:name "_466", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}}
{{:name "_464", :record-type :var} {:record-type :any}, {:name "Left", :record-type :var} {:record-type :any}, {:name "_462", :record-type :var} {:record-type :any}, {:name "Right", :record-type :var} {:record-type :any}, {:name "_466", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}}
{{:name "_464", :record-type :var} {:record-type :any}, {:name "Left", :record-type :var} {:record-type :any}, {:name "_462", :record-type :var} {:record-type :any}, {:name "Right", :record-type :var} {:record-type :any}, {:name "_466", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}}
{{:name "Left", :record-type :var} {:record-type :any}, {:name "Right", :record-type :var} {:record-type :any}, {:name "_474", :record-type :var} {:record-type :any}, {:name "_476", :record-type :var} {:record-type :any}, {:name "_480", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "_478", :record-type :var} {:record-type :any}}
{{:name "_464", :record-type :var} {:record-type :any}, {:name "Left", :record-type :var} {:record-type :any}, {:name "_462", :record-type :var} {:record-type :any}, {:name "Right", :record-type :var} {:record-type :any}, {:name "_466", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}}
{{:name "_464", :record-type :var} {:record-type :any}, {:name "Left", :record-type :var} {:record-type :any}, {:name "_462", :record-type :var} {:record-type :any}, {:name "Right", :record-type :var} {:record-type :any}, {:name "_466", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}}
{{:name "Left", :record-type :var} {:record-type :any}, {:name "Right", :record-type :var} {:record-type :any}, {:name "_474", :record-type :var} {:record-type :any}, {:name "_476", :record-type :var} {:record-type :any}, {:name "_480", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "_478", :record-type :var} {:record-type :any}}
{{:name "_464", :record-type :var} {:record-type :any}, {:name "Left", :record-type :var} {:record-type :any}, {:name "_462", :record-type :var} {:record-type :any}, {:name "Right", :record-type :var} {:record-type :any}, {:name "_466", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}}
{{:name "Left", :record-type :var} {:record-type :any}, {:name "Right", :record-type :var} {:record-type :any}, {:name "_474", :record-type :var} {:record-type :any}, {:name "_476", :record-type :var} {:record-type :any}, {:name "_480", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "_478", :record-type :var} {:record-type :any}}
{{:name "_464", :record-type :var} {:record-type :any}, {:name "Left", :record-type :var} {:record-type :any}, {:name "_462", :record-type :var} {:record-type :any}, {:name "Right", :record-type :var} {:record-type :any}, {:name "_466", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}}
{{:name "_464", :record-type :var} {:record-type :any}, {:name "Left", :record-type :var} {:record-type :any}, {:name "_462", :record-type :var} {:record-type :any}, {:name "Right", :record-type :var} {:record-type :any}, {:name "_466", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}}
{{:name "Left", :record-type :var} {:record-type :any}, {:name "Right", :record-type :var} {:record-type :any}, {:name "_474", :record-type :var} {:record-type :any}, {:name "_476", :record-type :var} {:record-type :any}, {:name "_480", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "_478", :record-type :var} {:record-type :any}}
{{:name "Left", :record-type :var} {:record-type :any}, {:name "Right", :record-type :var} {:record-type :any}, {:name "_474", :record-type :var} {:record-type :any}, {:name "_476", :record-type :var} {:record-type :any}, {:name "_480", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "_478", :record-type :var} {:record-type :any}}
{{:name "_464", :record-type :var} {:record-type :any}, {:name "Left", :record-type :var} {:record-type :any}, {:name "_462", :record-type :var} {:record-type :any}, {:name "Right", :record-type :var} {:record-type :any}, {:name "_466", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "Var", :record-type :var} {:record-type :any}, {:name "AccessSpec", :record-type :var} {:record-type :nonvar}}
{{:name "X", :record-type :var} {:record-type :any}}
{{:name "_536", :record-type :var} {:record-type :any}}
{{:name "_536", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}}
{{:name "_536", :record-type :var} {:record-type :any}}
{{:name "_536", :record-type :var} {:record-type :any}}
{{:name "_536", :record-type :var} {:record-type :any}}
{{:name "_536", :record-type :var} {:record-type :any}, {:name "_418", :record-type :var} {:record-type :any}}
{{:name "_536", :record-type :var} {:record-type :any}}
{{:name "_536", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :atom}, {:name "_410", :record-type :var} {:record-type :any}, {:name "Code", :record-type :var} {:type {:record-type :integer}, :record-type :list}}
{{:name "Codes", :record-type :var} {:type {:record-type :integer}, :record-type :list}, {:name "Number", :record-type :var} {:record-type :integer}, {:name "X", :record-type :var} {:functor nil, :arglist (), :record-type :compound}, {:name "Var", :record-type :var} {:record-type :any}}
{{:name "M", :record-type :var} {:record-type :number}, {:name "Number", :record-type :var} {:type {:record-type :integer}, :record-type :list}, {:name "X", :record-type :var} {:record-type :atom}, {:name "Var", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :integer}}
{{:name "B", :record-type :var} {:arglist #{{:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sub", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}}
{{:name "_3974", :record-type :var} {:record-type :any}}
{{:name "_408", :record-type :var} {:record-type :any}}
{{:name "L2", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Dom", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_526", :record-type :var} {:record-type :any}, {:name "_496", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "Dom", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "_3988", :record-type :var} {:record-type :any}}
{}
{}
{{:name "U", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "K", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "K1", :record-type :var} {:record-type :any}}
{}
{}
{{:name "K2", :record-type :var} {:record-type :any}, {:name "U", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_K1", :record-type :var} {:record-type :any}}
{{:name "A1", :record-type :var} {:record-type :any}, {:name "A2", :record-type :var} {:record-type :any}}
{{:name "_382", :record-type :var} {:record-type :any}}
{{:name "A1", :record-type :var} {:record-type :any}, {:name "A2", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}}
{{:name "_412", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}}
{{:name "_436", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:record-type :any}, {:name "A2", :record-type :var} {:record-type :any}, {:name "_440", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}}
{{:name "_422", :record-type :var} {:record-type :any}, {:name "_424", :record-type :var} {:record-type :any}}
{{:name "Rest1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Rest2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "A1", :record-type :var} {:record-type :any}, {:name "Width", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "A", :record-type :var} {:record-type :any}, {:name "A2", :record-type :var} {:record-type :any}, {:name "LeftMargin", :record-type :var} {:record-type :any}}
{{:name "Message", :record-type :var} {:record-type :any}}
{{:name "_3974", :record-type :var} {:record-type :any}}
{{:name "R", :record-type :var} {:record-type :any}}
{{:name "Vars", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "R", :record-type :var} {:record-type :any}}
{{:name "AntecedentIndex", :record-type :var} {:record-type :number}, {:name "Indices", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:record-type :any}}
{{:name "_526", :record-type :var} {:record-type :any}, {:name "_528", :record-type :var} {:record-type :any}}
{{:name "_412", :record-type :var} {:record-type :any}, {:name "_520", :record-type :var} {:record-type :any}, {:name "M", :record-type :var} {:record-type :any}, {:name "_414", :record-type :var} {:record-type :any}, {:name "_466", :record-type :var} {:record-type :any}, {:name "_574", :record-type :var} {:record-type :any}, {:name "Timex", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "_412", :record-type :var} {:record-type :any}, {:name "_520", :record-type :var} {:record-type :any}, {:name "M", :record-type :var} {:record-type :any}, {:name "_466", :record-type :var} {:record-type :any}, {:name "Timex", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "S", :record-type :var} {:record-type :any}, {:name "H2", :record-type :var} {:record-type :any}, {:name "S1", :record-type :var} {:record-type :any}, {:name "H1", :record-type :var} {:record-type :any}, {:name "S2", :record-type :var} {:record-type :any}, {:name "M1", :record-type :var} {:record-type :any}, {:name "M2", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "Timex", :record-type :var} {:record-type :any}, {:name "M", :record-type :var} {:record-type :any}}
{{:name "Y", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:record-type :any}, {:name "Y2", :record-type :var} {:record-type :any}, {:name "M1", :record-type :var} {:record-type :any}, {:name "M2", :record-type :var} {:record-type :any}, {:name "Y1", :record-type :var} {:record-type :any}, {:name "Y4", :record-type :var} {:record-type :any}, {:name "Timex", :record-type :var} {:record-type :any}, {:name "D2", :record-type :var} {:record-type :any}, {:name "M", :record-type :var} {:record-type :any}, {:name "D1", :record-type :var} {:record-type :any}, {:name "Y3", :record-type :var} {:record-type :any}}
{{:name "_412", :record-type :var} {:record-type :any}, {:name "_520", :record-type :var} {:record-type :any}, {:name "M", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "_466", :record-type :var} {:record-type :any}, {:name "Timex", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{{:name "_464", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:arglist ({:record-type :atom}), :record-type :tuple}, {:name "A", :record-type :var} {:record-type :any}, {:name "_4650", :record-type :var} {:type {:arglist #{{:record-type :atom} {:record-type :integer}}, :record-type :one-of}, :record-type :list}, {:name "B", :record-type :var} {:arglist #{{:functor ":", :arglist ({:functor "/", :arglist ({:record-type :atom} {:record-type :atom}), :record-type :compound} {:record-type :any}), :record-type :compound} {:functor "/", :arglist ({:record-type :atom} {:record-type :atom}), :record-type :compound}}, :record-type :one-of}}
{{:name "LB", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_A", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :nonvar}, {:name "Result", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "R1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "R2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "LC", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "_412", :record-type :var} {:record-type :any}, {:name "_520", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "_466", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "_520", :record-type :var} {:record-type :any}, {:name "_466", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "_412", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "Z", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "_574", :record-type :var} {:record-type :any}}
{{:name "_412", :record-type :var} {:record-type :any}, {:name "_520", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "_466", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "_412", :record-type :var} {:record-type :any}, {:name "_520", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "_466", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "_412", :record-type :var} {:record-type :any}, {:name "_520", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "_466", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "_520", :record-type :var} {:record-type :any}, {:name "_466", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "_412", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "Z", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "_574", :record-type :var} {:record-type :any}}
{{:name "_396", :record-type :var} {:record-type :any}}
{{:name "Tags", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Tags", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "_396", :record-type :var} {:record-type :any}}
{{:name "InFiles", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Empty", :record-type :var} {:record-type :any}, {:name "OutFile", :record-type :var} {:arglist #{{:functor nil, :arglist (), :record-type :compound} {:record-type :atom} {:record-type :string}}, :record-type :one-of}, {:name "Stream", :record-type :var} {:record-type :ground}}
{{:name "Exc", :record-type :var} {:record-type :nonvar}}
{{:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Stream", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}}
{{:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Stream", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}}
{{:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Stream", :record-type :var} {:record-type :any}}
{{:name "FileName", :record-type :var} {:record-type :atom}, {:name "FileString", :record-type :var} {:record-type :any}, {:name "_454", :record-type :var} {:record-type :atom}, {:name "History", :record-type :var} {:record-type :any}}
{{:name "FileName", :record-type :var} {:arglist #{{:functor nil, :arglist (), :record-type :compound} {:record-type :atom} {:record-type :string}}, :record-type :one-of}, {:name "FileString", :record-type :var} {:record-type :any}, {:name "NoWhitesString", :record-type :var} {:record-type :any}, {:name "History", :record-type :var} {:record-type :any}, {:name "FileString2", :record-type :var} {:record-type :any}}
{}
{{:name "Sym", :record-type :var} {:record-type :any}, {:name "_4044", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_4050", :record-type :var} {:record-type :any}, {:name "Pos", :record-type :var} {:record-type :any}}
{{:name "F", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_398", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Sort", :record-type :var} {:record-type :any}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "_4044", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Type", :record-type :var} {:record-type :any}}
{{:name "Stream", :record-type :var} {:record-type :ground}}
{{:name "C", :record-type :var} {:record-type :integer}, {:name "T", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :ground}}
{{:name "Bound", :record-type :var} {:record-type :any}, {:name "AnaIndex", :record-type :var} {:record-type :any}, {:name "OtherIndex", :record-type :var} {:record-type :any}, {:name "AntIndex", :record-type :var} {:record-type :any}}
{{:name "_408", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}}
{{:name "Quant", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :number}, {:name "Xn", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :integer}, {:name "Term", :record-type :var} {:functor nil, :arglist (), :record-type :compound}}
{{:name "C", :record-type :var} {:arglist ({:record-type :integer} {:record-type :integer}), :record-type :tuple}, {:name "Y", :record-type :var} {:record-type :var}}
{{:name "Y", :record-type :var} {:record-type :atom}, {:name "C", :record-type :var} {:type {:record-type :integer}, :record-type :list}}
{{:name "O", :record-type :var} {:record-type :atom}, {:name "V", :record-type :var} {:record-type :atom}}
{{:name "GoalsRestr", :record-type :var} {:record-type :any}, {:name "Other", :record-type :var} {:record-type :any}, {:name "Goals", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "X2", :record-type :var} {:record-type :any}, {:name "Ptr", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :any}}
{{:name "B4", :record-type :var} {:record-type :any}, {:name "Var3", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "B3", :record-type :var} {:record-type :any}, {:name "Ptr1", :record-type :var} {:record-type :any}, {:name "Var2", :record-type :var} {:record-type :any}, {:name "Ptr2", :record-type :var} {:record-type :any}, {:name "Var1", :record-type :var} {:record-type :any}, {:name "Ptr3", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}}
{{:name "Vars1", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Vars2", :record-type :var} {:record-type :any}, {:name "Ptr1", :record-type :var} {:record-type :any}, {:name "C1", :record-type :var} {:record-type :any}, {:name "Ptr2", :record-type :var} {:record-type :any}, {:name "Conds2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Conds1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Ptr3", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}}
{{:name "Var3", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Ptr1", :record-type :var} {:record-type :any}, {:name "Var2", :record-type :var} {:record-type :any}, {:name "C1", :record-type :var} {:record-type :any}, {:name "Ptr2", :record-type :var} {:record-type :any}, {:name "Var1", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Ptr3", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C2", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Vars", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Ptrs", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "_674", :record-type :var} {:record-type :any}}
{{:name "Var", :record-type :var} {:record-type :any}, {:name "E4", :record-type :var} {:record-type :any}, {:name "E3", :record-type :var} {:record-type :any}, {:name "Ptr1", :record-type :var} {:record-type :any}, {:name "Ptr2", :record-type :var} {:record-type :any}, {:name "_652", :record-type :var} {:record-type :any}, {:name "E2", :record-type :var} {:record-type :any}, {:name "Ptr3", :record-type :var} {:record-type :any}, {:name "_812", :record-type :var} {:record-type :any}, {:name "E1", :record-type :var} {:record-type :any}}
{{:name "Vars1", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Vars2", :record-type :var} {:record-type :any}, {:name "Ptr1", :record-type :var} {:record-type :any}, {:name "C1", :record-type :var} {:record-type :any}, {:name "Ptr2", :record-type :var} {:record-type :any}, {:name "Conds2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Conds1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Ptr3", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}}
{{:name "_424", :record-type :var} {:record-type :any}, {:name "_420", :record-type :var} {:record-type :any}, {:name "U", :record-type :var} {:record-type :any}, {:name "_422", :record-type :var} {:record-type :any}}
{{:name "I", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Ref", :record-type :var} {:record-type :any}, {:name "Ptr1", :record-type :var} {:record-type :any}, {:name "Var2", :record-type :var} {:record-type :any}, {:name "C1", :record-type :var} {:record-type :any}, {:name "Ptr2", :record-type :var} {:record-type :any}, {:name "Var1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "New", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C2", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}}
{{:name "_424", :record-type :var} {:record-type :any}, {:name "_420", :record-type :var} {:record-type :any}, {:name "U", :record-type :var} {:record-type :any}, {:name "_422", :record-type :var} {:record-type :any}}
{{:name "B4", :record-type :var} {:record-type :any}, {:name "Var3", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "B3", :record-type :var} {:record-type :any}, {:name "Ptr1", :record-type :var} {:record-type :any}, {:name "Var2", :record-type :var} {:record-type :any}, {:name "Ptr2", :record-type :var} {:record-type :any}, {:name "Var1", :record-type :var} {:record-type :any}, {:name "Ptr3", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}}
{{:name "B4", :record-type :var} {:record-type :any}, {:name "Var3", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "B3", :record-type :var} {:record-type :any}, {:name "Ptr1", :record-type :var} {:record-type :any}, {:name "Var2", :record-type :var} {:record-type :any}, {:name "Ptr2", :record-type :var} {:record-type :any}, {:name "Var1", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}, {:name "Ptr3", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}}
{{:name "B4", :record-type :var} {:record-type :any}, {:name "Var3", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "B3", :record-type :var} {:record-type :any}, {:name "Ptr1", :record-type :var} {:record-type :any}, {:name "Var2", :record-type :var} {:record-type :any}, {:name "Ptr2", :record-type :var} {:record-type :any}, {:name "Var1", :record-type :var} {:record-type :any}, {:name "Ptr3", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}}
{{:name "B4", :record-type :var} {:record-type :any}, {:name "Var3", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "B3", :record-type :var} {:record-type :any}, {:name "Ptr1", :record-type :var} {:record-type :any}, {:name "Var2", :record-type :var} {:record-type :any}, {:name "Ptr2", :record-type :var} {:record-type :any}, {:name "Var1", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}, {:name "Ptr3", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "Ref", :record-type :var} {:record-type :any}, {:name "New", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Ptr", :record-type :var} {:record-type :any}, {:name "Var2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Var1", :record-type :var} {:record-type :any}}
{{:name "Ptr", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Vars", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Ptrs", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "_674", :record-type :var} {:record-type :any}}
{{:name "Ptr", :record-type :var} {:record-type :any}, {:name "Vars", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "Ref", :record-type :var} {:record-type :any}, {:name "New", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Ptr", :record-type :var} {:record-type :any}, {:name "Var2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Var1", :record-type :var} {:record-type :any}}
{{:name "Ptr1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B1", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Ptr2", :record-type :var} {:record-type :any}, {:name "Drs", :record-type :var} {:record-type :any}, {:name "Vars", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:record-type :any}}
{{:name "B4", :record-type :var} {:record-type :any}, {:name "Var3", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "B3", :record-type :var} {:record-type :any}, {:name "Ptr1", :record-type :var} {:record-type :any}, {:name "Var2", :record-type :var} {:record-type :any}, {:name "Ptr2", :record-type :var} {:record-type :any}, {:name "Var1", :record-type :var} {:record-type :any}, {:name "Ptr3", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}}
{{:name "Ptr", :record-type :var} {:record-type :any}, {:name "Vars", :record-type :var} {:record-type :any}}
{{:name "Var3", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Ptr1", :record-type :var} {:record-type :any}, {:name "Var2", :record-type :var} {:record-type :any}, {:name "C1", :record-type :var} {:record-type :any}, {:name "Ptr2", :record-type :var} {:record-type :any}, {:name "Var1", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Ptr3", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C2", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}}
{{:name "Ptr", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :any}}
{{:name "I", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Ref", :record-type :var} {:record-type :any}, {:name "Ptr1", :record-type :var} {:record-type :any}, {:name "Var2", :record-type :var} {:record-type :any}, {:name "C1", :record-type :var} {:record-type :any}, {:name "Ptr2", :record-type :var} {:record-type :any}, {:name "Var1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "New", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C2", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}}
{{:name "Sym", :record-type :var} {:record-type :atomic}, {:name "Ptr", :record-type :var} {:record-type :any}, {:name "Vars", :record-type :var} {:record-type :any}}
{{:name "I", :record-type :var} {:record-type :any}, {:name "Ptr1", :record-type :var} {:record-type :any}, {:name "Var2", :record-type :var} {:record-type :any}, {:name "C1", :record-type :var} {:record-type :any}, {:name "Ptr2", :record-type :var} {:record-type :any}, {:name "Var1", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Ptr3", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C2", :record-type :var} {:record-type :any}}
{{:name "X2", :record-type :var} {:record-type :any}, {:name "Ptr", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :any}}
{{:name "Sym", :record-type :var} {:record-type :atomic}, {:name "Ptr", :record-type :var} {:record-type :any}, {:name "Vars", :record-type :var} {:record-type :any}}
{{:name "I", :record-type :var} {:record-type :any}, {:name "Ptr1", :record-type :var} {:record-type :any}, {:name "Var2", :record-type :var} {:record-type :any}, {:name "C1", :record-type :var} {:record-type :any}, {:name "Ptr2", :record-type :var} {:record-type :any}, {:name "Var1", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Ptr3", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C2", :record-type :var} {:record-type :any}}
{{:name "Ptr1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B1", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Ptr2", :record-type :var} {:record-type :any}, {:name "Drs", :record-type :var} {:record-type :any}, {:name "Vars", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:record-type :any}}
{{:name "Var", :record-type :var} {:record-type :any}, {:name "E4", :record-type :var} {:record-type :any}, {:name "E3", :record-type :var} {:record-type :any}, {:name "Ptr1", :record-type :var} {:record-type :any}, {:name "Ptr2", :record-type :var} {:record-type :any}, {:name "_652", :record-type :var} {:record-type :any}, {:name "E2", :record-type :var} {:record-type :any}, {:name "Ptr3", :record-type :var} {:record-type :any}, {:name "_812", :record-type :var} {:record-type :any}, {:name "E1", :record-type :var} {:record-type :any}}
{{:name "MT", :record-type :var} {:record-type :any}, {:name "M", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "NT", :record-type :var} {:record-type :any}, {:name "G", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}}
{}
{}
{{:name "L2", :record-type :var} {:record-type :any}, {:name "R", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "R1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_526", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "NE", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "E", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "_396", :record-type :var} {:record-type :any}}
{{:name "_576", :record-type :var} {:record-type :any}, {:name "_572", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N", :record-type :var} {:record-type :any}, {:name "CCG0", :record-type :var} {:record-type :any}, {:name "CCG1", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "_472", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{}
{{:name "H", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Variable", :record-type :var} {:record-type :var}}
{{:name "Head", :record-type :var} {:record-type :any}, {:name "_Tail", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}}
{{:name "Functor", :record-type :var} {:record-type :atomic}, {:name "Literal", :record-type :var} {:record-type :nonvar}, {:name "Arity", :record-type :var} {:record-type :integer}}
{{:name "Literal", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}}
{{:name "Literal1", :record-type :var} {:record-type :any}, {:name "_Literal2", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}}
{}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Y", :record-type :var} {:record-type :number}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "_608", :record-type :var} {:record-type :any}, {:name "Context", :record-type :var} {:record-type :any}, {:name "_Score", :record-type :var} {:record-type :any}, {:name "Solution", :record-type :var} {:functor "solution", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :atom}), :record-type :compound}, {:name "_400", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Bs", :record-type :var} {:record-type :any}, {:name "ADRS", :record-type :var} {:record-type :any}, {:name "_606", :record-type :var} {:record-type :any}, {:name "P", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "P", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "Context", :record-type :var} {:record-type :any}, {:name "_400", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Bs", :record-type :var} {:record-type :any}, {:name "Solution", :record-type :var} {:functor "solution", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}, {:name "_Score", :record-type :var} {:record-type :any}, {:name "Reason", :record-type :var} {:record-type :any}, {:name "ADRS", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}}
{{:name "Bs", :record-type :var} {:record-type :any}, {:name "ADRS", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "_398", :record-type :var} {:record-type :any}}
{{:name "Y", :record-type :var} {:record-type :any}, {:name "Context", :record-type :var} {:record-type :any}, {:name "_400", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Bs", :record-type :var} {:record-type :any}, {:name "P2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Solution", :record-type :var} {:functor "solution", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}, {:name "_Score", :record-type :var} {:record-type :any}, {:name "Reason", :record-type :var} {:record-type :any}, {:name "ADRS", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}}
{{:name "Var", :record-type :var} {:record-type :any}}
{{:name "A1", :record-type :var} {:record-type :any}, {:name "A2", :record-type :var} {:record-type :any}}
{{:name "Var", :record-type :var} {:record-type :atom}}
{{:name "Conds", :record-type :var} {:record-type :any}, {:name "Sort", :record-type :var} {:record-type :integer}, {:name "Ref", :record-type :var} {:record-type :any}, {:name "Dom", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Lab", :record-type :var} {:record-type :any}, {:name "_452", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "A1", :record-type :var} {:record-type :any}, {:name "A2", :record-type :var} {:record-type :any}}
{{:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Conds", :record-type :var} {:record-type :any}, {:name "Sort", :record-type :var} {:record-type :integer}, {:name "_428", :record-type :var} {:record-type :any}, {:name "Ref", :record-type :var} {:record-type :any}, {:name "Dom", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "_424", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:record-type :any}, {:name "A2", :record-type :var} {:record-type :any}}
{{:name "_444", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :nonvar}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}}
{{:name "K", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "_414", :record-type :var} {:record-type :any}}
{{:name "H", :record-type :var} {:record-type :any}, {:name "WT", :record-type :var} {:record-type :any}}
{{:name "_408", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}}
{{:name "_408", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}}
{{:name "H", :record-type :var} {:record-type :any}, {:name "WT", :record-type :var} {:record-type :any}, {:name "Comm", :record-type :var} {:record-type :any}}
{{:name "_408", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}}
{{:name "_408", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}}
{{:name "H", :record-type :var} {:record-type :any}, {:name "_504", :record-type :var} {:record-type :any}, {:name "_552", :record-type :var} {:record-type :any}, {:name "WT", :record-type :var} {:record-type :any}}
{{:name "OptionList", :record-type :var} {:arglist ({:functor ",", :arglist ({:record-type :atom} {:record-type :atom}), :record-type :compound} {:functor ",", :arglist ({:record-type :atom} {:record-type :atom}), :record-type :compound} {:functor ",", :arglist ({:record-type :atom} {:record-type :atom}), :record-type :compound} {:functor ",", :arglist ({:record-type :atom} {:record-type :atom}), :record-type :compound} {:functor ",", :arglist ({:record-type :atom} {:record-type :atom}), :record-type :compound}), :record-type :tuple}}
{{:name "C", :record-type :var} {:arglist ({:record-type :integer}), :record-type :tuple}, {:name "Y", :record-type :var} {:record-type :var}}
{{:name "Y", :record-type :var} {:record-type :atom}, {:name "C", :record-type :var} {:type {:record-type :integer}, :record-type :list}}
{{:name "Char", :record-type :var} {:record-type :atom}, {:name "String", :record-type :var} {:record-type :any}, {:name "PreCodes", :record-type :var} {:record-type :any}, {:name "Chars", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}}
{{:name "Codes", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "PreCodes", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "NewCodes", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "T", :record-type :var} {:record-type :any}}
{{:name "R", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "_396", :record-type :var} {:record-type :any}}
{{:name "IC", :record-type :var} {:functor "ic", :arglist ({:record-type :any} {:type {:record-type :any}, :record-type :list}), :record-type :compound}, {:name "MoreICs", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :ground}}
{}
{}
{}
{}
{}
{{:name "Question", :record-type :var} {:record-type :any}, {:name "Tree", :record-type :var} {:record-type :any}}
{}
{{:name "W", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "_470", :record-type :var} {:record-type :any}, {:name "_468", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "W", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "_470", :record-type :var} {:record-type :any}, {:name "_468", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "W", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "_462", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "_470", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "W", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "_470", :record-type :var} {:record-type :any}, {:name "_468", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "W", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "_484", :record-type :var} {:record-type :any}, {:name "_480", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}, {:name "_482", :record-type :var} {:record-type :any}}
{{:name "W", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "_470", :record-type :var} {:record-type :any}, {:name "_468", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "W", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "_470", :record-type :var} {:record-type :any}, {:name "_468", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "W", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "_470", :record-type :var} {:record-type :any}, {:name "_468", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "W", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "_484", :record-type :var} {:record-type :any}, {:name "_474", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}, {:name "_482", :record-type :var} {:record-type :any}}
{{:name "W", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "_456", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "W", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "_470", :record-type :var} {:record-type :any}, {:name "_468", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "W", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "_470", :record-type :var} {:record-type :any}, {:name "_468", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "W", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "_470", :record-type :var} {:record-type :any}, {:name "_468", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "W", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "_484", :record-type :var} {:record-type :any}, {:name "_474", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}, {:name "_482", :record-type :var} {:record-type :any}}
{{:name "W", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "_470", :record-type :var} {:record-type :any}, {:name "_468", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "W", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "_484", :record-type :var} {:record-type :any}, {:name "_474", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}, {:name "_482", :record-type :var} {:record-type :any}}
{{:name "W", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "_462", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "_470", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "W", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "_484", :record-type :var} {:record-type :any}, {:name "_474", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}, {:name "_482", :record-type :var} {:record-type :any}}
{{:name "W", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "_470", :record-type :var} {:record-type :any}, {:name "_468", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "W", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "_470", :record-type :var} {:record-type :any}, {:name "_468", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "W", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "_470", :record-type :var} {:record-type :any}, {:name "_468", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "W", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "_470", :record-type :var} {:record-type :any}, {:name "_468", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "W", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "_484", :record-type :var} {:record-type :any}, {:name "_474", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}, {:name "_482", :record-type :var} {:record-type :any}}
{{:name "W", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "_462", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "_470", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "W", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "_470", :record-type :var} {:record-type :any}, {:name "_468", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}}
{}
{{:name "L", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}}
{{:name "N1", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "N3", :record-type :var} {:record-type :any}, {:name "N2", :record-type :var} {:record-type :any}, {:name "L3", :record-type :var} {:record-type :any}, {:name "Rest", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:record-type :any}}
{{:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_532", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_562", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_532", :record-type :var} {:record-type :any}, {:name "_524", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_562", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_532", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_562", :record-type :var} {:record-type :any}, {:name "_522", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_532", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_562", :record-type :var} {:record-type :any}, {:name "_522", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_532", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_562", :record-type :var} {:record-type :any}, {:name "_522", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_532", :record-type :var} {:record-type :any}, {:name "_524", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_562", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "_406", :record-type :var} {:record-type :any}, {:name "_408", :record-type :var} {:record-type :any}}
{{:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_532", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_562", :record-type :var} {:record-type :any}, {:name "_522", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "_534", :record-type :var} {:record-type :any}, {:name "_504", :record-type :var} {:record-type :any}, {:name "_500", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_532", :record-type :var} {:record-type :any}, {:name "_524", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_562", :record-type :var} {:record-type :any}, {:name "_528", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_532", :record-type :var} {:record-type :any}, {:name "_524", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_562", :record-type :var} {:record-type :any}, {:name "_528", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_532", :record-type :var} {:record-type :any}, {:name "_524", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_562", :record-type :var} {:record-type :any}, {:name "_528", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_532", :record-type :var} {:record-type :any}, {:name "_524", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_562", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "_396", :record-type :var} {:record-type :any}}
{{:name "R", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "H", :record-type :var} {:record-type :any}, {:name "NP", :record-type :var} {:record-type :number}, {:name "P", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "T", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}}
{{:name "_408", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Label", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "_408", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Label", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}}
{}
{{:name "_406", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:record-type :empty-list}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Max", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Max", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "H", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "B", :record-type :var} {:record-type :any}}
{{:name "_402", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:arglist #{{:functor "&", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor ";", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :atom} {:functor ",", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Mesg", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "C1", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Result", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "Formula", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Result", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "K2", :record-type :var} {:record-type :any}, {:name "K1", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:record-type :any}}
{{:name "Formula", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Stack", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Result", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "K2", :record-type :var} {:record-type :any}, {:name "Result", :record-type :var} {:record-type :any}, {:name "K1", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}}
{{:name "Functor", :record-type :var} {:record-type :nonvar}, {:name "Converted", :record-type :var} {:record-type :any}, {:name "Stack", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Argument", :record-type :var} {:record-type :any}, {:name "Result", :record-type :var} {:record-type :any}, {:name "ConArg", :record-type :var} {:record-type :any}}
{{:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "B3", :record-type :var} {:record-type :any}, {:name "B4", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "K2", :record-type :var} {:record-type :any}, {:name "Result", :record-type :var} {:record-type :any}, {:name "K1", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "Y2", :record-type :var} {:record-type :any}, {:name "C3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B2", :record-type :var} {:record-type :any}, {:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Y1", :record-type :var} {:record-type :any}, {:name "_738", :record-type :var} {:record-type :any}, {:name "D2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X1", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B1", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}}
{{:name "F2", :record-type :var} {:record-type :any}, {:name "BF2", :record-type :var} {:record-type :any}, {:name "BF1", :record-type :var} {:record-type :any}, {:name "F1", :record-type :var} {:record-type :any}}
{{:name "F2", :record-type :var} {:record-type :any}, {:name "BF2", :record-type :var} {:record-type :any}, {:name "BF1", :record-type :var} {:record-type :any}, {:name "F1", :record-type :var} {:record-type :any}}
{{:name "F", :record-type :var} {:record-type :any}}
{{:name "BF1", :record-type :var} {:record-type :any}, {:name "F1", :record-type :var} {:record-type :any}}
{{:name "F2", :record-type :var} {:record-type :any}, {:name "BF2", :record-type :var} {:record-type :any}, {:name "BF1", :record-type :var} {:record-type :any}, {:name "F1", :record-type :var} {:record-type :any}}
{{:name "_Stream", :record-type :var} {:record-type :any}}
{{:name "Disjunct", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :ground}}
{{:name "Disjunct1", :record-type :var} {:record-type :any}, {:name "Disjunct2", :record-type :var} {:record-type :any}, {:name "MoreDisjuncts", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :ground}}
{{:name "Col", :record-type :var} {:record-type :atom}, {:name "Num", :record-type :var} {:record-type :integer}, {:name "Num1", :record-type :var} {:record-type :number}}
{{:name "_418", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:record-type :any}}
{{:name "_414", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "E1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_512", :record-type :var} {:record-type :any}}
{{:name "E", :record-type :var} {:record-type :any}, {:name "P", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{}
{{:name "X", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:record-type :empty-list}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "_3986", :record-type :var} {:record-type :any}}
{}
{}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Abducibles", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Constraints", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Sem", :record-type :var} {:record-type :any}, {:name "_588", :record-type :var} {:record-type :any}, {:name "Tags", :record-type :var} {:record-type :any}, {:name "PDRS", :record-type :var} {:record-type :any}}
{{:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tags3", :record-type :var} {:record-type :any}, {:name "DRS", :record-type :var} {:record-type :any}, {:name "Tags2", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "CCG", :record-type :var} {:record-type :any}, {:name "NewDRS", :record-type :var} {:record-type :any}, {:name "NewIndex", :record-type :var} {:record-type :any}, {:name "XDRS", :record-type :var} {:record-type :any}, {:name "PrevDRS", :record-type :var} {:record-type :any}, {:name "Tags1", :record-type :var} {:record-type :any}}
{{:name "Tags", :record-type :var} {:record-type :any}, {:name "XDRS", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "PDRS", :record-type :var} {:record-type :any}, {:name "CCG", :record-type :var} {:record-type :any}}
{{:name "Variable", :record-type :var} {:functor "variable", :arglist ({:record-type :any} {:type {:record-type :any}, :record-type :list}), :record-type :compound}, {:name "_524", :record-type :var} {:record-type :any}, {:name "_530", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_540", :record-type :var} {:record-type :any}}
{{:name "SplittedOccurList", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "VarList", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "VarName", :record-type :var} {:record-type :any}, {:name "OccurList", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Query", :record-type :var} {:record-type :any}, {:name "Answer", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:record-type :any}, {:name "Rep", :record-type :var} {:record-type :any}, {:name "Max", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "RB", :record-type :var} {:record-type :any}, {:name "WT", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "LT", :record-type :var} {:record-type :any}}
{{:name "_424", :record-type :var} {:record-type :any}, {:name "_420", :record-type :var} {:record-type :any}, {:name "_422", :record-type :var} {:record-type :any}}
{{:name "_508", :record-type :var} {:record-type :any}, {:name "_420", :record-type :var} {:record-type :any}, {:name "Rep", :record-type :var} {:record-type :any}, {:name "WT", :record-type :var} {:record-type :any}}
{{:name "Max", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "E", :record-type :var} {:arglist #{{:functor "&", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "if", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bag", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "RB", :record-type :var} {:record-type :any}, {:name "Rep", :record-type :var} {:record-type :any}, {:name "LT", :record-type :var} {:record-type :any}, {:name "_756", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "WT", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N", :record-type :var} {:record-type :integer}, {:name "Rep1", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}}
{{:name "Rep", :record-type :var} {:record-type :any}, {:name "Max", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "WT", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N", :record-type :var} {:record-type :integer}}
{{:name "C", :record-type :var} {:record-type :any}, {:name "Rep", :record-type :var} {:record-type :any}, {:name "Max", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "RB", :record-type :var} {:record-type :any}, {:name "WT", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N", :record-type :var} {:record-type :integer}, {:name "LT", :record-type :var} {:record-type :any}}
{{:name "_448", :record-type :var} {:record-type :any}, {:name "Rep1", :record-type :var} {:record-type :any}, {:name "Rep", :record-type :var} {:record-type :any}, {:name "WT", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "WR", :record-type :var} {:record-type :any}}
{{:name "_420", :record-type :var} {:record-type :any}, {:name "_422", :record-type :var} {:record-type :any}}
{{:name "Max", :record-type :var} {:record-type :any}, {:name "_422", :record-type :var} {:record-type :any}}
{{:name "_420", :record-type :var} {:record-type :any}, {:name "Rep", :record-type :var} {:record-type :any}, {:name "WT", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Comm", :record-type :var} {:record-type :any}}
{{:name "_424", :record-type :var} {:record-type :any}, {:name "_420", :record-type :var} {:record-type :any}, {:name "_422", :record-type :var} {:record-type :any}}
{{:name "_408", :record-type :var} {:record-type :any}}
{{:name "_442", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Var1", :record-type :var} {:record-type :any}, {:name "VarName", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :any}}
{{:name "VarName", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :any}, {:name "MoreVarNames", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_398", :record-type :var} {:record-type :any}}
{}
{}
{{:name "_6498", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "F", :record-type :var} {:record-type :any}, {:name "V", :record-type :var} {:record-type :any}}
{{:name "_6464", :record-type :var} {:record-type :any}}
{}
{{:name "_6454", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "V", :record-type :var} {:record-type :any}}
{{:name "_420", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "G", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_540", :record-type :var} {:record-type :any}}
{{:name "WithX", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_I", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "S", :record-type :var} {:record-type :any}, {:name "_O", :record-type :var} {:record-type :any}, {:name "_E", :record-type :var} {:record-type :any}, {:name "Ext", :record-type :var} {:record-type :any}, {:name "_N", :record-type :var} {:record-type :any}, {:name "Reduced", :record-type :var} {:record-type :any}, {:name "G", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "WithoutX", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_T", :record-type :var} {:record-type :any}, {:name "Partial", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "T", :record-type :var} {:functor "tuple", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}
{{:name "_690", :record-type :var} {:record-type :any}, {:name "K2", :record-type :var} {:record-type :any}, {:name "_692", :record-type :var} {:record-type :any}, {:name "_696", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}, {:name "Ext", :record-type :var} {:record-type :any}, {:name "G", :record-type :var} {:record-type :any}, {:name "_700", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "K1", :record-type :var} {:record-type :any}, {:name "_536", :record-type :var} {:record-type :any}, {:name "_538", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "K2", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}, {:name "_782", :record-type :var} {:record-type :any}, {:name "Ext", :record-type :var} {:record-type :any}, {:name "Reduced", :record-type :var} {:record-type :any}, {:name "G", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Rel", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "K1", :record-type :var} {:record-type :any}, {:name "_536", :record-type :var} {:record-type :any}, {:name "T2", :record-type :var} {:record-type :any}, {:name "T1", :record-type :var} {:record-type :any}, {:name "_538", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_780", :record-type :var} {:record-type :any}, {:name "_778", :record-type :var} {:record-type :any}}
{{:name "WithX", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_I", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "S", :record-type :var} {:record-type :any}, {:name "_O", :record-type :var} {:record-type :any}, {:name "_E", :record-type :var} {:record-type :any}, {:name "Ext", :record-type :var} {:record-type :any}, {:name "_N", :record-type :var} {:record-type :any}, {:name "G1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Reduced", :record-type :var} {:record-type :any}, {:name "WithoutX", :record-type :var} {:record-type :any}, {:name "Appended", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "_T", :record-type :var} {:record-type :any}, {:name "Partial", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C", :record-type :var} {:record-type :any}, {:name "G2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "T", :record-type :var} {:functor "tuple", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}
{{:name "K2", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}, {:name "Ext", :record-type :var} {:record-type :any}, {:name "G1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Reduced", :record-type :var} {:record-type :any}, {:name "Rel", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "K1", :record-type :var} {:record-type :any}, {:name "_536", :record-type :var} {:record-type :any}, {:name "_538", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "G2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "T", :record-type :var} {:record-type :any}}
{{:name "K2", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}, {:name "_782", :record-type :var} {:record-type :any}, {:name "Ext", :record-type :var} {:record-type :any}, {:name "G1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Reduced", :record-type :var} {:record-type :any}, {:name "Rel", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "K1", :record-type :var} {:record-type :any}, {:name "_536", :record-type :var} {:record-type :any}, {:name "T2", :record-type :var} {:record-type :any}, {:name "T1", :record-type :var} {:record-type :any}, {:name "_538", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_780", :record-type :var} {:record-type :any}, {:name "_778", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "G2", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "K2", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}, {:name "Ext", :record-type :var} {:record-type :any}, {:name "Reduced", :record-type :var} {:record-type :any}, {:name "G", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Rel", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "K1", :record-type :var} {:record-type :any}, {:name "_536", :record-type :var} {:record-type :any}, {:name "_538", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "T", :record-type :var} {:record-type :any}}
{{:name "FileList", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "OutFile", :record-type :var} {:arglist #{{:functor nil, :arglist (), :record-type :compound} {:record-type :atom} {:record-type :string}}, :record-type :one-of}, {:name "Stream", :record-type :var} {:record-type :ground}}
{}
{{:name "K", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "K1", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}}
{{:name "K", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}}
{{:name "N", :record-type :var} {:record-type :any}, {:name "CCG", :record-type :var} {:record-type :any}}
{{:name "_400", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Cat", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "CCG", :record-type :var} {:record-type :any}}
{{:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N", :record-type :var} {:record-type :any}, {:name "_398", :record-type :var} {:record-type :any}, {:name "CCG", :record-type :var} {:record-type :any}}
{{:name "Units", :record-type :var} {:record-type :any}, {:name "RT", :record-type :var} {:record-type :number}, {:name "T", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "T1", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}}
{}
{{:name "VarName", :record-type :var} {:record-type :any}, {:name "_414", :record-type :var} {:record-type :any}, {:name "Quantification", :record-type :var} {:record-type :any}}
{}
{{:name "Stream", :record-type :var} {:record-type :any}, {:name "Output", :record-type :var} {:record-type :atomic}}
{}
{{:name "V", :record-type :var} {:record-type :any}, {:name "_552", :record-type :var} {:record-type :any}}
{{:name "_534", :record-type :var} {:record-type :any}, {:name "V", :record-type :var} {:record-type :any}}
{{:name "_382", :record-type :var} {:record-type :any}}
{{:name "_534", :record-type :var} {:record-type :any}, {:name "V", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "_580", :record-type :var} {:record-type :any}, {:name "Context", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "_474", :record-type :var} {:record-type :any}, {:name "P2", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:record-type :any}, {:name "Dom", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "Old", :record-type :var} {:record-type :integer}, {:name "New", :record-type :var} {:record-type :number}, {:name "X", :record-type :var} {:functor "$VAR", :arglist ({:record-type :integer}), :record-type :compound}, {:name "_640", :record-type :var} {:record-type :any}}
{{:name "Tok", :record-type :var} {:record-type :any}, {:name "Comb", :record-type :var} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}, {:name "Sem", :record-type :var} {:record-type :any}, {:name "_498", :record-type :var} {:record-type :any}, {:name "Red", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "_530", :record-type :var} {:record-type :any}, {:name "_476", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :ground}, {:name "Comb", :record-type :var} {:record-type :nonvar}, {:name "Rule", :record-type :var} {:record-type :any}, {:name "Red", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}, {:name "_512", :record-type :var} {:record-type :any}}
{{:name "Comb", :record-type :var} {:record-type :any}, {:name "_396", :record-type :var} {:record-type :any}}
{{:name "L", :record-type :var} {:record-type :any}, {:name "_530", :record-type :var} {:record-type :any}, {:name "_476", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :ground}, {:name "Comb", :record-type :var} {:record-type :nonvar}, {:name "R", :record-type :var} {:record-type :any}, {:name "Rule", :record-type :var} {:record-type :any}, {:name "Red", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}, {:name "_512", :record-type :var} {:record-type :any}}
{{:name "_494", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :ground}, {:name "Comb", :record-type :var} {:record-type :nonvar}, {:name "R", :record-type :var} {:record-type :any}, {:name "Rule", :record-type :var} {:record-type :any}, {:name "Red", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}, {:name "_512", :record-type :var} {:record-type :any}}
{{:name "Start", :record-type :var} {:record-type :any}, {:name "_406", :record-type :var} {:record-type :any}}
{{:name "_408", :record-type :var} {:record-type :any}, {:name "Start", :record-type :var} {:record-type :number}, {:name "SID", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}}
{{:name "A2", :record-type :var} {:record-type :any}, {:name "D4", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:record-type :any}, {:name "N2", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "C1", :record-type :var} {:record-type :any}, {:name "Rest1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D3", :record-type :var} {:record-type :any}, {:name "D2", :record-type :var} {:record-type :any}, {:name "D1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Firsts", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Op", :record-type :var} {:record-type :any}, {:name "Result", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "Rest2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Rest", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N1", :record-type :var} {:record-type :any}}
{{:name "Pred", :record-type :var} {:record-type :atom}, {:name "Codes", :record-type :var} {:type {:record-type :atom}, :record-type :list}}
{{:name "T", :record-type :var} {:record-type :atom}}
{}
{{:name "L2", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "_426", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:record-type :any}, {:name "_432", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{}
{{:name "ModifiedConjunct", :record-type :var} {:functor "-", :arglist ({:record-type :integer} {:record-type :any}), :record-type :compound}, {:name "MoreConjuncts", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Conjunct", :record-type :var} {:record-type :any}, {:name "MoreModifiedConjuncts", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "H", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{}
{{:name "Res", :record-type :var} {:record-type :any}, {:name "Comm", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}}
{{:name "Ass", :record-type :var} {:record-type :any}, {:name "Res", :record-type :var} {:record-type :any}, {:name "Comm", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}}
{{:name "_396", :record-type :var} {:record-type :any}}
{{:name "H", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "T", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Codes", :record-type :var} {:record-type :any}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "Sym1", :record-type :var} {:record-type :any}, {:name "Sym2", :record-type :var} {:record-type :any}, {:name "Codes2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Codes1", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "_4060", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "_4060", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "_4060", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "_4060", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "_4060", :record-type :var} {:record-type :any}}
{}
{}
{{:name "_4062", :record-type :var} {:record-type :any}, {:name "_4060", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "_4060", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "_4062", :record-type :var} {:record-type :any}, {:name "_4060", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "_4060", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "_4016", :record-type :var} {:record-type :any}, {:name "_4018", :record-type :var} {:record-type :any}, {:name "_4020", :record-type :var} {:record-type :any}}
{}
{}
{}
{{:name "_4060", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "_4062", :record-type :var} {:record-type :any}, {:name "_4060", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "_4060", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "X", :record-type :var} {:record-type :var}}
{{:name "X", :record-type :var} {:record-type :nonvar}}
{{:name "X", :record-type :var} {:record-type :nonvar}}
{{:name "X", :record-type :var} {:record-type :var}}
{{:name "File", :record-type :var} {:record-type :any}, {:name "Goal", :record-type :var} {:record-type :any}, {:name "Input", :record-type :var} {:record-type :any}, {:name "Read", :record-type :var} {:record-type :any}}
{{:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "_532", :record-type :var} {:record-type :any}, {:name "U", :record-type :var} {:record-type :any}, {:name "_562", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "_528", :record-type :var} {:record-type :any}}
{{:name "_406", :record-type :var} {:record-type :any}, {:name "_408", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}}
{}
{}
{{:name "N1", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "L2", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "Lines", :record-type :var} {:record-type :any}, {:name "N3", :record-type :var} {:record-type :number}, {:name "N2", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "L1", :record-type :var} {:record-type :any}}
{{:name "N0", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Line", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "A", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Integer", :record-type :var} {:record-type :any}, {:name "N2", :record-type :var} {:record-type :number}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Arg", :record-type :var} {:arglist #{{:functor nil, :arglist (), :record-type :compound} {:record-type :atom}}, :record-type :one-of}, {:name "Length", :record-type :var} {:record-type :integer}, {:name "Type", :record-type :var} {:record-type :any}}
{{:name "Cs", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Lines1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N2", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Length", :record-type :var} {:record-type :number}, {:name "N4", :record-type :var} {:record-type :number}, {:name "L2", :record-type :var} {:record-type :any}, {:name "Lines3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Lines2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:record-type :any}, {:name "N0", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "C", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}}
{{:name "N3", :record-type :var} {:record-type :number}, {:name "_1246", :record-type :var} {:record-type :any}, {:name "Lines1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Line2", :record-type :var} {:record-type :any}, {:name "Lines4", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "OpWidth", :record-type :var} {:record-type :integer}, {:name "O1", :record-type :var} {:record-type :any}, {:name "N2", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Line1", :record-type :var} {:record-type :any}, {:name "Length", :record-type :var} {:record-type :number}, {:name "_1282", :record-type :var} {:record-type :any}, {:name "Cond", :record-type :var} {:record-type :any}, {:name "LeftMargin", :record-type :var} {:record-type :integer}, {:name "_1264", :record-type :var} {:record-type :any}, {:name "Line3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_1228", :record-type :var} {:record-type :any}, {:name "O2", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:record-type :any}, {:name "Lines2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:record-type :any}, {:name "N0", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Rest", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Drs", :record-type :var} {:record-type :any}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N0", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Line", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "A", :record-type :var} {:arglist #{{:functor nil, :arglist (), :record-type :compound} {:record-type :atom}}, :record-type :one-of}, {:name "N2", :record-type :var} {:record-type :number}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Length", :record-type :var} {:record-type :integer}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B", :record-type :var} {:arglist #{{:functor nil, :arglist (), :record-type :compound} {:record-type :atom}}, :record-type :one-of}}
{{:name "N1", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Basic", :record-type :var} {:arglist #{{:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "pred", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "role", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :integer}), :record-type :compound} {:functor "named", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Line", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N2", :record-type :var} {:record-type :number}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Length", :record-type :var} {:record-type :integer}}
{{:name "Lines1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N2", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Length", :record-type :var} {:record-type :number}, {:name "OpCode", :record-type :var} {:type {:record-type :integer}, :record-type :list}, {:name "Complex", :record-type :var} {:arglist #{{:functor "duplex", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "imp", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "or", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "N4", :record-type :var} {:record-type :number}, {:name "L2", :record-type :var} {:record-type :any}, {:name "Lines3", :record-type :var} {:record-type :any}, {:name "Drs2", :record-type :var} {:record-type :any}, {:name "Drs1", :record-type :var} {:record-type :any}, {:name "Lines2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:record-type :any}, {:name "Op", :record-type :var} {:record-type :atom}, {:name "N0", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "OpLen", :record-type :var} {:record-type :integer}, {:name "N1", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}}
{{:name "N3", :record-type :var} {:record-type :number}, {:name "Line4", :record-type :var} {:record-type :any}, {:name "Lines1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tail", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Line2", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Lines4", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "OpWidth", :record-type :var} {:record-type :integer}, {:name "Line1", :record-type :var} {:record-type :any}, {:name "Length", :record-type :var} {:record-type :number}, {:name "DrsWidth", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "LeftMargin", :record-type :var} {:record-type :integer}, {:name "Line3", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:record-type :any}, {:name "VarLen", :record-type :var} {:record-type :integer}, {:name "Lines2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:arglist #{{:functor nil, :arglist (), :record-type :compound} {:record-type :atom}}, :record-type :one-of}, {:name "Dummy", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:record-type :any}, {:name "N0", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Rest", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Drs", :record-type :var} {:record-type :any}}
{{:name "Line", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D", :record-type :var} {:record-type :any}, {:name "N2", :record-type :var} {:record-type :number}, {:name "Length", :record-type :var} {:record-type :integer}, {:name "Arg", :record-type :var} {:arglist #{{:functor nil, :arglist (), :record-type :compound} {:record-type :atom}}, :record-type :one-of}, {:name "A", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "F", :record-type :var} {:type {:record-type :integer}, :record-type :list}, {:name "Timex", :record-type :var} {:arglist #{{:functor "time", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "date", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "date", :arglist ({:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}}, :record-type :one-of}, {:name "N0", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "T", :record-type :var} {:record-type :any}}
{{:name "Other", :record-type :var} {:record-type :nonvar}, {:name "Goals", :record-type :var} {:arglist ({:functor "set_restriction_list", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :tuple}, {:name "Var", :record-type :var} {:record-type :any}, {:name "RL", :record-type :var} {:record-type :any}}
{{:name "GoalsRestr", :record-type :var} {:arglist ({:functor "set_restriction_list", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :tuple}, {:name "Other", :record-type :var} {:record-type :any}, {:name "AllRes", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Var", :record-type :var} {:record-type :any}, {:name "RL", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "OtherRes", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "MoreOccurLists", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "MoreVariables", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "VarName", :record-type :var} {:record-type :any}, {:name "OccurList", :record-type :var} {:record-type :any}}
{{:name "Codes", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "WhiteCodes", :record-type :var} {:type {:record-type :integer}, :record-type :list}, {:name "MoreCodes", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{}
{{:name "N", :record-type :var} {:record-type :any}}
{{:name "N1", :record-type :var} {:record-type :any}, {:name "N0", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:arglist #{{:functor "&", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "if", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :atom} {:functor "bag", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "N2", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:arglist #{{:functor "&", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "if", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :atom} {:functor "bag", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}}
{{:name "N1", :record-type :var} {:record-type :number}, {:name "BL", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "E", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Q", :record-type :var} {:record-type :any}}
{{:name "N1", :record-type :var} {:record-type :number}, {:name "_414", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}}
{{:name "_6718", :record-type :var} {:record-type :any}, {:name "_682", :record-type :var} {:record-type :nonvar}}
{{:name "File", :record-type :var} {:record-type :atom}}
{{:name "POS", :record-type :var} {:record-type :any}, {:name "Context", :record-type :var} {:record-type :any}, {:name "Words", :record-type :var} {:record-type :any}, {:name "B4", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Check", :record-type :var} {:arglist #{{:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :tuple} {:type {:arglist #{{:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :integer}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :empty-list} {:functor "pred", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}}, :record-type :one-of}, :record-type :list}), :record-type :compound} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor "named", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:arglist ({:record-type :any}), :record-type :tuple} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound} {:functor "drs", :arglist ({:record-type :empty-list} {:type {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :any}), :record-type :compound}), :record-type :compound}, :record-type :list}), :record-type :compound}}, :record-type :one-of}, {:name "B3", :record-type :var} {:record-type :any}, {:name "Add", :record-type :var} {:arglist #{{:functor "drs", :arglist ({:record-type :empty-list} {:type {:functor ":", :arglist ({:record-type :any} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :integer}), :record-type :compound}), :record-type :compound}, :record-type :list}), :record-type :compound} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:type {:record-type :any}, :record-type :list} {:functor "timex", :arglist ({:record-type :any} {:functor "time", :arglist ({:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :atom}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor "timex", :arglist ({:record-type :any} {:functor "time", :arglist ({:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :atom}), :record-type :compound} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :atom}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound} {:functor "drs", :arglist ({:record-type :empty-list} {:type {:arglist #{{:functor ":", :arglist ({:type {:record-type :any}, :record-type :list} {:functor "timex", :arglist ({:record-type :any} {:functor "date", :arglist ({:functor ":", :arglist ({:record-type :empty-list} {:record-type :atom}), :record-type :compound} {:functor ":", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:type {:record-type :any}, :record-type :list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}}, :record-type :one-of}, :record-type :list}), :record-type :compound} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :tuple} {:type {:arglist #{{:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "timex", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}}, :record-type :one-of}, :record-type :list}), :record-type :compound} {:functor "drs", :arglist ({:type {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}, :record-type :list} {:type {:arglist #{{:functor ":", :arglist ({:record-type :any} {:functor "named", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :any}), :record-type :compound}), :record-type :compound}}, :record-type :one-of}, :record-type :list}), :record-type :compound} {:functor "drs", :arglist ({:record-type :empty-list} {:type {:arglist #{{:functor ":", :arglist ({:type {:record-type :any}, :record-type :list} {:functor "card", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:type {:record-type :any}, :record-type :list} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :any}), :record-type :compound}), :record-type :compound}}, :record-type :one-of}, :record-type :list}), :record-type :compound} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:type {:record-type :any}, :record-type :list} {:functor "timex", :arglist ({:record-type :any} {:functor "time", :arglist ({:functor ":", :arglist ({:arglist ({:record-type :any}), :record-type :tuple} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:arglist ({:record-type :any}), :record-type :tuple} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :atom}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor "timex", :arglist ({:record-type :any} {:functor "date", :arglist ({:functor ":", :arglist ({:record-type :empty-list} {:record-type :atom}), :record-type :compound} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound} {:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:arglist ({:record-type :any} {:record-type :any}), :record-type :tuple} {:functor "timex", :arglist ({:record-type :any} {:functor "date", :arglist ({:functor ":", :arglist ({:arglist ({:record-type :any}), :record-type :tuple} {:record-type :atom}), :record-type :compound} {:functor ":", :arglist ({:arglist ({:record-type :any}), :record-type :tuple} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :atom}), :record-type :compound} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :atom}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound} {:functor "drs", :arglist ({:record-type :empty-list} {:type {:arglist #{{:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :integer}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}}, :record-type :one-of}, :record-type :list}), :record-type :compound} {:functor "drs", :arglist ({:record-type :empty-list} {:type {:arglist #{{:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:type {:record-type :any}, :record-type :list} {:functor "timex", :arglist ({:record-type :any} {:functor "date", :arglist ({:functor ":", :arglist ({:record-type :empty-list} {:record-type :atom}), :record-type :compound} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :atom}), :record-type :compound} {:functor ":", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}}, :record-type :one-of}, :record-type :list}), :record-type :compound}}, :record-type :one-of}, {:name "Constraints", :record-type :var} {:arglist #{{:arglist ({:functor "email", :arglist ({:record-type :any}), :record-type :compound}), :record-type :tuple} {:type {:arglist #{{:functor "day", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "year", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "number", :arglist ({:record-type :any}), :record-type :compound} {:functor "is", :arglist ({:record-type :any} {:functor "+", :arglist ({:record-type :any} {:record-type :integer}), :record-type :compound}), :record-type :compound} {:functor "month", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor ">", :arglist ({:record-type :any} {:record-type :integer}), :record-type :compound} {:functor "<", :arglist ({:record-type :any} {:record-type :integer}), :record-type :compound}}, :record-type :one-of}, :record-type :list} {:type {:arglist #{{:functor "combineSym", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "member", :arglist ({:record-type :any} {:type {:record-type :atom}, :record-type :list}), :record-type :compound} {:functor "adjacent", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, :record-type :list} {:type {:arglist #{{:functor "number", :arglist ({:record-type :any}), :record-type :compound} {:functor "is", :arglist ({:record-type :any} {:functor "+", :arglist ({:record-type :any} {:record-type :integer}), :record-type :compound}), :record-type :compound} {:functor "is", :arglist ({:record-type :any} {:functor "+", :arglist ({:record-type :any} {:functor "/", :arglist ({:record-type :any} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}}, :record-type :one-of}, :record-type :list} {:type {:arglist #{{:functor "current_year", :arglist ({:record-type :any}), :record-type :compound} {:functor "last_year", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, :record-type :list} {:type {:arglist #{{:functor "ne", :arglist ({:record-type :any} {:type {:record-type :atom}, :record-type :list}), :record-type :compound} {:functor "year", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "number", :arglist ({:record-type :any}), :record-type :compound} {:functor ">", :arglist ({:record-type :any} {:record-type :integer}), :record-type :compound} {:functor "<", :arglist ({:record-type :any} {:record-type :integer}), :record-type :compound}}, :record-type :one-of}, :record-type :list} {:arglist ({:functor "frametarget", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :tuple} {:type {:arglist #{{:functor "ne", :arglist ({:record-type :any} {:type {:record-type :atom}, :record-type :list}), :record-type :compound} {:functor "decade", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "pos", :arglist ({:record-type :any} {:type {:record-type :atom}, :record-type :list}), :record-type :compound}}, :record-type :one-of}, :record-type :list} {:arglist ({:functor "url", :arglist ({:record-type :any}), :record-type :compound}), :record-type :tuple} {:type {:arglist #{{:functor "is", :arglist ({:record-type :any} {:functor "+", :arglist ({:record-type :any} {:record-type :integer}), :record-type :compound}), :record-type :compound} {:functor "century", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, :record-type :list} {:type {:arglist #{{:functor "month", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "pos", :arglist ({:record-type :any} {:type {:record-type :atom}, :record-type :list}), :record-type :compound}}, :record-type :one-of}, :record-type :list} {:type {:arglist #{{:functor "is", :arglist ({:record-type :any} {:functor "-", :arglist ({:record-type :any} {:record-type :integer}), :record-type :compound}), :record-type :compound} {:functor "dimension", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "pos", :arglist ({:record-type :any} {:type {:record-type :atom}, :record-type :list}), :record-type :compound}}, :record-type :one-of}, :record-type :list} {:arglist ({:functor "<", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :tuple} {:type {:arglist #{{:functor "gmt", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "is", :arglist ({:record-type :any} {:functor "+", :arglist ({:record-type :any} {:record-type :integer}), :record-type :compound}), :record-type :compound}}, :record-type :one-of}, :record-type :list} {:type {:arglist #{{:functor "number", :arglist ({:record-type :any}), :record-type :compound} {:functor "is", :arglist ({:record-type :any} {:functor "+", :arglist ({:record-type :any} {:record-type :integer}), :record-type :compound}), :record-type :compound} {:functor "is", :arglist ({:record-type :any} {:functor "integer", :arglist ({:functor "*", :arglist ({:record-type :integer} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}}, :record-type :one-of}, :record-type :list} {:type {:arglist #{{:functor "minute", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "member", :arglist ({:record-type :any} {:type {:record-type :atom}, :record-type :list}), :record-type :compound} {:functor "hour", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, :record-type :list} {:type {:arglist #{{:functor "newref", :arglist ({:record-type :any}), :record-type :compound} {:functor "adjacent", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, :record-type :list} {:type {:arglist #{{:functor "title", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "adjacent", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, :record-type :list} {:arglist ({:functor "quoted", :arglist ({:record-type :any}), :record-type :compound}), :record-type :tuple} {:type {:arglist #{{:functor "current_day", :arglist ({:record-type :any}), :record-type :compound} {:functor "current_month", :arglist ({:record-type :any}), :record-type :compound} {:functor "earlier_doy", :arglist ({:functor "doy", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "doy", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "current_year", :arglist ({:record-type :any}), :record-type :compound}}, :record-type :one-of}, :record-type :list} {:type {:arglist #{{:functor "year", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "number", :arglist ({:record-type :any}), :record-type :compound} {:functor "is", :arglist ({:record-type :any} {:functor "+", :arglist ({:record-type :any} {:record-type :integer}), :record-type :compound}), :record-type :compound} {:functor "member", :arglist ({:record-type :any} {:type {:record-type :atom}, :record-type :list}), :record-type :compound}}, :record-type :one-of}, :record-type :list} {:arglist ({:functor "framerole", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :tuple}}, :record-type :one-of}, {:name "NE", :record-type :var} {:record-type :any}, {:name "Remove", :record-type :var} {:arglist #{{:functor "drs", :arglist ({:record-type :empty-list} {:type {:arglist #{{:functor ":", :arglist ({:type {:record-type :any}, :record-type :list} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:type {:record-type :any}, :record-type :list} {:functor "prop", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:type {:functor ":", :arglist ({:type {:record-type :any}, :record-type :list} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}, :record-type :list}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:type {:record-type :any}, :record-type :list} {:functor "card", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom}), :record-type :compound}), :record-type :compound}}, :record-type :one-of}, :record-type :list}), :record-type :compound} {:functor "drs", :arglist ({:record-type :empty-list} {:type {:arglist #{{:functor ":", :arglist ({:type {:record-type :any}, :record-type :list} {:functor "named", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:type {:record-type :any}, :record-type :list} {:functor "card", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom}), :record-type :compound}), :record-type :compound}}, :record-type :one-of}, :record-type :list}), :record-type :compound} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:arglist ({:record-type :any}), :record-type :tuple} {:record-type :any}), :record-type :compound}), :record-type :tuple} {:type {:arglist #{{:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:type {:record-type :any}, :record-type :list} {:functor "pred", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :any}), :record-type :compound}), :record-type :compound}}, :record-type :one-of}, :record-type :list}), :record-type :compound} {:functor "drs", :arglist ({:record-type :empty-list} {:type {:arglist #{{:functor ":", :arglist ({:type {:record-type :any}, :record-type :list} {:functor "timex", :arglist ({:record-type :any} {:functor "date", :arglist ({:functor ":", :arglist ({:record-type :empty-list} {:record-type :atom}), :record-type :compound} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:type {:record-type :any}, :record-type :list} {:functor "timex", :arglist ({:record-type :any} {:functor "date", :arglist ({:functor ":", :arglist ({:record-type :empty-list} {:record-type :atom}), :record-type :compound} {:functor ":", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}}, :record-type :one-of}, :record-type :list}), :record-type :compound} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor "timex", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound} {:functor "drs", :arglist ({:record-type :empty-list} {:type {:arglist #{{:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "card", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom}), :record-type :compound}), :record-type :compound}}, :record-type :one-of}, :record-type :list}), :record-type :compound} {:functor "drs", :arglist ({:record-type :empty-list} {:type {:arglist #{{:functor ":", :arglist ({:type {:record-type :any}, :record-type :list} {:functor "card", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:type {:record-type :any}, :record-type :list} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :any}), :record-type :compound}), :record-type :compound}}, :record-type :one-of}, :record-type :list}), :record-type :compound} {:functor "drs", :arglist ({:record-type :empty-list} {:type {:arglist #{{:functor ":", :arglist ({:record-type :any} {:functor "named", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :any}), :record-type :compound}), :record-type :compound}}, :record-type :one-of}, :record-type :list}), :record-type :compound} {:functor "drs", :arglist ({:record-type :empty-list} {:type {:arglist #{{:functor ":", :arglist ({:type {:record-type :any}, :record-type :list} {:functor "named", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:type {:record-type :any}, :record-type :list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:type {:record-type :any}, :record-type :list} {:functor "pred", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:type {:record-type :any}, :record-type :list} {:functor "card", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom}), :record-type :compound}), :record-type :compound}}, :record-type :one-of}, :record-type :list}), :record-type :compound} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}}, :record-type :one-of}, {:name "B1", :record-type :var} {:record-type :any}, {:name "CDRS", :record-type :var} {:record-type :any}}
{{:name "_464", :record-type :var} {:record-type :any}, {:name "_462", :record-type :var} {:record-type :any}, {:name "_458", :record-type :var} {:record-type :any}, {:name "_460", :record-type :var} {:record-type :any}, {:name "_456", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "L", :record-type :var} {:record-type :any}}
{{:name "Y", :record-type :var} {:record-type :any}, {:name "L3", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "R", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I4", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I2", :record-type :var} {:record-type :any}, {:name "I3", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Y", :record-type :var} {:record-type :any}, {:name "L3", :record-type :var} {:record-type :any}, {:name "D4", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "E4", :record-type :var} {:record-type :any}, {:name "E3", :record-type :var} {:record-type :any}, {:name "F1", :record-type :var} {:record-type :any}, {:name "F2", :record-type :var} {:record-type :any}, {:name "E2", :record-type :var} {:record-type :any}, {:name "D3", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "F3", :record-type :var} {:record-type :any}, {:name "R", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_510", :record-type :var} {:record-type :any}, {:name "D2", :record-type :var} {:record-type :any}, {:name "D1", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "F4", :record-type :var} {:record-type :any}, {:name "E1", :record-type :var} {:record-type :any}}
{{:name "Y", :record-type :var} {:record-type :any}, {:name "L3", :record-type :var} {:record-type :any}, {:name "D4", :record-type :var} {:record-type :any}, {:name "E4", :record-type :var} {:record-type :any}, {:name "E3", :record-type :var} {:record-type :any}, {:name "F1", :record-type :var} {:record-type :any}, {:name "F2", :record-type :var} {:record-type :any}, {:name "E2", :record-type :var} {:record-type :any}, {:name "D3", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "F3", :record-type :var} {:record-type :any}, {:name "R", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D2", :record-type :var} {:record-type :any}, {:name "D1", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I4", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I2", :record-type :var} {:record-type :any}, {:name "F4", :record-type :var} {:record-type :any}, {:name "E1", :record-type :var} {:record-type :any}, {:name "I3", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "R", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}, {:name "L3", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "R", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}}
{{:name "N1", :record-type :var} {:record-type :any}, {:name "N0", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "N2", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "_436", :record-type :var} {:record-type :any}, {:name "N0", :record-type :var} {:record-type :any}, {:name "_438", :record-type :var} {:record-type :any}}
{{:name "N1", :record-type :var} {:record-type :number}, {:name "_436", :record-type :var} {:record-type :any}, {:name "N0", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "_438", :record-type :var} {:record-type :any}, {:name "_430", :record-type :var} {:record-type :any}}
{{:name "N1", :record-type :var} {:record-type :number}, {:name "A", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}}
{{:name "_408", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}}
{{:name "Yn", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :number}, {:name "X", :record-type :var} {:functor nil, :arglist (), :record-type :compound}, {:name "Xn", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:functor nil, :arglist (), :record-type :compound}, {:name "N", :record-type :var} {:record-type :integer}}
{{:name "NewAtomList", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "AtomList", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Quantifying", :record-type :var} {:record-type :any}, {:name "NewClause", :record-type :var} {:record-type :nonvar}, {:name "QuantifiedAtomList", :record-type :var} {:record-type :any}, {:name "Clause", :record-type :var} {:record-type :nonvar}, {:name "Type", :record-type :var} {:record-type :atom}, {:name "Variables", :record-type :var} {:record-type :any}, {:name "OccurList", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "InputList", :record-type :var} {:record-type :any}, {:name "OutputList", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "Line", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Out", :record-type :var} {:arglist ({:type {:record-type :any}, :record-type :list} {:type {:record-type :any}, :record-type :list} {:type {:record-type :any}, :record-type :list} {:type {:record-type :any}, :record-type :list} {:type {:record-type :any}, :record-type :list}), :record-type :tuple}, {:name "Lambda", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Code", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_880", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:arglist #{{:functor nil, :arglist (), :record-type :compound} {:record-type :atom}}, :record-type :one-of}, {:name "N", :record-type :var} {:record-type :integer}}
{{:name "Y", :record-type :var} {:record-type :var}, {:name "C", :record-type :var} {:record-type :any}}
{{:name "Y", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}}
{}
{{:name "N", :record-type :var} {:record-type :any}}
{{:name "N1", :record-type :var} {:record-type :number}, {:name "NN", :record-type :var} {:record-type :any}, {:name "R", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "E", :record-type :var} {:record-type :any}, {:name "_430", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}}
{{:name "Stream", :record-type :var} {:record-type :ground}, {:name "Ending", :record-type :var} {:record-type :any}}
{{:name "ID", :record-type :var} {:record-type :any}, {:name "_508", :record-type :var} {:record-type :any}, {:name "Ags", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "T", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :ground}}
{{:name "_410", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "V", :record-type :var} {:record-type :any}, {:name "Ending", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :ground}}
{{:name "File", :record-type :var} {:arglist #{{:functor nil, :arglist (), :record-type :compound} {:record-type :atom} {:record-type :string}}, :record-type :one-of}, {:name "Input", :record-type :var} {:record-type :ground}, {:name "OldFile", :record-type :var} {:record-type :ground}, {:name "T", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:record-type :integer}, {:name "_4560", :record-type :var} {:record-type :any}, {:name "_4558", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:record-type :number}, {:name "_4560", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}}
{{:name "_4558", :record-type :var} {:record-type :any}}
{}
{{:name "X", :record-type :var} {:record-type :any}}
{}
{{:name "L2", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "Alpha", :record-type :var} {:record-type :any}, {:name "Const", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:record-type :any}}
{}
{{:name "Code", :record-type :var} {:record-type :any}}
{{:name "Element", :record-type :var} {:record-type :any}}
{}
{{:name "Digit", :record-type :var} {:record-type :any}, {:name "MoreDigits", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{}
{}
{{:name "Integer", :record-type :var} {:record-type :any}, {:name "DigitString", :record-type :var} {:record-type :any}}
{{:name "MoreElements", :record-type :var} {:record-type :any}}
{{:name "Term", :record-type :var} {:record-type :any}}
{}
{{:name "Functor", :record-type :var} {:record-type :any}}
{{:name "Variable", :record-type :var} {:record-type :any}, {:name "Alpha", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "UpperCase", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:record-type :any}}
{}
{{:name "Const", :record-type :var} {:record-type :any}}
{{:name "Code", :record-type :var} {:record-type :any}}
{{:name "FullStopCode", :record-type :var} {:record-type :any}, {:name "DigitString1", :record-type :var} {:record-type :any}, {:name "DigitString", :record-type :var} {:record-type :any}, {:name "DigitString2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Float", :record-type :var} {:record-type :any}}
{{:name "Number", :record-type :var} {:record-type :any}}
{{:name "Term", :record-type :var} {:record-type :any}}
{{:name "MoreElements", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Element", :record-type :var} {:record-type :any}}
{{:name "Number", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "Z", :record-type :var} {:record-type :any}}
{{:name "Code", :record-type :var} {:record-type :any}}
{{:name "Term", :record-type :var} {:record-type :any}}
{{:name "Operator", :record-type :var} {:record-type :any}, {:name "Term1", :record-type :var} {:record-type :any}, {:name "Term", :record-type :var} {:record-type :any}}
{{:name "MoreTerms", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Term", :record-type :var} {:record-type :any}}
{}
{}
{}
{{:name "Alpha", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "LowerCase", :record-type :var} {:record-type :any}, {:name "Const", :record-type :var} {:record-type :any}}
{{:name "DigitStringTail", :record-type :var} {:record-type :any}}
{{:name "_392", :record-type :var} {:record-type :any}}
{{:name "Codes", :record-type :var} {:record-type :any}, {:name "Operator", :record-type :var} {:record-type :any}}
{{:name "Integer", :record-type :var} {:record-type :any}}
{{:name "Functor", :record-type :var} {:record-type :any}, {:name "Arguments", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Term", :record-type :var} {:record-type :any}}
{{:name "MoreCodes", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Code", :record-type :var} {:record-type :any}}
{}
{{:name "C", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "Z", :record-type :var} {:record-type :any}}
{}
{}
{{:name "Code", :record-type :var} {:record-type :any}}
{{:name "MoreConsts", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Const", :record-type :var} {:record-type :any}}
{{:name "TermList", :record-type :var} {:record-type :any}}
{}
{}
{{:name "_392", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "Code", :record-type :var} {:record-type :any}}
{}
{}
{{:name "C", :record-type :var} {:record-type :any}}
{{:name "TermListTail", :record-type :var} {:record-type :any}}
{{:name "Time", :record-type :var} {:record-type :any}}
{{:name "Integer", :record-type :var} {:record-type :any}, {:name "Neg", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:record-type :any}}
{{:name "Term", :record-type :var} {:record-type :any}}
{{:name "Nine", :record-type :var} {:record-type :any}, {:name "Zero", :record-type :var} {:record-type :any}, {:name "Digit", :record-type :var} {:record-type :any}}
{{:name "MoreCodes", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Code", :record-type :var} {:record-type :any}}
{{:name "String", :record-type :var} {:record-type :any}}
{{:name "Time", :record-type :var} {:record-type :any}}
{}
{{:name "Term2", :record-type :var} {:record-type :any}, {:name "Term3", :record-type :var} {:record-type :any}, {:name "Operator", :record-type :var} {:record-type :any}, {:name "Term1", :record-type :var} {:record-type :any}, {:name "Term", :record-type :var} {:record-type :any}}
{{:name "Term", :record-type :var} {:record-type :any}}
{}
{{:name "String", :record-type :var} {:record-type :any}}
{{:name "Const", :record-type :var} {:record-type :any}}
{{:name "_432", :record-type :var} {:record-type :any}, {:name "OccurList", :record-type :var} {:record-type :any}}
{{:name "OldOccurList", :record-type :var} {:record-type :any}, {:name "Atom", :record-type :var} {:record-type :nonvar}, {:name "MoreNewAtoms", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "NewAtom", :record-type :var} {:record-type :any}, {:name "IntOccurList", :record-type :var} {:record-type :any}, {:name "NewOccurList", :record-type :var} {:record-type :any}, {:name "MoreAtoms", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Variables", :record-type :var} {:record-type :any}}
{{:name "U", :record-type :var} {:record-type :any}, {:name "R", :record-type :var} {:record-type :any}, {:name "O", :record-type :var} {:record-type :any}}
{}
{{:name "J", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "G", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}}
{{:name "_420", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:record-type :any}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :empty-list}, {:name "E", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "E", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "A", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "M", :record-type :var} {:record-type :number}, {:name "B", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}}
{{:name "Term", :record-type :var} {:record-type :any}, {:name "Quant", :record-type :var} {:record-type :any}}
{{:name "Quant", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :integer}, {:name "Term", :record-type :var} {:record-type :nonvar}, {:name "_456", :record-type :var} {:record-type :atomic}}
{}
{{:name "_430", :record-type :var} {:record-type :any}}
{{:name "MoreLists", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "MoreOccurs", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "MoreOccurs1", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}}
{{:name "MoreLists", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_626", :record-type :var} {:record-type :any}, {:name "MoreOccurs", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "MoreOccurs1", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}}
{}
{{:name "_4048", :record-type :var} {:record-type :any}}
{}
{}
{{:name "_4048", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "_4000", :record-type :var} {:record-type :any}, {:name "_3998", :record-type :var} {:record-type :any}}
{}
{}
{{:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "NewTab", :record-type :var} {:record-type :number}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "D", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "B2", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "NewTab", :record-type :var} {:record-type :number}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "_Type", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "B2", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "NewTab", :record-type :var} {:record-type :number}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Res", :record-type :var} {:record-type :any}}
{}
{{:name "UIn", :record-type :var} {:record-type :any}, {:name "O1", :record-type :var} {:record-type :any}, {:name "_O2", :record-type :var} {:record-type :any}}
{{:name "_430", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:record-type :any}, {:name "_432", :record-type :var} {:record-type :any}}
{{:name "NA", :record-type :var} {:record-type :any}, {:name "D1", :record-type :var} {:record-type :any}, {:name "D0", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_454", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "NA", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D1", :record-type :var} {:record-type :any}, {:name "D0", :record-type :var} {:record-type :any}, {:name "D2", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "NA", :record-type :var} {:record-type :any}, {:name "D1", :record-type :var} {:record-type :any}, {:name "D0", :record-type :var} {:record-type :any}, {:name "D2", :record-type :var} {:record-type :any}, {:name "PE", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "T", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "C", :record-type :var} {:record-type :any}, {:name "R", :record-type :var} {:record-type :any}, {:name "G", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:functor "if", :arglist ({:record-type :any} {:arglist #{{:functor "&", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "if", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :atom}}, :record-type :one-of}), :record-type :compound}, {:name "N", :record-type :var} {:record-type :any}}
{{:name "Month", :record-type :var} {:record-type :any}, {:name "Year", :record-type :var} {:record-type :any}, {:name "Day", :record-type :var} {:record-type :any}}
{{:name "Month", :record-type :var} {:record-type :any}, {:name "Year", :record-type :var} {:record-type :any}, {:name "Day", :record-type :var} {:record-type :any}}
{{:name "Month", :record-type :var} {:record-type :any}, {:name "Year", :record-type :var} {:record-type :any}, {:name "Day", :record-type :var} {:record-type :any}}
{{:name "Month", :record-type :var} {:record-type :any}, {:name "Year", :record-type :var} {:record-type :any}, {:name "Day", :record-type :var} {:record-type :any}}
{{:name "Month", :record-type :var} {:record-type :any}, {:name "Year", :record-type :var} {:record-type :any}, {:name "Day", :record-type :var} {:record-type :any}}
{{:name "Month", :record-type :var} {:record-type :any}, {:name "Year", :record-type :var} {:record-type :any}, {:name "Day", :record-type :var} {:record-type :any}}
{{:name "Month", :record-type :var} {:record-type :any}, {:name "Year", :record-type :var} {:record-type :any}, {:name "Day", :record-type :var} {:record-type :any}}
{{:name "Month", :record-type :var} {:record-type :any}, {:name "Year", :record-type :var} {:record-type :any}, {:name "Day", :record-type :var} {:record-type :any}}
{{:name "_490", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}}
{{:name "_438", :record-type :var} {:record-type :any}, {:name "_440", :record-type :var} {:record-type :any}, {:name "_442", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:record-type :any}, {:name "Arg", :record-type :var} {:record-type :any}}
{{:name "_490", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}}
{{:name "B1", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "L2", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "L1", :record-type :var} {:record-type :any}, {:name "_594", :record-type :var} {:record-type :any}}
{{:name "Arg", :record-type :var} {:record-type :any}, {:name "_414", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "B2", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "L", :record-type :var} {:record-type :any}, {:name "_504", :record-type :var} {:record-type :any}, {:name "_594", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:record-type :any}, {:name "_552", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}}
{{:name "_438", :record-type :var} {:record-type :any}, {:name "_440", :record-type :var} {:record-type :any}, {:name "_442", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:record-type :any}, {:name "Arg", :record-type :var} {:record-type :any}}
{{:name "_490", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}}
{{:name "_428", :record-type :var} {:record-type :any}, {:name "Arg2", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:record-type :any}, {:name "Arg1", :record-type :var} {:record-type :any}}
{{:name "Arg2", :record-type :var} {:record-type :any}, {:name "_440", :record-type :var} {:record-type :any}, {:name "_442", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:record-type :any}, {:name "Arg1", :record-type :var} {:record-type :any}}
{{:name "_436", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "L2", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "X", :record-type :var} {:record-type :any}, {:name "_670", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:record-type :any}}
{{:name "Arg2", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:record-type :any}, {:name "Arg1", :record-type :var} {:record-type :any}}
{{:name "_428", :record-type :var} {:record-type :any}, {:name "Arg2", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:record-type :any}, {:name "Arg1", :record-type :var} {:record-type :any}}
{{:name "Arg2", :record-type :var} {:record-type :any}, {:name "_440", :record-type :var} {:record-type :any}, {:name "_442", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:record-type :any}, {:name "Arg1", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "Vs", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "R", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}}
{{:name "Q", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}}
{{:name "_420", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "_424", :record-type :var} {:record-type :any}, {:name "S2", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_602", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "S1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_422", :record-type :var} {:record-type :any}}
{{:name "_424", :record-type :var} {:record-type :any}, {:name "S2", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "S1", :record-type :var} {:record-type :any}, {:name "_452", :record-type :var} {:record-type :any}, {:name "_422", :record-type :var} {:record-type :any}}
{{:name "_424", :record-type :var} {:record-type :any}, {:name "S2", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "S1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_422", :record-type :var} {:record-type :any}}
{{:name "_424", :record-type :var} {:record-type :any}, {:name "S2", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "S1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_600", :record-type :var} {:record-type :any}, {:name "_422", :record-type :var} {:record-type :any}}
{{:name "Start", :record-type :var} {:record-type :any}, {:name "_Tags", :record-type :var} {:record-type :any}, {:name "End", :record-type :var} {:record-type :any}, {:name "Der", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "CCG0", :record-type :var} {:record-type :any}, {:name "CCG2", :record-type :var} {:record-type :any}, {:name "CCG1", :record-type :var} {:record-type :any}}
{{:name "Max", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "RB", :record-type :var} {:record-type :any}, {:name "Rep", :record-type :var} {:record-type :any}, {:name "LT", :record-type :var} {:arglist #{{:functor "&", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "if", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :atom} {:functor "bag", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Comm", :record-type :var} {:record-type :any}, {:name "M1", :record-type :var} {:record-type :number}, {:name "H", :record-type :var} {:record-type :any}, {:name "WT", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_930", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{{:name "Terms", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "FileName", :record-type :var} {:arglist #{{:functor nil, :arglist (), :record-type :compound} {:record-type :atom} {:record-type :string}}, :record-type :one-of}, {:name "SOKB", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Drs2", :record-type :var} {:record-type :any}, {:name "Drs1", :record-type :var} {:record-type :any}}
{{:name "Drs2", :record-type :var} {:record-type :any}, {:name "Drs1", :record-type :var} {:record-type :any}}
{{:name "Drs2", :record-type :var} {:record-type :any}, {:name "Drs1", :record-type :var} {:record-type :any}, {:name "_440", :record-type :var} {:record-type :any}}
{{:name "Drs2", :record-type :var} {:record-type :any}, {:name "Drs1", :record-type :var} {:record-type :any}, {:name "_440", :record-type :var} {:record-type :any}}
{{:name "Drs2", :record-type :var} {:record-type :any}, {:name "Drs1", :record-type :var} {:record-type :any}, {:name "_440", :record-type :var} {:record-type :any}}
{{:name "Drs2", :record-type :var} {:record-type :any}, {:name "Drs1", :record-type :var} {:record-type :any}, {:name "_440", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}}
{}
{{:name "Option", :record-type :var} {:record-type :any}, {:name "Value", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:record-type :any}}
{{:name "X2", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:record-type :any}}
{{:name "X2", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :any}, {:name "X4", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:record-type :any}, {:name "X3", :record-type :var} {:record-type :any}}
{{:name "X2", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:record-type :any}, {:name "X3", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}}
{{:name "_4078", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}}
{{:name "Ans", :record-type :var} {:record-type :any}, {:name "_408", :record-type :var} {:record-type :any}, {:name "Ans1", :record-type :var} {:record-type :any}, {:name "G", :record-type :var} {:record-type :ground}}
{{:name "Ans", :record-type :var} {:record-type :any}, {:name "Rep", :record-type :var} {:record-type :any}, {:name "G", :record-type :var} {:record-type :ground}, {:name "WT", :record-type :var} {:record-type :any}}
{{:name "_636", :record-type :var} {:record-type :any}, {:name "G", :record-type :var} {:record-type :any}, {:name "WT", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_684", :record-type :var} {:record-type :any}}
{}
{}
{}
{{:name "_3986", :record-type :var} {:record-type :any}}
{}
{}
{}
{{:name "_420", :record-type :var} {:record-type :any}, {:name "_418", :record-type :var} {:record-type :any}, {:name "_526", :record-type :var} {:record-type :any}}
{{:name "_462", :record-type :var} {:record-type :any}, {:name "_568", :record-type :var} {:record-type :any}, {:name "_458", :record-type :var} {:record-type :any}, {:name "_454", :record-type :var} {:record-type :any}, {:name "_460", :record-type :var} {:record-type :any}, {:name "_456", :record-type :var} {:record-type :any}}
{{:name "_472", :record-type :var} {:record-type :any}}
{{:name "Num", :record-type :var} {:record-type :any}}
{{:name "D", :record-type :var} {:record-type :any}}
{{:name "D1", :record-type :var} {:record-type :any}, {:name "Conds1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B1", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:record-type :any}, {:name "D2", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "Conds2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "A2", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Conds2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Conds1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D2", :record-type :var} {:record-type :any}, {:name "D1", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}}
{{:name "D1", :record-type :var} {:record-type :any}, {:name "Conds1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B1", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:record-type :any}, {:name "D2", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "Conds2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "D1", :record-type :var} {:record-type :any}, {:name "Conds1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B1", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:record-type :any}, {:name "D2", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "Conds2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "A2", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Conds2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Conds1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D2", :record-type :var} {:record-type :any}, {:name "D1", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}}
{{:name "A2", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Conds2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Conds1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D2", :record-type :var} {:record-type :any}, {:name "D1", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}}
{{:name "Y", :record-type :var} {:record-type :any}, {:name "Conds2", :record-type :var} {:record-type :any}, {:name "Conds1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D2", :record-type :var} {:record-type :any}, {:name "D1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "_458", :record-type :var} {:record-type :any}, {:name "_618", :record-type :var} {:record-type :any}, {:name "Z", :record-type :var} {:record-type :any}, {:name "_488", :record-type :var} {:record-type :any}}
{{:name "D1", :record-type :var} {:record-type :any}, {:name "Conds1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B1", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:record-type :any}, {:name "D2", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "Conds2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "D1", :record-type :var} {:record-type :any}, {:name "Conds1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C", :record-type :var} {:record-type :any}, {:name "D2", :record-type :var} {:record-type :any}, {:name "Conds2", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Y", :record-type :var} {:record-type :any}, {:name "Conds2", :record-type :var} {:record-type :any}, {:name "Conds1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D2", :record-type :var} {:record-type :any}, {:name "D1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "_458", :record-type :var} {:record-type :any}, {:name "_618", :record-type :var} {:record-type :any}, {:name "Z", :record-type :var} {:record-type :any}, {:name "_488", :record-type :var} {:record-type :any}}
{{:name "_408", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :number}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "Pos", :record-type :var} {:record-type :number}}
{{:name "Tab", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_398", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{}
{{:name "_428", :record-type :var} {:record-type :any}, {:name "Tail", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "_428", :record-type :var} {:record-type :any}, {:name "Tail", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{}
{{:name "Var", :record-type :var} {:record-type :any}, {:name "Out", :record-type :var} {:record-type :any}, {:name "Rest", :record-type :var} {:record-type :any}}
{{:name "Old", :record-type :var} {:record-type :atom}, {:name "New", :record-type :var} {:record-type :atom}, {:name "_6852", :record-type :var} {:record-type :any}, {:name "_6614", :record-type :var} {:record-type :any}, {:name "Psi", :record-type :var} {:record-type :any}, {:name "Phi", :record-type :var} {:record-type :any}}
{{:name "Old", :record-type :var} {:record-type :atom}, {:name "New", :record-type :var} {:record-type :atom}, {:name "_858", :record-type :var} {:record-type :any}, {:name "Psi", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:record-type :any}, {:name "Phi", :record-type :var} {:record-type :any}, {:name "POS", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_702", :record-type :var} {:record-type :any}}
{{:name "Cat2", :record-type :var} {:record-type :any}, {:name "_438", :record-type :var} {:record-type :any}, {:name "_434", :record-type :var} {:record-type :any}, {:name "Cat1", :record-type :var} {:record-type :any}, {:name "_432", :record-type :var} {:record-type :any}}
{{:name "Old", :record-type :var} {:record-type :any}, {:name "New", :record-type :var} {:record-type :any}, {:name "_470", :record-type :var} {:record-type :any}, {:name "_600", :record-type :var} {:record-type :any}, {:name "Psi", :record-type :var} {:record-type :any}, {:name "Phi", :record-type :var} {:record-type :any}}
{{:name "Old", :record-type :var} {:record-type :atom}, {:name "New", :record-type :var} {:record-type :atom}, {:name "_470", :record-type :var} {:record-type :any}, {:name "_708", :record-type :var} {:record-type :any}, {:name "Psi", :record-type :var} {:record-type :any}, {:name "Phi", :record-type :var} {:record-type :any}}
{{:name "_520", :record-type :var} {:record-type :any}, {:name "Old", :record-type :var} {:record-type :any}, {:name "M", :record-type :var} {:record-type :any}, {:name "New", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "eq", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "X", :record-type :var} {:record-type :any}, {:name "Phi", :record-type :var} {:record-type :any}, {:name "P", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "_474", :record-type :var} {:record-type :any}, {:name "Lam", :record-type :var} {:record-type :any}, {:name "_476", :record-type :var} {:record-type :any}}
{{:name "Sym", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "_646", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Par", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "U", :record-type :var} {:record-type :any}, {:name "_642", :record-type :var} {:record-type :any}, {:name "Lam2", :record-type :var} {:record-type :any}, {:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "Lam1", :record-type :var} {:record-type :any}}
{{:name "LeftMargin", :record-type :var} {:record-type :atom}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "_436", :record-type :var} {:record-type :any}, {:name "_438", :record-type :var} {:record-type :any}, {:name "_434", :record-type :var} {:record-type :any}, {:name "_432", :record-type :var} {:record-type :any}}
{{:name "Rel", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Words", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Rel", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Words", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "_436", :record-type :var} {:record-type :any}, {:name "_438", :record-type :var} {:record-type :any}, {:name "_434", :record-type :var} {:record-type :any}, {:name "_432", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "Rel", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "K2", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Words", :record-type :var} {:record-type :any}, {:name "K1", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "Rel", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "K2", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Words", :record-type :var} {:record-type :any}, {:name "K1", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "R", :record-type :var} {:record-type :any}, {:name "O", :record-type :var} {:record-type :any}, {:name "U", :record-type :var} {:record-type :any}}
{{:name "Sym1", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X2", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:type {:record-type :any}, :record-type :list} {:functor "named", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Type", :record-type :var} {:record-type :any}, {:name "Sort", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:record-type :any}, {:name "Sym3", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "I2", :record-type :var} {:record-type :any}, {:name "Sym2", :record-type :var} {:record-type :any}, {:name "I3", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Sym1", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X2", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:type {:record-type :any}, :record-type :list} {:functor "named", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "_624", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}, {:name "Sort", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:record-type :any}, {:name "Sym3", :record-type :var} {:record-type :any}, {:name "_626", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "I2", :record-type :var} {:record-type :any}, {:name "Sym2", :record-type :var} {:record-type :any}, {:name "I3", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "I", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Num", :record-type :var} {:record-type :number}, {:name "X2", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:type {:record-type :any}, :record-type :list} {:functor "card", :arglist ({:record-type :any} {:record-type :number} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Type", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:record-type :any}, {:name "Num2", :record-type :var} {:record-type :number}, {:name "B1", :record-type :var} {:record-type :any}, {:name "Num1", :record-type :var} {:record-type :number}, {:name "I2", :record-type :var} {:record-type :any}, {:name "I3", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "I", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Num", :record-type :var} {:record-type :number}, {:name "X2", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:type {:record-type :any}, :record-type :list} {:functor "card", :arglist ({:record-type :any} {:record-type :number} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Type", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:record-type :any}, {:name "Num2", :record-type :var} {:record-type :number}, {:name "B1", :record-type :var} {:record-type :any}, {:name "Num1", :record-type :var} {:record-type :number}, {:name "I2", :record-type :var} {:record-type :any}, {:name "I3", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "I", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Date1", :record-type :var} {:arglist #{{:functor "date", :arglist ({:functor ":", :arglist ({:record-type :empty-list} {:record-type :atom}), :record-type :compound} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :atom}), :record-type :compound} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "date", :arglist ({:functor ":", :arglist ({:record-type :empty-list} {:record-type :atom}), :record-type :compound} {:record-type :any} {:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :atom}), :record-type :compound}), :record-type :compound} {:functor "date", :arglist ({:functor ":", :arglist ({:record-type :empty-list} {:record-type :atom}), :record-type :compound} {:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :atom}), :record-type :compound} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "X2", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:type {:record-type :any}, :record-type :list} {:functor "timex", :arglist ({:record-type :any} {:functor "date", :arglist ({:functor ":", :arglist ({:record-type :empty-list} {:record-type :atom}), :record-type :compound} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "X1", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:record-type :any}, {:name "Date2", :record-type :var} {:arglist #{{:functor "date", :arglist ({:functor ":", :arglist ({:record-type :empty-list} {:record-type :atom}), :record-type :compound} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :atom}), :record-type :compound} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "date", :arglist ({:functor ":", :arglist ({:record-type :empty-list} {:record-type :atom}), :record-type :compound} {:record-type :any} {:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :atom}), :record-type :compound}), :record-type :compound} {:functor "date", :arglist ({:functor ":", :arglist ({:record-type :empty-list} {:record-type :atom}), :record-type :compound} {:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :atom}), :record-type :compound} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "B1", :record-type :var} {:record-type :any}, {:name "I2", :record-type :var} {:record-type :any}, {:name "Date", :record-type :var} {:functor "date", :arglist ({:functor ":", :arglist ({:record-type :empty-list} {:record-type :atom}), :record-type :compound} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}, {:name "I3", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "RName", :record-type :var} {:record-type :any}, {:name "NewDisjunct", :record-type :var} {:record-type :any}, {:name "Disjunct", :record-type :var} {:record-type :any}, {:name "MoreDisjuncts", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N", :record-type :var} {:record-type :any}, {:name "OName", :record-type :var} {:record-type :any}}
{{:name "MoreNewDisjuncts", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "RName", :record-type :var} {:record-type :any}, {:name "M", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "M1", :record-type :var} {:record-type :number}, {:name "Disjunct", :record-type :var} {:record-type :any}, {:name "MoreDisjuncts", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N", :record-type :var} {:record-type :any}, {:name "OName", :record-type :var} {:record-type :any}}
{{:name "P", :record-type :var} {:record-type :any}, {:name "J", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "G", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "DRS", :record-type :var} {:record-type :any}, {:name "O", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :any}, {:name "R", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "M", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}, {:name "_754", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}}
{{:name "DRS", :record-type :var} {:record-type :any}, {:name "Stack", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "WL", :record-type :var} {:record-type :any}, {:name "U", :record-type :var} {:record-type :any}}
{{:name "_408", :record-type :var} {:record-type :any}}
{{:name "P", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D4", :record-type :var} {:record-type :any}, {:name "C3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C1", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "D3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C4", :record-type :var} {:record-type :any}, {:name "D2", :record-type :var} {:record-type :any}, {:name "D1", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:record-type :any}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "InFile", :record-type :var} {:record-type :any}, {:name "OutFile", :record-type :var} {:arglist #{{:functor nil, :arglist (), :record-type :compound} {:record-type :atom} {:record-type :string}}, :record-type :one-of}, {:name "Stream", :record-type :var} {:record-type :ground}}
{{:name "NewTab", :record-type :var} {:record-type :number}, {:name "Index", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:arglist #{{:record-type :number} {:record-type :atom} {:functor "f", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Sense", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "Arg", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "NewTab", :record-type :var} {:record-type :number}, {:name "Index", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Arg2", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:arglist #{{:record-type :number} {:record-type :atom} {:functor "f", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Sense", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "Arg1", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "NewTab", :record-type :var} {:record-type :number}, {:name "Index", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Arg2", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:arglist #{{:record-type :number} {:record-type :atom} {:functor "f", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Index", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "Arg1", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "NewTab", :record-type :var} {:record-type :number}, {:name "Index", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "NewTab", :record-type :var} {:record-type :number}, {:name "Index", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "NewTab", :record-type :var} {:record-type :number}, {:name "Index", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Var", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "NewTab", :record-type :var} {:record-type :number}, {:name "Index", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Var", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:arglist #{{:record-type :number} {:record-type :atom} {:functor "f", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Index", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "Arg", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}, {:name "Class", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Arg2", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:arglist #{{:record-type :number} {:record-type :atom} {:functor "f", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Index", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "Arg1", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "NewTab", :record-type :var} {:record-type :number}, {:name "Index", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "NewTab", :record-type :var} {:record-type :number}, {:name "Index", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:arglist #{{:record-type :number} {:record-type :atom} {:functor "f", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Index", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "Arg", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}, {:name "Class", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "NewTab", :record-type :var} {:record-type :number}, {:name "Index", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:arglist #{{:record-type :number} {:record-type :atom} {:functor "f", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Sense", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "Arg", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "NewTab", :record-type :var} {:record-type :number}, {:name "Index", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Arg2", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:arglist #{{:record-type :number} {:record-type :atom} {:functor "f", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Sense", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "Arg1", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Arg2", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:arglist #{{:record-type :number} {:record-type :atom} {:functor "f", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Index", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "Arg1", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "NewTab", :record-type :var} {:record-type :number}, {:name "Index", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Sym", :record-type :var} {:arglist #{{:record-type :number} {:record-type :atom} {:functor "f", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "NewTab", :record-type :var} {:record-type :number}, {:name "Index", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Sym", :record-type :var} {:arglist #{{:record-type :number} {:record-type :atom} {:functor "f", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "NewTab", :record-type :var} {:record-type :number}, {:name "Index", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Arg2", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:arglist #{{:record-type :number} {:record-type :atom} {:functor "f", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Index", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "Arg1", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C", :record-type :var} {:record-type :any}, {:name "_484", :record-type :var} {:record-type :any}, {:name "_454", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C3", :record-type :var} {:record-type :any}}
{{:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C", :record-type :var} {:record-type :any}, {:name "_442", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C3", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:record-type :any}}
{{:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C", :record-type :var} {:record-type :any}, {:name "_442", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C3", :record-type :var} {:record-type :any}}
{}
{{:name "H", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Res", :record-type :var} {:record-type :any}}
{{:name "Ass0", :record-type :var} {:record-type :any}, {:name "DB", :record-type :var} {:record-type :any}, {:name "Rep", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "Res", :record-type :var} {:record-type :any}, {:name "Ass1", :record-type :var} {:record-type :any}, {:name "Comm", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Y", :record-type :var} {:record-type :nonvar}}
{{:name "Y", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}}
{{:name "Y", :record-type :var} {:record-type :var}, {:name "C", :record-type :var} {:record-type :any}}
{{:name "Y", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}}
{{:name "Kind", :record-type :var} {:record-type :any}}
{{:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "_532", :record-type :var} {:record-type :any}, {:name "U", :record-type :var} {:record-type :any}, {:name "_562", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "_528", :record-type :var} {:record-type :any}}
{{:name "_406", :record-type :var} {:record-type :any}, {:name "_408", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}}
{{:name "_396", :record-type :var} {:record-type :any}}
{{:name "MoreCodes", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Code", :record-type :var} {:record-type :integer}, {:name "Stream", :record-type :var} {:record-type :ground}}
{{:name "C", :record-type :var} {:record-type :any}, {:name "LL", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :any}}
{{:name "AFN", :record-type :var} {:record-type :any}, {:name "AFND", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "G", :record-type :var} {:record-type :any}}
{{:name "G", :record-type :var} {:record-type :any}}
{{:name "T", :record-type :var} {:record-type :any}}
{{:name "H", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}}
{{:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "SortedConds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Dom", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Dom", :record-type :var} {:record-type :any}}
{{:name "D1", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "W", :record-type :var} {:record-type :any}, {:name "D2", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "W1", :record-type :var} {:record-type :any}, {:name "W2", :record-type :var} {:record-type :any}}
{{:name "Done", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C", :record-type :var} {:record-type :any}, {:name "R", :record-type :var} {:record-type :any}, {:name "NT", :record-type :var} {:record-type :any}, {:name "G", :record-type :var} {:record-type :any}, {:name "_528", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}}
{{:name "_396", :record-type :var} {:record-type :any}}
{{:name "R", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Y2", :record-type :var} {:record-type :integer}, {:name "Codes", :record-type :var} {:type {:record-type :integer}, :record-type :list}, {:name "Y4", :record-type :var} {:record-type :integer}, {:name "Last", :record-type :var} {:record-type :atom}, {:name "Year", :record-type :var} {:record-type :atom}, {:name "Y1", :record-type :var} {:record-type :integer}, {:name "NumberYear", :record-type :var} {:record-type :integer}, {:name "Y3", :record-type :var} {:record-type :integer}, {:name "NumberLast", :record-type :var} {:record-type :integer}}
{{:name "X", :record-type :var} {:record-type :any}}
{{:name "Body", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Head", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "ICS", :record-type :var} {:functor "ics", :arglist ({:type {:record-type :any}, :record-type :list} {:type {:record-type :any}, :record-type :list}), :record-type :compound}, {:name "Head1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "ICS1", :record-type :var} {:functor "ics", :arglist ({:type {:record-type :any}, :record-type :list} {:type {:record-type :any}, :record-type :list}), :record-type :compound}, {:name "Variables", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Body1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "K2", :record-type :var} {:record-type :any}, {:name "Y2", :record-type :var} {:record-type :any}, {:name "_730", :record-type :var} {:record-type :any}, {:name "X2", :record-type :var} {:record-type :any}, {:name "IDs", :record-type :var} {:record-type :any}, {:name "Bs", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_506", :record-type :var} {:record-type :any}, {:name "Y1", :record-type :var} {:record-type :any}, {:name "_476", :record-type :var} {:record-type :any}, {:name "Ana", :record-type :var} {:record-type :any}, {:name "K1", :record-type :var} {:record-type :any}, {:name "Score", :record-type :var} {:record-type :number}, {:name "Conds", :record-type :var} {:record-type :any}, {:name "Ant", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:record-type :any}, {:name "_538", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I2", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:record-type :any}, {:name "P", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Alfa", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}}
{{:name "P", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "AnaIndex", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C3", :record-type :var} {:record-type :any}, {:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "DRS", :record-type :var} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}, {:name "_700", :record-type :var} {:record-type :any}, {:name "D3", :record-type :var} {:record-type :any}, {:name "Ana", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Ant", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:record-type :any}, {:name "AntIndex", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:record-type :any}, {:name "R", :record-type :var} {:record-type :any}, {:name "P", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Alfa", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}}
{{:name "P", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "AnaIndex", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_828", :record-type :var} {:record-type :integer}, {:name "_830", :record-type :var} {:record-type :integer}, {:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "DRS", :record-type :var} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:type {:record-type :any}, :record-type :list}), :record-type :compound}, {:name "D3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Type", :record-type :var} {:record-type :atom}, {:name "D2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:record-type :any}, {:name "AntIndex", :record-type :var} {:record-type :any}}
{{:name "_858", :record-type :var} {:record-type :integer}, {:name "P", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "AnaIndex", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C3", :record-type :var} {:record-type :any}, {:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "DRS", :record-type :var} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}, {:name "D3", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :atom}, {:name "D2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_856", :record-type :var} {:record-type :integer}, {:name "AntIndex", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "_418", :record-type :var} {:record-type :any}, {:name "_420", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X1", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :nonvar}, {:name "T1", :record-type :var} {:record-type :nonvar}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "H1", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "T1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "_418", :record-type :var} {:record-type :any}, {:name "_420", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :ground}}
{{:name "X", :record-type :var} {:record-type :var}}
{{:name "Why", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "_404", :record-type :var} {:record-type :any}}
{{:name "_402", :record-type :var} {:record-type :any}, {:name "_404", :record-type :var} {:record-type :any}}
{{:name "_400", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_398", :record-type :var} {:record-type :any}}
{{:name "_402", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "Why", :record-type :var} {:record-type :any}}
{}
{{:name "_396", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "Why", :record-type :var} {:record-type :any}}
{{:name "Why", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "_404", :record-type :var} {:record-type :any}}
{{:name "Why", :record-type :var} {:record-type :any}, {:name "_402", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}}
{{:name "_394", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :any}}
{{:name "Conds", :record-type :var} {:record-type :any}, {:name "Formula", :record-type :var} {:record-type :any}, {:name "Drs2", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_446", :record-type :var} {:record-type :any}, {:name "Referents", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Formula", :record-type :var} {:record-type :any}, {:name "Drs", :record-type :var} {:record-type :any}}
{{:name "Drs2", :record-type :var} {:record-type :any}, {:name "Drs1", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "Sym1", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :nonvar}, {:name "Sense", :record-type :var} {:record-type :any}, {:name "Sym2", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Conds", :record-type :var} {:record-type :any}, {:name "Formula1", :record-type :var} {:record-type :any}, {:name "Drs2", :record-type :var} {:record-type :any}, {:name "Formula2", :record-type :var} {:record-type :any}}
{{:name "Formula1", :record-type :var} {:record-type :any}, {:name "Drs2", :record-type :var} {:record-type :any}, {:name "Drs1", :record-type :var} {:record-type :any}, {:name "Formula2", :record-type :var} {:record-type :any}}
{{:name "D1", :record-type :var} {:arglist #{{:functor "time", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "date", :arglist ({:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "date", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "D2", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}}
{{:name "_412", :record-type :var} {:record-type :any}, {:name "Drs", :record-type :var} {:record-type :any}, {:name "Formula", :record-type :var} {:record-type :any}}
{{:name "N1", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_440", :record-type :var} {:record-type :any}, {:name "_442", :record-type :var} {:record-type :any}, {:name "N2", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Z", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "_436", :record-type :var} {:record-type :any}, {:name "Drs2", :record-type :var} {:record-type :any}, {:name "Drs1", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :any}, {:name "_440", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Sym1", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :nonvar}, {:name "Sense", :record-type :var} {:record-type :any}, {:name "Sym2", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}}
{{:name "_396", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}}
{{:name "C1", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Z", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "_448", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:record-type :any}}
{{:name "M", :record-type :var} {:record-type :number}, {:name "In", :record-type :var} {:record-type :any}, {:name "Out", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Code", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}}
{{:name "Tags", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Cons", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "XDRS", :record-type :var} {:functor "xdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:type {:record-type :any}, :record-type :list}), :record-type :compound}, {:name "Stream", :record-type :var} {:record-type :ground}}
{{:name "X", :record-type :var} {:record-type :var}, {:name "Subs", :record-type :var} {:record-type :any}, {:name "Z", :record-type :var} {:record-type :any}}
{{:name "Subs", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :nonvar}, {:name "F", :record-type :var} {:record-type :atomic}, {:name "Y", :record-type :var} {:record-type :nonvar}, {:name "N", :record-type :var} {:record-type :integer}}
{{:name "InFile", :record-type :var} {:arglist #{{:functor nil, :arglist (), :record-type :compound} {:record-type :atom} {:record-type :string}}, :record-type :one-of}, {:name "OutFile", :record-type :var} {:arglist #{{:functor nil, :arglist (), :record-type :compound} {:record-type :atom} {:record-type :string}}, :record-type :one-of}, {:name "History", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :ground}}
{}
{{:name "MoreOccurLists", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "MoreVariables", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_468", :record-type :var} {:record-type :any}, {:name "OccurList", :record-type :var} {:record-type :any}}
{{:name "Codes", :record-type :var} {:type {:record-type :integer}, :record-type :list}, {:name "Cat", :record-type :var} {:record-type :atom}, {:name "Term", :record-type :var} {:record-type :any}}
{{:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Ders", :record-type :var} {:record-type :any}}
{{:name "Tags", :record-type :var} {:record-type :any}, {:name "XDRS", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "CCG", :record-type :var} {:record-type :any}, {:name "DRS", :record-type :var} {:record-type :any}}
{{:name "XDRS", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "CCG", :record-type :var} {:record-type :any}}
{{:name "_420", :record-type :var} {:record-type :any}, {:name "_422", :record-type :var} {:record-type :any}}
{{:name "_412", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "_398", :record-type :var} {:record-type :any}}
{}
{{:name "_428", :record-type :var} {:record-type :any}, {:name "_430", :record-type :var} {:record-type :any}, {:name "MoreClauses", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Signatures", :record-type :var} {:record-type :any}}
{{:name "MoreSignatures", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Head", :record-type :var} {:record-type :nonvar}, {:name "_458", :record-type :var} {:record-type :any}, {:name "_434", :record-type :var} {:record-type :any}, {:name "MoreClauses", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Signature", :record-type :var} {:functor "/", :arglist ({:record-type :any} {:record-type :integer}), :record-type :compound}}
{{:name "MoreSignatures", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Head", :record-type :var} {:record-type :nonvar}, {:name "_458", :record-type :var} {:record-type :any}, {:name "_434", :record-type :var} {:record-type :any}, {:name "MoreClauses", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Signature", :record-type :var} {:functor "/", :arglist ({:record-type :any} {:record-type :integer}), :record-type :compound}}
{{:name "C", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :any}, {:name "_4086", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "T2", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}}
{{:name "T", :record-type :var} {:record-type :any}}
{}
{}
{{:name "Occur", :record-type :var} {:functor "/", :arglist ({:record-type :atom} {:record-type :integer}), :record-type :compound}, {:name "MoreOccurs", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Occur", :record-type :var} {:functor "/", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}, {:name "F", :record-type :var} {:record-type :any}, {:name "MoreOccurs", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_452", :record-type :var} {:record-type :any}}
{{:name "Atom", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{}
{{:name "_428", :record-type :var} {:record-type :any}, {:name "MoreOccurrences", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "I2", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I1", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{}
{{:name "P", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:record-type :any}, {:name "_4062", :record-type :var} {:record-type :any}, {:name "_4064", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}}
{{:name "V", :record-type :var} {:record-type :any}, {:name "_552", :record-type :var} {:record-type :any}}
{{:name "V", :record-type :var} {:record-type :any}, {:name "_552", :record-type :var} {:record-type :any}}
{{:name "_382", :record-type :var} {:record-type :any}}
{{:name "B", :record-type :var} {:record-type :any}}
{{:name "B", :record-type :var} {:record-type :any}}
{{:name "B", :record-type :var} {:record-type :any}}
{{:name "_Stack", :record-type :var} {:record-type :any}, {:name "In", :record-type :var} {:arglist #{{:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Out", :record-type :var} {:record-type :any}}
{{:name "_412", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "E", :record-type :var} {:record-type :any}}
{{:name "N1", :record-type :var} {:record-type :number}, {:name "R", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_410", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}}
{{:name "X", :record-type :var} {:record-type :any}}
{{:name "_382", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}}
{{:name "N1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "LX", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Context", :record-type :var} {:record-type :any}, {:name "ADRS", :record-type :var} {:record-type :any}, {:name "_4790", :record-type :var} {:record-type :any}}
{{:name "Co1", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Co2", :record-type :var} {:record-type :number}}
{{:name "Ac0", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Res", :record-type :var} {:functor "alfa", :arglist ({:record-type :atom} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :any}), :record-type :compound}, {:name "R2", :record-type :var} {:record-type :any}, {:name "B3", :record-type :var} {:arglist #{{:functor "smerge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "R1", :record-type :var} {:record-type :any}, {:name "M1", :record-type :var} {:record-type :any}, {:name "Ac", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "A", :record-type :var} {:record-type :any}, {:name "Bi2", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "Bi1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Alfa", :record-type :var} {:record-type :any}}
{{:name "Bi1", :record-type :var} {:record-type :any}, {:name "D1", :record-type :var} {:arglist #{{:functor "smerge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "C", :record-type :var} {:record-type :any}, {:name "D2", :record-type :var} {:record-type :any}, {:name "Ac", :record-type :var} {:record-type :any}, {:name "Alfa", :record-type :var} {:record-type :any}, {:name "Bi2", :record-type :var} {:record-type :any}}
{{:name "Bi1", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Ac", :record-type :var} {:record-type :any}, {:name "Res", :record-type :var} {:record-type :any}, {:name "Alfa", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}, {:name "Bi2", :record-type :var} {:record-type :any}}
{{:name "K2", :record-type :var} {:record-type :any}, {:name "Res", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Ac", :record-type :var} {:record-type :any}, {:name "K1", :record-type :var} {:record-type :any}, {:name "Bi2", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "Bi1", :record-type :var} {:record-type :any}, {:name "Alfa", :record-type :var} {:record-type :any}}
{{:name "Bi1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "R", :record-type :var} {:record-type :any}, {:name "Ac", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "A", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:record-type :any}, {:name "Alfa", :record-type :var} {:record-type :any}, {:name "Bi2", :record-type :var} {:record-type :any}}
{{:name "Bi1", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Ac", :record-type :var} {:record-type :any}, {:name "Res", :record-type :var} {:record-type :any}, {:name "Alfa", :record-type :var} {:record-type :any}, {:name "Bi2", :record-type :var} {:record-type :any}}
{{:name "Bi1", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Ac", :record-type :var} {:record-type :any}, {:name "Res", :record-type :var} {:record-type :any}, {:name "Alfa", :record-type :var} {:record-type :any}, {:name "Bi2", :record-type :var} {:record-type :any}}
{{:name "Bi1", :record-type :var} {:record-type :any}, {:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B1", :record-type :var} {:record-type :any}, {:name "Ac", :record-type :var} {:record-type :any}, {:name "Res", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "Alfa", :record-type :var} {:record-type :any}, {:name "Bi2", :record-type :var} {:record-type :any}}
{{:name "Dom", :record-type :var} {:record-type :any}, {:name "Sub", :record-type :var} {:record-type :any}, {:name "ADRS", :record-type :var} {:record-type :any}}
{{:name "_410", :record-type :var} {:record-type :any}}
{{:name "N0", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "R", :record-type :var} {:record-type :any}, {:name "PP", :record-type :var} {:record-type :number}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "N", :record-type :var} {:record-type :number}, {:name "_456", :record-type :var} {:record-type :any}, {:name "Pr", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}}
{}
{{:name "Str", :record-type :var} {:record-type :any}, {:name "_484", :record-type :var} {:record-type :any}, {:name "Der", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "_480", :record-type :var} {:record-type :any}, {:name "_482", :record-type :var} {:record-type :any}}
{{:name "C1", :record-type :var} {:record-type :any}, {:name "R0", :record-type :var} {:record-type :any}, {:name "P0", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:record-type :any}, {:name "R1", :record-type :var} {:record-type :any}, {:name "C0", :record-type :var} {:record-type :any}, {:name "BT", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "_478", :record-type :var} {:record-type :any}}
{{:name "R", :record-type :var} {:record-type :any}, {:name "_484", :record-type :var} {:record-type :any}, {:name "_494", :record-type :var} {:record-type :any}, {:name "_492", :record-type :var} {:record-type :any}, {:name "_480", :record-type :var} {:record-type :any}, {:name "P", :record-type :var} {:record-type :any}, {:name "G", :record-type :var} {:record-type :any}, {:name "_488", :record-type :var} {:record-type :any}, {:name "_482", :record-type :var} {:record-type :any}}
{{:name "_444", :record-type :var} {:record-type :any}, {:name "Ass", :record-type :var} {:record-type :any}, {:name "_448", :record-type :var} {:record-type :any}}
{{:name "A0", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "A1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_484", :record-type :var} {:record-type :any}, {:name "_480", :record-type :var} {:record-type :any}, {:name "G", :record-type :var} {:record-type :any}}
{{:name "A2", :record-type :var} {:record-type :any}, {:name "RB", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:record-type :any}, {:name "A0", :record-type :var} {:record-type :any}, {:name "LT", :record-type :var} {:record-type :any}, {:name "BT", :record-type :var} {:record-type :any}, {:name "AT", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "WT", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N", :record-type :var} {:record-type :any}, {:name "_592", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "A0", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:record-type :any}, {:name "G", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}, {:name "WT", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}}
{{:name "_450", :record-type :var} {:record-type :any}, {:name "_448", :record-type :var} {:record-type :any}, {:name "_442", :record-type :var} {:record-type :any}, {:name "_446", :record-type :var} {:record-type :any}, {:name "_504", :record-type :var} {:record-type :any}, {:name "_452", :record-type :var} {:record-type :any}}
{{:name "A0", :record-type :var} {:record-type :any}, {:name "BagTrees", :record-type :var} {:functor "bag", :arglist ({:record-type :any} {:record-type :any} {:type {:record-type :any}, :record-type :list}), :record-type :compound}, {:name "A1", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:record-type :any}, {:name "WT", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}}
{{:name "_472", :record-type :var} {:record-type :any}, {:name "_474", :record-type :var} {:record-type :any}, {:name "_466", :record-type :var} {:record-type :any}, {:name "_624", :record-type :var} {:record-type :any}, {:name "_468", :record-type :var} {:record-type :any}, {:name "G", :record-type :var} {:record-type :any}, {:name "WT", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "A0", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "WT", :record-type :var} {:record-type :any}}
{{:name "_564", :record-type :var} {:record-type :any}, {:name "A0", :record-type :var} {:record-type :any}, {:name "_568", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "N1", :record-type :var} {:record-type :number}, {:name "A0", :record-type :var} {:record-type :any}, {:name "N0", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "A1", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "WT", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "BT", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "A0", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:functor "ground", :arglist ({:record-type :any}), :record-type :compound}, {:name "H", :record-type :var} {:arglist #{{:functor "=<", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "number", :arglist ({:record-type :any}), :record-type :compound} {:functor "is", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor ">=", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "=\\=", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "<", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor ">", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "_480", :record-type :var} {:record-type :any}, {:name "WT", :record-type :var} {:record-type :any}}
{{:name "A0", :record-type :var} {:record-type :any}, {:name "G", :record-type :var} {:record-type :any}, {:name "WT", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}}
{{:name "N1", :record-type :var} {:record-type :number}, {:name "A0", :record-type :var} {:record-type :any}, {:name "N0", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "A1", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "WT", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "BT", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Ans", :record-type :var} {:record-type :atom}, {:name "A0", :record-type :var} {:record-type :any}, {:name "_480", :record-type :var} {:record-type :any}, {:name "G", :record-type :var} {:record-type :any}, {:name "WT", :record-type :var} {:record-type :any}}
{}
{{:name "L2", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Ts", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "_396", :record-type :var} {:record-type :any}}
{{:name "N1", :record-type :var} {:record-type :number}, {:name "Xn", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :integer}, {:name "Term", :record-type :var} {:functor nil, :arglist (), :record-type :compound}}
{}
{}
{{:name "C", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "A", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "_450", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "_450", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{{:name "_450", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "_4614", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "_4614", :record-type :var} {:record-type :any}}
{{:name "_450", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "_450", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "_450", :record-type :var} {:record-type :any}}
{}
{}
{}
{{:name "_4614", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "_450", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "_450", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{{:name "_450", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{{:name "_4614", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "_450", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{{:name "_450", :record-type :var} {:record-type :any}}
{}
{}
{}
{{:name "_450", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{{:name "_450", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{{:name "_4614", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "_450", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "_4614", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "_450", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{{:name "_450", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "_450", :record-type :var} {:record-type :any}}
{{:name "_450", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "_450", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{{:name "_450", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{{:name "_450", :record-type :var} {:record-type :any}}
{{:name "_4614", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "_450", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "_450", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "_450", :record-type :var} {:record-type :any}}
{}
{}
{{:name "_4614", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "_450", :record-type :var} {:record-type :any}}
{}
{}
{}
{{:name "_450", :record-type :var} {:record-type :any}}
{}
{}
{{:name "_450", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "_4614", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "_482", :record-type :var} {:record-type :any}}
{{:name "_4614", :record-type :var} {:record-type :any}}
{}
{{:name "_450", :record-type :var} {:record-type :any}}
{{:name "_4614", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "E", :record-type :var} {:record-type :any}, {:name "NE", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N", :record-type :var} {:record-type :any}}
{{:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Cond1", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Cond2", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Cond1", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Cond2", :record-type :var} {:record-type :any}}
{{:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "B3", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B4", :record-type :var} {:record-type :any}}
{{:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "A", :record-type :var} {:record-type :any}, {:name "U", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "T", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "B3", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B4", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}}
{{:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "A", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "T", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "B3", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B4", :record-type :var} {:record-type :any}}
{{:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "A", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "S", :record-type :var} {:record-type :any}}
{}
{{:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "G", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}}
{{:name "BL", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "M", :record-type :var} {:record-type :any}, {:name "BL1", :record-type :var} {:record-type :number}, {:name "G", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:arglist #{{:functor nil, :arglist (), :record-type :compound} {:record-type :atom}}, :record-type :one-of}, {:name "CodeTail", :record-type :var} {:record-type :any}, {:name "Code", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tail", :record-type :var} {:record-type :any}}
{{:name "B", :record-type :var} {:record-type :any}}
{{:name "C1", :record-type :var} {:record-type :any}, {:name "D1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "_396", :record-type :var} {:record-type :any}}
{{:name "M", :record-type :var} {:record-type :number}, {:name "X", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}}
{{:name "Ns", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "M", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "M1", :record-type :var} {:record-type :number}, {:name "N", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}}
{{:name "N", :record-type :var} {:record-type :any}}
{{:name "Y2", :record-type :var} {:record-type :any}, {:name "X2", :record-type :var} {:record-type :any}, {:name "Y1", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}}
{{:name "_3974", :record-type :var} {:record-type :any}}
{{:name "_424", :record-type :var} {:record-type :any}, {:name "_476", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}}
{}
{{:name "V", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "L2", :record-type :var} {:record-type :any}, {:name "IDs", :record-type :var} {:record-type :any}, {:name "P", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_398", :record-type :var} {:record-type :any}, {:name "Pos", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Z", :record-type :var} {:record-type :any}, {:name "IDs", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "_432", :record-type :var} {:record-type :any}, {:name "Pos", :record-type :var} {:record-type :any}}
{{:name "_434", :record-type :var} {:record-type :any}, {:name "_430", :record-type :var} {:record-type :any}, {:name "_432", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :number}, {:name "IDs", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :number}, {:name "Pos", :record-type :var} {:record-type :any}}
{{:name "I", :record-type :var} {:record-type :any}, {:name "J", :record-type :var} {:record-type :any}}
{{:name "I2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "J2", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "J1", :record-type :var} {:record-type :any}}
{{:name "A1", :record-type :var} {:record-type :any}, {:name "A2", :record-type :var} {:record-type :any}, {:name "R1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "R2", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{}
{}
{{:name "_382", :record-type :var} {:record-type :any}}
{{:name "General", :record-type :var} {:record-type :any}, {:name "Specific", :record-type :var} {:record-type :any}}
{}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "ListOption", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Option", :record-type :var} {:record-type :any}, {:name "Value", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{{:name "A2", :record-type :var} {:record-type :any}, {:name "P", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:record-type :any}, {:name "W", :record-type :var} {:record-type :any}, {:name "CD1", :record-type :var} {:record-type :any}, {:name "A3", :record-type :var} {:record-type :any}, {:name "CD3", :record-type :var} {:record-type :any}, {:name "CD2", :record-type :var} {:record-type :any}, {:name "A4", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}}
{{:name "A2", :record-type :var} {:record-type :any}, {:name "P", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:record-type :any}, {:name "W", :record-type :var} {:record-type :any}, {:name "CD1", :record-type :var} {:record-type :any}, {:name "A3", :record-type :var} {:record-type :any}, {:name "CD3", :record-type :var} {:record-type :any}, {:name "CD2", :record-type :var} {:record-type :any}, {:name "A4", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}}
{{:name "W", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}, {:name "Context", :record-type :var} {:record-type :any}, {:name "CD2", :record-type :var} {:record-type :any}, {:name "B3", :record-type :var} {:arglist #{{:functor "drs", :arglist ({:record-type :any} {:type {:record-type :any}, :record-type :list}), :record-type :compound} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "E", :record-type :var} {:record-type :any}, {:name "CD1", :record-type :var} {:record-type :any}, {:name "P", :record-type :var} {:record-type :any}}
{{:name "A2", :record-type :var} {:record-type :any}, {:name "P", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:record-type :any}, {:name "W", :record-type :var} {:record-type :any}, {:name "CD1", :record-type :var} {:record-type :any}, {:name "A3", :record-type :var} {:record-type :any}, {:name "CD3", :record-type :var} {:record-type :any}, {:name "CD2", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}, {:name "A4", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}}
{}
{{:name "A", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "_412", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "R", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "A", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}}
{{:name "_628", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "_620", :record-type :var} {:record-type :any}, {:name "_622", :record-type :var} {:record-type :any}, {:name "_618", :record-type :var} {:record-type :any}, {:name "_624", :record-type :var} {:record-type :any}, {:name "J", :record-type :var} {:record-type :any}, {:name "_626", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:record-type :any}}
{{:name "E", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_410", :record-type :var} {:record-type :any}, {:name "_836", :record-type :var} {:record-type :any}, {:name "AC2", :record-type :var} {:record-type :any}, {:name "Par", :record-type :var} {:record-type :any}, {:name "Dom", :record-type :var} {:record-type :any}, {:name "Cond", :record-type :var} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}, {:name "NC", :record-type :var} {:record-type :any}, {:name "AI", :record-type :var} {:record-type :any}, {:name "Ind", :record-type :var} {:record-type :any}, {:name "_834", :record-type :var} {:record-type :any}, {:name "J1", :record-type :var} {:record-type :any}, {:name "AD2", :record-type :var} {:record-type :any}, {:name "J2", :record-type :var} {:record-type :any}, {:name "AC1", :record-type :var} {:record-type :any}, {:name "AD1", :record-type :var} {:record-type :any}}
{{:name "E", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "AC2", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Par", :record-type :var} {:record-type :any}, {:name "Dom", :record-type :var} {:record-type :any}, {:name "NC", :record-type :var} {:record-type :any}, {:name "AI", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Ind", :record-type :var} {:record-type :any}, {:name "J1", :record-type :var} {:record-type :any}, {:name "_412", :record-type :var} {:record-type :any}, {:name "AD2", :record-type :var} {:record-type :any}, {:name "J2", :record-type :var} {:record-type :any}, {:name "AC1", :record-type :var} {:record-type :any}, {:name "AD1", :record-type :var} {:record-type :any}}
{{:name "_792", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "AC2", :record-type :var} {:record-type :any}, {:name "Par", :record-type :var} {:record-type :any}, {:name "Dom", :record-type :var} {:record-type :any}, {:name "Cond", :record-type :var} {:functor "named", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}, {:name "_790", :record-type :var} {:record-type :any}, {:name "NC", :record-type :var} {:record-type :any}, {:name "AI", :record-type :var} {:record-type :any}, {:name "Ind", :record-type :var} {:record-type :any}, {:name "J1", :record-type :var} {:record-type :any}, {:name "AD2", :record-type :var} {:record-type :any}, {:name "J2", :record-type :var} {:record-type :any}, {:name "AC1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:record-type :any}, {:name "I2", :record-type :var} {:record-type :any}, {:name "_788", :record-type :var} {:record-type :any}, {:name "AD1", :record-type :var} {:record-type :any}, {:name "J3", :record-type :var} {:record-type :any}}
{{:name "_924", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "AC2", :record-type :var} {:record-type :any}, {:name "Par", :record-type :var} {:record-type :any}, {:name "PDrs", :record-type :var} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}, {:name "Dom", :record-type :var} {:record-type :any}, {:name "Cond", :record-type :var} {:functor "prop", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "PConds", :record-type :var} {:record-type :any}, {:name "NC", :record-type :var} {:record-type :any}, {:name "_918", :record-type :var} {:record-type :any}, {:name "AI", :record-type :var} {:record-type :any}, {:name "Ind", :record-type :var} {:record-type :any}, {:name "J1", :record-type :var} {:record-type :any}, {:name "AD2", :record-type :var} {:record-type :any}, {:name "J2", :record-type :var} {:record-type :any}, {:name "AC1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_1034", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:record-type :any}, {:name "I2", :record-type :var} {:record-type :any}, {:name "AD1", :record-type :var} {:record-type :any}, {:name "J3", :record-type :var} {:record-type :any}}
{{:name "E", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "AC2", :record-type :var} {:record-type :any}, {:name "Par", :record-type :var} {:record-type :any}, {:name "Dom", :record-type :var} {:record-type :any}, {:name "Cond", :record-type :var} {:functor "card", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}, {:name "NC", :record-type :var} {:record-type :any}, {:name "AI", :record-type :var} {:record-type :any}, {:name "Ind", :record-type :var} {:record-type :any}, {:name "J1", :record-type :var} {:record-type :any}, {:name "AD2", :record-type :var} {:record-type :any}, {:name "J2", :record-type :var} {:record-type :any}, {:name "AC1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:record-type :any}, {:name "_778", :record-type :var} {:record-type :any}, {:name "I2", :record-type :var} {:record-type :any}, {:name "_776", :record-type :var} {:record-type :any}, {:name "AD1", :record-type :var} {:record-type :any}, {:name "J3", :record-type :var} {:record-type :any}}
{{:name "_792", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "AC2", :record-type :var} {:record-type :any}, {:name "Par", :record-type :var} {:record-type :any}, {:name "Dom", :record-type :var} {:record-type :any}, {:name "Cond", :record-type :var} {:functor "pred", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}, {:name "_790", :record-type :var} {:record-type :any}, {:name "NC", :record-type :var} {:record-type :any}, {:name "AI", :record-type :var} {:record-type :any}, {:name "Ind", :record-type :var} {:record-type :any}, {:name "J1", :record-type :var} {:record-type :any}, {:name "AD2", :record-type :var} {:record-type :any}, {:name "J2", :record-type :var} {:record-type :any}, {:name "AC1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:record-type :any}, {:name "I2", :record-type :var} {:record-type :any}, {:name "_788", :record-type :var} {:record-type :any}, {:name "AD1", :record-type :var} {:record-type :any}, {:name "J3", :record-type :var} {:record-type :any}}
{{:name "AC3", :record-type :var} {:record-type :any}, {:name "_792", :record-type :var} {:record-type :any}, {:name "_1072", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "_1316", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "_1064", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "AC2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Par", :record-type :var} {:record-type :any}, {:name "V", :record-type :var} {:record-type :any}, {:name "_970", :record-type :var} {:record-type :any}, {:name "Dom", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Cond", :record-type :var} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}, {:name "U", :record-type :var} {:record-type :any}, {:name "_1066", :record-type :var} {:record-type :any}, {:name "_Rel", :record-type :var} {:record-type :any}, {:name "_1308", :record-type :var} {:record-type :any}, {:name "NotCopied", :record-type :var} {:record-type :any}, {:name "AI", :record-type :var} {:record-type :any}, {:name "SortedConds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Ind", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "J1", :record-type :var} {:record-type :any}, {:name "AD2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "J2", :record-type :var} {:record-type :any}, {:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "AC1", :record-type :var} {:record-type :any}, {:name "AD3", :record-type :var} {:record-type :any}, {:name "_1310", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I2", :record-type :var} {:record-type :any}, {:name "AD1", :record-type :var} {:record-type :any}, {:name "J4", :record-type :var} {:record-type :any}, {:name "J3", :record-type :var} {:record-type :any}}
{{:name "_792", :record-type :var} {:record-type :any}, {:name "J", :record-type :var} {:record-type :any}, {:name "_442", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_Ind", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}, {:name "_E", :record-type :var} {:record-type :any}, {:name "_Dom", :record-type :var} {:record-type :any}, {:name "Cond", :record-type :var} {:functor "pred", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :any}), :record-type :compound}, {:name "_786", :record-type :var} {:record-type :any}, {:name "Pred", :record-type :var} {:record-type :any}, {:name "_AI", :record-type :var} {:record-type :any}, {:name "_Par", :record-type :var} {:record-type :any}, {:name "AC", :record-type :var} {:record-type :any}, {:name "_NotCopied", :record-type :var} {:record-type :any}, {:name "AD", :record-type :var} {:record-type :any}}
{{:name "_792", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "AC2", :record-type :var} {:record-type :any}, {:name "Par", :record-type :var} {:record-type :any}, {:name "_1124", :record-type :var} {:record-type :any}, {:name "Dom", :record-type :var} {:record-type :any}, {:name "Cond", :record-type :var} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}, {:name "U", :record-type :var} {:record-type :any}, {:name "_790", :record-type :var} {:record-type :any}, {:name "NC", :record-type :var} {:record-type :any}, {:name "_1128", :record-type :var} {:record-type :any}, {:name "AI", :record-type :var} {:record-type :any}, {:name "Rel", :record-type :var} {:record-type :any}, {:name "Ind", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "J1", :record-type :var} {:record-type :any}, {:name "AD2", :record-type :var} {:record-type :any}, {:name "J2", :record-type :var} {:record-type :any}, {:name "AC1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I2", :record-type :var} {:record-type :any}, {:name "_984", :record-type :var} {:record-type :any}, {:name "AD1", :record-type :var} {:record-type :any}, {:name "J3", :record-type :var} {:record-type :any}, {:name "I3", :record-type :var} {:record-type :any}}
{{:name "Y", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "AC2", :record-type :var} {:record-type :any}, {:name "Par", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Dom", :record-type :var} {:record-type :any}, {:name "Cond", :record-type :var} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}, {:name "NC", :record-type :var} {:record-type :any}, {:name "AI", :record-type :var} {:record-type :any}, {:name "Ind", :record-type :var} {:record-type :any}, {:name "J1", :record-type :var} {:record-type :any}, {:name "AD2", :record-type :var} {:record-type :any}, {:name "J2", :record-type :var} {:record-type :any}, {:name "AC1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_840", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:record-type :any}, {:name "I2", :record-type :var} {:record-type :any}, {:name "_838", :record-type :var} {:record-type :any}, {:name "Z", :record-type :var} {:record-type :any}, {:name "AD1", :record-type :var} {:record-type :any}, {:name "J3", :record-type :var} {:record-type :any}}
{{:name "E", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "AC2", :record-type :var} {:record-type :any}, {:name "Par", :record-type :var} {:record-type :any}, {:name "Dom", :record-type :var} {:record-type :any}, {:name "Cond", :record-type :var} {:functor "timex", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}, {:name "NC", :record-type :var} {:record-type :any}, {:name "AI", :record-type :var} {:record-type :any}, {:name "Ind", :record-type :var} {:record-type :any}, {:name "J1", :record-type :var} {:record-type :any}, {:name "AD2", :record-type :var} {:record-type :any}, {:name "J2", :record-type :var} {:record-type :any}, {:name "AC1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:record-type :any}, {:name "_764", :record-type :var} {:record-type :any}, {:name "I2", :record-type :var} {:record-type :any}, {:name "AD1", :record-type :var} {:record-type :any}, {:name "J3", :record-type :var} {:record-type :any}}
{{:name "J", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Par", :record-type :var} {:record-type :any}, {:name "Dom", :record-type :var} {:record-type :any}, {:name "NotCopied", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "AI", :record-type :var} {:record-type :any}, {:name "Ind", :record-type :var} {:record-type :any}, {:name "AC", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "AD", :record-type :var} {:record-type :any}}
{{:name "_792", :record-type :var} {:record-type :any}, {:name "J", :record-type :var} {:record-type :any}, {:name "_442", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_Ind", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}, {:name "_E", :record-type :var} {:record-type :any}, {:name "_Dom", :record-type :var} {:record-type :any}, {:name "Cond", :record-type :var} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}, {:name "_786", :record-type :var} {:record-type :any}, {:name "Rel", :record-type :var} {:record-type :any}, {:name "_AI", :record-type :var} {:record-type :any}, {:name "_Par", :record-type :var} {:record-type :any}, {:name "AC", :record-type :var} {:record-type :any}, {:name "_788", :record-type :var} {:record-type :any}, {:name "_NotCopied", :record-type :var} {:record-type :any}, {:name "AD", :record-type :var} {:record-type :any}}
{{:name "Y", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "AC2", :record-type :var} {:record-type :any}, {:name "Par", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Dom", :record-type :var} {:record-type :any}, {:name "Cond", :record-type :var} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}, {:name "NC", :record-type :var} {:record-type :any}, {:name "AI", :record-type :var} {:record-type :any}, {:name "Ind", :record-type :var} {:record-type :any}, {:name "J1", :record-type :var} {:record-type :any}, {:name "AD2", :record-type :var} {:record-type :any}, {:name "J2", :record-type :var} {:record-type :any}, {:name "AC1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_840", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:record-type :any}, {:name "I2", :record-type :var} {:record-type :any}, {:name "_838", :record-type :var} {:record-type :any}, {:name "Z", :record-type :var} {:record-type :any}, {:name "AD1", :record-type :var} {:record-type :any}, {:name "J3", :record-type :var} {:record-type :any}}
{{:name "Terms", :record-type :var} {:record-type :any}, {:name "Names", :record-type :var} {:type {:functor "=", :arglist ({:arglist #{{:record-type :atom} {:record-type :var}}, :record-type :one-of} {:record-type :any}), :record-type :compound}, :record-type :list}, {:name "Term", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :ground}}
{{:name "_3986", :record-type :var} {:record-type :any}, {:name "_3988", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "_4036", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{}
{{:name "L2", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :nonvar}, {:name "T", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "T1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "T2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "H", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:record-type :any}}
{}
{{:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Label", :record-type :var} {:record-type :any}, {:name "Cond", :record-type :var} {:record-type :any}, {:name "_422", :record-type :var} {:record-type :any}}
{{:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_410", :record-type :var} {:record-type :any}, {:name "Cond", :record-type :var} {:record-type :any}}
{{:name "Tags", :record-type :var} {:record-type :any}, {:name "_1144", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "IDs", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L", :record-type :var} {:record-type :any}, {:name "_1090", :record-type :var} {:record-type :any}, {:name "P", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "_394", :record-type :var} {:record-type :any}, {:name "_396", :record-type :var} {:record-type :any}}
{{:name "_412", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}}
{{:name "_408", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}}
{{:name "Line", :record-type :var} {:type {:record-type :integer}, :record-type :list}, {:name "L", :record-type :var} {:record-type :atom}, {:name "Rest", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "LeftMargin", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :ground}}
{{:name "_420", :record-type :var} {:record-type :any}, {:name "_422", :record-type :var} {:record-type :any}}
{{:name "Js", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Old", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "W", :record-type :var} {:record-type :any}, {:name "Is", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Ws", :record-type :var} {:record-type :any}}
{{:name "Old", :record-type :var} {:record-type :any}, {:name "W", :record-type :var} {:record-type :any}, {:name "Is", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Ws", :record-type :var} {:record-type :any}, {:name "_398", :record-type :var} {:record-type :any}}
{{:name "Tok", :record-type :var} {:record-type :any}, {:name "Old", :record-type :var} {:record-type :any}, {:name "W", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_586", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Is", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Ws", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Hour", :record-type :var} {:record-type :atom}, {:name "GMT", :record-type :var} {:record-type :atom}, {:name "H2", :record-type :var} {:record-type :atom}, {:name "M2", :record-type :var} {:record-type :atom}, {:name "M1", :record-type :var} {:record-type :atom}, {:name "H1", :record-type :var} {:record-type :atom}, {:name "Minutes", :record-type :var} {:record-type :atom}}
{{:name "_4676", :record-type :var} {:record-type :any}, {:name "_4678", :record-type :var} {:record-type :any}}
{{:name "_408", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}}
{{:name "_464", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_468", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "_Index", :record-type :var} {:record-type :any}, {:name "NewTab", :record-type :var} {:record-type :number}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "_Index", :record-type :var} {:record-type :any}, {:name "NewTab", :record-type :var} {:record-type :number}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "_Index", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Y", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "_Index", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Y", :record-type :var} {:record-type :any}, {:name "_Type", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "B2", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "_Index", :record-type :var} {:record-type :any}, {:name "NewTab", :record-type :var} {:record-type :number}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Tab", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_398", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "_Index", :record-type :var} {:record-type :any}, {:name "NewTab", :record-type :var} {:record-type :number}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "_Index", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "_470", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Arg", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "_Index", :record-type :var} {:record-type :any}, {:name "NewTab", :record-type :var} {:record-type :number}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}}
{{:name "Arg2", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_Index", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Arg1", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Arg2", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_Index", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Arg1", :record-type :var} {:record-type :any}, {:name "_Sense", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "B2", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "_Index", :record-type :var} {:record-type :any}, {:name "NewTab", :record-type :var} {:record-type :number}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "_Index", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Y", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Arg2", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_Index", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Arg1", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "_Index", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Arg", :record-type :var} {:record-type :any}, {:name "_Sense", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "_Type", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "_Sort", :record-type :var} {:record-type :any}}
{{:name "Sort", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "AxiomName", :record-type :var} {:arglist #{{:record-type :atom} {:record-type :integer}}, :record-type :one-of}, {:name "T", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "_2464", :record-type :var} {:record-type :any}, {:name "_2460", :record-type :var} {:record-type :any}, {:name "_2458", :record-type :var} {:record-type :any}, {:name "_2462", :record-type :var} {:record-type :any}}
{{:name "Options", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Command", :record-type :var} {:record-type :any}, {:name "_2460", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "_424", :record-type :var} {:record-type :any}, {:name "_420", :record-type :var} {:record-type :any}, {:name "_418", :record-type :var} {:record-type :any}, {:name "_422", :record-type :var} {:record-type :any}}
{{:name "_424", :record-type :var} {:record-type :any}, {:name "_420", :record-type :var} {:record-type :any}, {:name "_418", :record-type :var} {:record-type :any}, {:name "Semantics", :record-type :var} {:record-type :any}, {:name "Format", :record-type :var} {:record-type :any}, {:name "_422", :record-type :var} {:record-type :any}}
{{:name "_424", :record-type :var} {:record-type :any}, {:name "_420", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :ground}, {:name "_422", :record-type :var} {:record-type :any}}
{{:name "Options", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Command", :record-type :var} {:record-type :any}, {:name "_2460", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "_424", :record-type :var} {:record-type :any}, {:name "Version", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "_422", :record-type :var} {:record-type :any}}
{{:name "_420", :record-type :var} {:record-type :any}, {:name "Variables", :record-type :var} {:record-type :any}}
{{:name "IntVariables", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "DisjunctNumber", :record-type :var} {:record-type :any}, {:name "OldVariables", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "NewVariables", :record-type :var} {:record-type :any}, {:name "ConjunctVariables", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "MoreConjuncts", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Conjunct", :record-type :var} {:record-type :nonvar}}
{{:name "_424", :record-type :var} {:record-type :any}, {:name "_420", :record-type :var} {:record-type :any}, {:name "_422", :record-type :var} {:record-type :any}}
{{:name "_424", :record-type :var} {:record-type :any}, {:name "_420", :record-type :var} {:record-type :any}, {:name "_422", :record-type :var} {:record-type :any}}
{{:name "Ass", :record-type :var} {:record-type :any}, {:name "Res", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}}
{{:name "Ass", :record-type :var} {:record-type :any}, {:name "Rep", :record-type :var} {:record-type :any}, {:name "Res", :record-type :var} {:arglist #{{:functor "&", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "if", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bag", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Q", :record-type :var} {:record-type :any}}
{{:name "_424", :record-type :var} {:record-type :any}, {:name "_420", :record-type :var} {:record-type :any}, {:name "_422", :record-type :var} {:record-type :any}}
{{:name "Ass", :record-type :var} {:record-type :any}, {:name "Res", :record-type :var} {:record-type :any}, {:name "Comm", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}}
{{:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "S2", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "S1", :record-type :var} {:record-type :any}}
{{:name "_412", :record-type :var} {:record-type :any}, {:name "OccurList", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "_412", :record-type :var} {:record-type :any}, {:name "Quantification", :record-type :var} {:record-type :atom}, {:name "OccurList", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "_412", :record-type :var} {:record-type :any}, {:name "OccurList", :record-type :var} {:record-type :any}, {:name "Quantification", :record-type :var} {:record-type :atom}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "K", :record-type :var} {:record-type :integer}, {:name "V", :record-type :var} {:record-type :any}, {:name "List", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N", :record-type :var} {:record-type :any}}
{{:name "DRS2", :record-type :var} {:record-type :any}, {:name "Tags", :record-type :var} {:record-type :any}, {:name "DRS1", :record-type :var} {:record-type :any}}
{{:name "DRS2", :record-type :var} {:record-type :any}, {:name "DRS1", :record-type :var} {:record-type :any}}
{{:name "DRS", :record-type :var} {:record-type :any}}
{{:name "_4014", :record-type :var} {:record-type :any}, {:name "_4012", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Yn", :record-type :var} {:record-type :any}, {:name "Bn", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:functor nil, :arglist (), :record-type :compound}, {:name "Xn", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:functor nil, :arglist (), :record-type :compound}, {:name "N", :record-type :var} {:record-type :integer}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "_532", :record-type :var} {:record-type :any}, {:name "U", :record-type :var} {:record-type :any}, {:name "_562", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "_528", :record-type :var} {:record-type :any}}
{{:name "_406", :record-type :var} {:record-type :any}, {:name "_408", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}}
{}
{{:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}}
{{:name "N1", :record-type :var} {:record-type :integer}, {:name "Left", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Number", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Right", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Result", :record-type :var} {:record-type :any}, {:name "N2", :record-type :var} {:record-type :integer}, {:name "N", :record-type :var} {:record-type :number}}
{{:name "L", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L", :record-type :var} {:record-type :any}}
{{:name "L2", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L3", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}}
{{:name "B1", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "L2", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "L3", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:record-type :any}}
{{:name "L3", :record-type :var} {:record-type :any}, {:name "K2", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "_828", :record-type :var} {:record-type :any}, {:name "O", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "K1", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B1", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "C", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_430", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:record-type :any}}
{{:name "L2", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_482", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_452", :record-type :var} {:record-type :any}}
{{:name "_424", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "L2", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "L3", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:record-type :any}}
{{:name "L2", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "O", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "K", :record-type :var} {:record-type :any}, {:name "L3", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}}
{{:name "L2", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}}
{{:name "New", :record-type :var} {:record-type :any}, {:name "Left", :record-type :var} {:record-type :any}, {:name "Right", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}}
{{:name "M", :record-type :var} {:record-type :number}, {:name "New", :record-type :var} {:record-type :any}, {:name "Left", :record-type :var} {:record-type :any}, {:name "Right", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}}
{{:name "T", :record-type :var} {:record-type :any}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I", :record-type :var} {:record-type :any}, {:name "St2", :record-type :var} {:record-type :any}, {:name "St3", :record-type :var} {:record-type :any}, {:name "U", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "St1", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:arglist #{{:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C", :record-type :var} {:record-type :any}, {:name "St2", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "St1", :record-type :var} {:record-type :any}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I", :record-type :var} {:record-type :any}, {:name "St2", :record-type :var} {:record-type :any}, {:name "St3", :record-type :var} {:record-type :any}, {:name "U", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "St1", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:arglist #{{:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}}
{{:name "St3", :record-type :var} {:record-type :any}, {:name "U2", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "St2", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:arglist #{{:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "U1", :record-type :var} {:record-type :any}, {:name "St4", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B1", :record-type :var} {:arglist #{{:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "St1", :record-type :var} {:record-type :any}}
{{:name "St3", :record-type :var} {:record-type :any}, {:name "U2", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "St2", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:arglist #{{:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "U1", :record-type :var} {:record-type :any}, {:name "V", :record-type :var} {:record-type :any}, {:name "St4", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B1", :record-type :var} {:arglist #{{:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "St1", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "St2", :record-type :var} {:record-type :any}, {:name "St3", :record-type :var} {:record-type :any}, {:name "U", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "St1", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:arglist #{{:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I", :record-type :var} {:record-type :any}, {:name "St2", :record-type :var} {:record-type :any}, {:name "St3", :record-type :var} {:record-type :any}, {:name "U", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "St1", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:arglist #{{:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}}
{{:name "St3", :record-type :var} {:record-type :any}, {:name "U2", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "St2", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:arglist #{{:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "U1", :record-type :var} {:record-type :any}, {:name "St4", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B1", :record-type :var} {:arglist #{{:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "St1", :record-type :var} {:record-type :any}}
{{:name "S", :record-type :var} {:record-type :any}}
{{:name "Option", :record-type :var} {:record-type :any}}
{}
{{:name "_408", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}}
{{:name "_450", :record-type :var} {:record-type :any}, {:name "_396", :record-type :var} {:record-type :any}, {:name "_394", :record-type :var} {:record-type :any}, {:name "_452", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "_404", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "_404", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "_402", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "_408", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}, {:name "_448", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "_408", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}}
{{:name "_402", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "_408", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:arglist #{{:functor "=<", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "number", :arglist ({:record-type :any}), :record-type :compound} {:functor "is", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor ">=", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "=\\=", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "<", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor ">", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "_410", :record-type :var} {:record-type :any}, {:name "_458", :record-type :var} {:functor "ground", :arglist ({:record-type :any}), :record-type :compound}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "_408", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}}
{{:name "E", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}, {:name "PoS", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "eq", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "F", :record-type :var} {:record-type :any}, {:name "St", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "_544", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Mood", :record-type :var} {:record-type :any}, {:name "Att1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att2", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "E", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "F", :record-type :var} {:record-type :any}, {:name "St", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "_544", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "B2", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "St", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "E", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "F", :record-type :var} {:record-type :any}, {:name "St", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "_544", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "B2", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "St", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Mood", :record-type :var} {:record-type :any}, {:name "Att1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att2", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "E", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}, {:name "PoS", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "eq", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "F", :record-type :var} {:record-type :any}, {:name "St", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "_544", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Mood", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "_430", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:functor "-", :arglist ({:type {:record-type :any}, :record-type :list} {:type {:record-type :any}, :record-type :list}), :record-type :compound}}
{{:name "Q", :record-type :var} {:record-type :any}, {:name "_446", :record-type :var} {:record-type :any}}
{{:name "_394", :record-type :var} {:record-type :any}}
{{:name "_424", :record-type :var} {:record-type :any}, {:name "H2", :record-type :var} {:record-type :any}, {:name "R", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "H", :record-type :var} {:record-type :any}}
{{:name "_394", :record-type :var} {:record-type :any}, {:name "_396", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "R", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_458", :record-type :var} {:record-type :any}, {:name "G", :record-type :var} {:record-type :any}}
{{:name "T", :record-type :var} {:record-type :any}}
{{:name "T", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:record-type :any}, {:name "Y1", :record-type :var} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}, {:name "X", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "Vars", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X1", :record-type :var} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "Body", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}, {:name "M", :record-type :var} {:record-type :number}, {:name "C", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "Vars", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Y", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}}
{{:name "_408", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :number}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "Pos", :record-type :var} {:record-type :number}}
{{:name "X", :record-type :var} {:record-type :number}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "Pos", :record-type :var} {:record-type :number}}
{{:name "_408", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}}
{{:name "Tab", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_398", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Tab", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_398", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Response", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "String", :record-type :var} {:record-type :any}, {:name "Info", :record-type :var} {:record-type :any}, {:name "_4048", :record-type :var} {:record-type :atom}, {:name "Code", :record-type :var} {:record-type :any}, {:name "Path", :record-type :var} {:record-type :atom}, {:name "Message", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}}
{{:name "File", :record-type :var} {:arglist #{{:functor nil, :arglist (), :record-type :compound} {:record-type :atom} {:record-type :string}}, :record-type :one-of}, {:name "String", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :ground}}
{{:name "_406", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:record-type :empty-list}}
{{:name "Min", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:record-type :any}}
{{:name "Min", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Term", :record-type :var} {:record-type :var}, {:name "_482", :record-type :var} {:record-type :any}}
{{:name "_442", :record-type :var} {:record-type :atomic}, {:name "N", :record-type :var} {:record-type :integer}, {:name "Term", :record-type :var} {:record-type :nonvar}}
{{:name "Comm", :record-type :var} {:record-type :atom}, {:name "Args", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "_4070", :record-type :var} {:record-type :nonvar}}
{{:name "_4170", :record-type :var} {:record-type :nonvar}, {:name "_4108", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}}
{{:name "L", :record-type :var} {:record-type :any}}
{{:name "L2", :record-type :var} {:record-type :any}, {:name "Accu", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Added", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:record-type :any}, {:name "Accu", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Added", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "_412", :record-type :var} {:record-type :any}, {:name "_520", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "_466", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "_412", :record-type :var} {:record-type :any}, {:name "_520", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "Z", :record-type :var} {:record-type :any}, {:name "_466", :record-type :var} {:record-type :any}, {:name "_574", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "_412", :record-type :var} {:record-type :any}, {:name "_520", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "_466", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Width", :record-type :var} {:record-type :any}, {:name "Bottom", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Rest1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Rest2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "New", :record-type :var} {:record-type :any}, {:name "Width", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Line", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Length", :record-type :var} {:record-type :number}}
{{:name "L", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "H", :record-type :var} {:record-type :any}, {:name "Z", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "X", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "H", :record-type :var} {:record-type :any}, {:name "Z", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "_394", :record-type :var} {:record-type :any}}
{{:name "Stream", :record-type :var} {:record-type :ground}, {:name "Atom", :record-type :var} {:record-type :any}}
{{:name "Atom", :record-type :var} {:record-type :any}, {:name "MoreAtoms", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :ground}}
{{:name "Stream", :record-type :var} {:record-type :ground}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "E", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "K", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "N", :record-type :var} {:record-type :number}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}}
{{:name "L2", :record-type :var} {:record-type :any}, {:name "Ac", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Bi", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Alfa", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "L0", :record-type :var} {:record-type :any}, {:name "Ac", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Bi", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Alfa", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "_412", :record-type :var} {:record-type :any}, {:name "D1", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "D2", :record-type :var} {:record-type :number}, {:name "X", :record-type :var} {:record-type :any}, {:name "_442", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "D1", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "D2", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D", :record-type :var} {:record-type :number}, {:name "_398", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}}
{{:name "Var", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}}
{{:name "Destination", :record-type :var} {:arglist #{{:functor nil, :arglist (), :record-type :compound} {:record-type :atom} {:record-type :string}}, :record-type :one-of}, {:name "Origin", :record-type :var} {:arglist #{{:functor nil, :arglist (), :record-type :compound} {:record-type :atom} {:record-type :string}}, :record-type :one-of}}
{{:name "Lines", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_4620", :record-type :var} {:record-type :any}, {:name "Reversed", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "CCG", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "CCG", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :ground}}
{{:name "Sem", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}, {:name "_486", :record-type :var} {:record-type :any}, {:name "Closed", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}, {:name "Closed", :record-type :var} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:record-type :any}, {:name "_396", :record-type :var} {:record-type :any}, {:name "Closed", :record-type :var} {:functor "app", :arglist ({:record-type :any} {:arglist #{{:functor "lam", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:record-type :empty-list}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor "lam", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}}, :record-type :one-of}), :record-type :compound}, {:name "CC", :record-type :var} {:arglist #{{:functor "lam", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:record-type :empty-list}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor "lam", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}}, :record-type :one-of}}
{{:name "Sem", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_868", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}, {:name "Closed", :record-type :var} {:functor "app", :arglist ({:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:record-type :empty-list}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor "lam", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "_838", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}, {:name "Closed", :record-type :var} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}, {:name "_504", :record-type :var} {:record-type :any}, {:name "Closed", :record-type :var} {:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}, {:name "_552", :record-type :var} {:record-type :any}, {:name "Closed", :record-type :var} {:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_790", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}, {:name "_820", :record-type :var} {:record-type :any}, {:name "Closed", :record-type :var} {:functor "app", :arglist ({:functor "app", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:record-type :empty-list}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor "lam", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "_408", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}}
{{:name "_420", :record-type :var} {:record-type :any}}
{{:name "Len", :record-type :var} {:record-type :integer}, {:name "L3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I", :record-type :var} {:record-type :any}, {:name "NextPos", :record-type :var} {:record-type :number}, {:name "OldPos", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "C1", :record-type :var} {:type {:record-type :atom}, :record-type :list}, {:name "NewPos", :record-type :var} {:record-type :number}, {:name "W2", :record-type :var} {:record-type :atom}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C2", :record-type :var} {:type {:record-type :atom}, :record-type :list}, {:name "_874", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "W1", :record-type :var} {:record-type :atom}}
{{:name "W", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I", :record-type :var} {:record-type :any}, {:name "P2", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:record-type :any}, {:name "L3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Pos", :record-type :var} {:record-type :any}}
{{:name "Len", :record-type :var} {:record-type :integer}, {:name "L3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I", :record-type :var} {:record-type :any}, {:name "W", :record-type :var} {:record-type :atom}, {:name "NextPos", :record-type :var} {:record-type :number}, {:name "OldPos", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "C1", :record-type :var} {:type {:record-type :integer}, :record-type :list}, {:name "NewPos", :record-type :var} {:record-type :number}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "_448", :record-type :var} {:record-type :any}, {:name "_446", :record-type :var} {:record-type :any}, {:name "OccurList", :record-type :var} {:record-type :any}}
{{:name "OldOccurList", :record-type :var} {:record-type :any}, {:name "Functor", :record-type :var} {:record-type :any}, {:name "IntOccurList", :record-type :var} {:record-type :any}, {:name "MoreNewArgs", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "NewOccurList", :record-type :var} {:record-type :any}, {:name "MoreArgs", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Arg", :record-type :var} {:record-type :any}, {:name "NewArg", :record-type :var} {:record-type :any}, {:name "Variables", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "_4204", :record-type :var} {:record-type :any}, {:name "Body", :record-type :var} {:record-type :any}, {:name "FileName", :record-type :var} {:arglist #{{:functor nil, :arglist (), :record-type :compound} {:record-type :atom} {:record-type :string}}, :record-type :one-of}, {:name "Head", :record-type :var} {:record-type :any}, {:name "FileString", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "ICList", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "XML", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :ground}}
{{:name "_Index", :record-type :var} {:record-type :any}, {:name "_Id", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "Ders", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Tags", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_484", :record-type :var} {:record-type :any}, {:name "XDRS", :record-type :var} {:functor "xdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Id", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "_396", :record-type :var} {:record-type :any}}
{{:name "Index", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "POS", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Index", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "NE", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Ass0", :record-type :var} {:record-type :any}, {:name "DB", :record-type :var} {:record-type :any}, {:name "Rep", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "Res", :record-type :var} {:record-type :any}, {:name "Ass1", :record-type :var} {:record-type :any}, {:name "Ass2", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "_540", :record-type :var} {:record-type :any}}
{{:name "Ass0", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}}
{{:name "Ass0", :record-type :var} {:record-type :any}, {:name "DB", :record-type :var} {:record-type :any}, {:name "Rep", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "_404", :record-type :var} {:record-type :any}, {:name "Ass1", :record-type :var} {:record-type :any}}
{{:name "Ass0", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:functor "ground", :arglist ({:record-type :any}), :record-type :compound}, {:name "A", :record-type :var} {:arglist #{{:functor "=<", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "number", :arglist ({:record-type :any}), :record-type :compound} {:functor "is", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor ">=", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "=\\=", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "<", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor ">", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "_432", :record-type :var} {:record-type :any}}
{{:name "Ass0", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "_482", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Ass0", :record-type :var} {:record-type :any}, {:name "DB", :record-type :var} {:record-type :any}, {:name "Rep", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "_538", :record-type :var} {:record-type :any}}
{{:name "Ass0", :record-type :var} {:record-type :any}, {:name "DB", :record-type :var} {:record-type :any}, {:name "Rep", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "Ass1", :record-type :var} {:record-type :any}}
{{:name "Ass0", :record-type :var} {:record-type :any}, {:name "DB", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Rep", :record-type :var} {:record-type :any}, {:name "Ass1", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Ass0", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "_482", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Ass0", :record-type :var} {:record-type :any}, {:name "_432", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}}
{{:name "Ass0", :record-type :var} {:record-type :any}, {:name "DB", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Q", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "Variables", :record-type :var} {:record-type :any}}
{{:name "IntVariables", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "OldVariables", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "NewVariables", :record-type :var} {:record-type :any}, {:name "ConjunctVariables", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "MoreConjuncts", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Conjunct", :record-type :var} {:record-type :nonvar}}
{{:name "Type", :record-type :var} {:record-type :atom}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Type", :record-type :var} {:record-type :atom}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Type", :record-type :var} {:record-type :atom}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Type", :record-type :var} {:record-type :atom}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Type", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Type", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Type", :record-type :var} {:record-type :atom}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Type", :record-type :var} {:record-type :atom}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Type", :record-type :var} {:record-type :atom}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Type", :record-type :var} {:record-type :atom}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Type", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Type", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Type", :record-type :var} {:record-type :atom}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Type", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Stream", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}}
{{:name "Type", :record-type :var} {:record-type :atom}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Stream", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}}
{{:name "Type", :record-type :var} {:record-type :atom}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Type", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Type", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Type", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Type", :record-type :var} {:record-type :atom}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Type", :record-type :var} {:record-type :atom}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Type", :record-type :var} {:record-type :atom}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "T", :record-type :var} {:record-type :any}}
{{:name "_396", :record-type :var} {:record-type :any}}
{{:name "Index", :record-type :var} {:record-type :any}, {:name "Word1", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Word", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "MaxLeft", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "New", :record-type :var} {:record-type :any}, {:name "Left", :record-type :var} {:record-type :any}, {:name "Right", :record-type :var} {:record-type :any}, {:name "Max", :record-type :var} {:record-type :number}, {:name "SpaceLeft", :record-type :var} {:record-type :atom}, {:name "SpaceRight", :record-type :var} {:record-type :atom}, {:name "MaxRight", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}}
{}
{{:name "L2", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Number", :record-type :var} {:record-type :number}, {:name "Sense", :record-type :var} {:arglist ({:functor ":", :arglist ({:record-type :atom} {:record-type :number}), :record-type :compound}), :record-type :tuple}}
{{:name "_394", :record-type :var} {:record-type :any}, {:name "Sense", :record-type :var} {:record-type :empty-list}}
{{:name "Tuples5", :record-type :var} {:record-type :any}, {:name "T3", :record-type :var} {:functor "tuple", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:functor ":-", :arglist ({:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :integer}), :record-type :compound} {:record-type :any}), :record-type :compound}, {:name "Y", :record-type :var} {:record-type :any}, {:name "L3", :record-type :var} {:record-type :any}, {:name "Tuples1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_472", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "Tuples4", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L2", :record-type :var} {:record-type :any}, {:name "T2", :record-type :var} {:functor "tuple", :arglist ({:record-type :any} {:functor ":-", :arglist ({:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :integer}), :record-type :compound} {:record-type :atom} {:record-type :any} {:record-type :any}), :record-type :compound}, {:name "_546", :record-type :var} {:record-type :any}, {:name "Role", :record-type :var} {:record-type :any}, {:name "T1", :record-type :var} {:functor "tuple", :arglist ({:record-type :any} {:functor ":-", :arglist ({:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :integer}), :record-type :compound} {:record-type :atom} {:record-type :any} {:record-type :any}), :record-type :compound}, {:name "_538", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:record-type :any}, {:name "I2", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "Tuples0", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tuples2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tuples3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I3", :record-type :var} {:record-type :any}}
{{:name "Tuples", :record-type :var} {:record-type :any}}
{}
{}
{{:name "X", :record-type :var} {:record-type :nonvar}, {:name "LX", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "R1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_460", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "R2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N", :record-type :var} {:record-type :number}}
{{:name "LCLP", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:functor "pending", :arglist ({:record-type :any}), :record-type :compound}, {:name "LX", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_442", :record-type :var} {:record-type :any}, {:name "XVAR", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "LCLP", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:functor "viol", :arglist ({:record-type :any}), :record-type :compound}, {:name "LX", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_442", :record-type :var} {:record-type :any}, {:name "XVAR", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "LCLP", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:functor "inconsistent", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}, {:name "LX", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_454", :record-type :var} {:record-type :any}, {:name "XVAR", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_456", :record-type :var} {:record-type :any}}
{{:name "LCLP", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:functor "gt_current_time", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}, {:name "LX", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_454", :record-type :var} {:record-type :any}, {:name "XVAR", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_456", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "LX", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "E", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "_402", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}}
{{:name "R", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "A", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "L", :record-type :var} {:functor nil, :arglist (), :record-type :compound}, {:name "K1", :record-type :var} {:record-type :number}, {:name "N", :record-type :var} {:record-type :integer}}
{{:name "T", :record-type :var} {:record-type :any}}
{{:name "I", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "W", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_588", :record-type :var} {:record-type :any}, {:name "_584", :record-type :var} {:record-type :any}, {:name "_586", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "_412", :record-type :var} {:record-type :any}, {:name "T2", :record-type :var} {:record-type :any}, {:name "T1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_582", :record-type :var} {:record-type :any}}
{{:name "Smaller", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :number}, {:name "W", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_886", :record-type :var} {:record-type :any}, {:name "Word", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "_888", :record-type :var} {:record-type :any}, {:name "T2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_470", :record-type :var} {:record-type :any}, {:name "T1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Distance", :record-type :var} {:record-type :number}, {:name "T", :record-type :var} {:functor "tuple", :arglist ({:arglist ({:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}), :record-type :tuple} {:record-type :any} {:record-type :atom} {:record-type :any} {:arglist ({:record-type :any}), :record-type :tuple}), :record-type :compound}}
{{:name "Indices", :record-type :var} {:record-type :any}, {:name "Index1", :record-type :var} {:record-type :number}, {:name "_1086", :record-type :var} {:record-type :any}, {:name "POS", :record-type :var} {:record-type :any}, {:name "_824", :record-type :var} {:record-type :any}, {:name "W", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_820", :record-type :var} {:record-type :any}, {:name "Word", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "_818", :record-type :var} {:record-type :any}, {:name "Tags", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index2", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "T2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "T1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "_1004", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:functor "tuple", :arglist ({:arglist ({:record-type :number}), :record-type :tuple} {:record-type :any} {:record-type :atom} {:record-type :any} {:arglist ({:record-type :any}), :record-type :tuple}), :record-type :compound}}
{{:name "Index1", :record-type :var} {:record-type :number}, {:name "POS", :record-type :var} {:record-type :any}, {:name "W", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Word", :record-type :var} {:record-type :any}, {:name "_1066", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "_786", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_852", :record-type :var} {:record-type :any}, {:name "_846", :record-type :var} {:record-type :any}, {:name "Tags", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index2", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "T2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "T1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "_848", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:functor "tuple", :arglist ({:arglist ({:record-type :number}), :record-type :tuple} {:record-type :any} {:record-type :atom} {:record-type :any} {:arglist ({:record-type :any}), :record-type :tuple}), :record-type :compound}, {:name "_990", :record-type :var} {:record-type :any}}
{{:name "W", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "T2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:record-type :any}, {:name "_470", :record-type :var} {:record-type :any}, {:name "Word", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:functor "tuple", :arglist ({:arglist ({:record-type :any}), :record-type :tuple} {:record-type :atom} {:record-type :atom} {:record-type :atom} {:arglist ({:record-type :any}), :record-type :tuple}), :record-type :compound}, {:name "T1", :record-type :var} {:record-type :any}}
{{:name "Codes", :record-type :var} {:type {:record-type :atom}, :record-type :list}, {:name "Pred", :record-type :var} {:record-type :atom}}
{}
{{:name "_398", :record-type :var} {:record-type :any}}
{{:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L2", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "RDRS", :record-type :var} {:record-type :any}, {:name "Links", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "B3", :record-type :var} {:record-type :any}, {:name "RDRS", :record-type :var} {:record-type :any}, {:name "Links", :record-type :var} {:record-type :any}}
{{:name "K2", :record-type :var} {:record-type :any}, {:name "_642", :record-type :var} {:record-type :any}, {:name "_516", :record-type :var} {:record-type :any}, {:name "_650", :record-type :var} {:record-type :any}, {:name "Rel", :record-type :var} {:record-type :any}, {:name "K1", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:functor "sdrs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}, {:name "Links", :record-type :var} {:record-type :any}, {:name "_644", :record-type :var} {:record-type :any}, {:name "SDRS", :record-type :var} {:record-type :any}}
{{:name "K2", :record-type :var} {:record-type :any}, {:name "_524", :record-type :var} {:record-type :any}, {:name "SDRS", :record-type :var} {:record-type :any}, {:name "_522", :record-type :var} {:record-type :any}, {:name "Links", :record-type :var} {:record-type :any}, {:name "K1", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "RDRS", :record-type :var} {:record-type :any}, {:name "Links", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "SDRS", :record-type :var} {:record-type :any}, {:name "Links", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C2", :record-type :var} {:record-type :any}, {:name "C3", :record-type :var} {:record-type :any}, {:name "Add", :record-type :var} {:record-type :any}}
{}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{}
{{:name "Atom", :record-type :var} {:record-type :any}, {:name "Left", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "EOL", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "NewCodes", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "TERM", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "REST", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{}
{{:name "Atom", :record-type :var} {:record-type :any}, {:name "EOL", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "NewCodes", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "NewCodes", :record-type :var} {:type {:record-type :integer}, :record-type :list}, {:name "Atom", :record-type :var} {:record-type :atom}}
{}
{{:name "L2", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L", :record-type :var} {:record-type :any}, {:name "V", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "V", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "X", :record-type :var} {:record-type :any}}
{{:name "L2", :record-type :var} {:record-type :any}, {:name "La", :record-type :var} {:record-type :any}, {:name "Lb", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "_490", :record-type :var} {:record-type :any}, {:name "_460", :record-type :var} {:record-type :any}}
{{:name "B", :record-type :var} {:record-type :any}}
{{:name "FileName", :record-type :var} {:arglist #{{:functor nil, :arglist (), :record-type :compound} {:record-type :atom} {:record-type :string}}, :record-type :one-of}, {:name "History", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :ground}}
{{:name "_448", :record-type :var} {:record-type :any}, {:name "_454", :record-type :var} {:record-type :any}, {:name "Dom", :record-type :var} {:record-type :any}, {:name "Cond", :record-type :var} {:arglist #{{:functor "eq", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "pred", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "timex", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "role", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "card", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "named", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "L2", :record-type :var} {:record-type :any}, {:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_546", :record-type :var} {:record-type :any}, {:name "Sub", :record-type :var} {:record-type :any}, {:name "_802", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:record-type :any}}
{{:name "C1", :record-type :var} {:record-type :any}, {:name "D1", :record-type :var} {:record-type :any}, {:name "D2", :record-type :var} {:record-type :any}, {:name "D3", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:record-type :any}, {:name "C3", :record-type :var} {:record-type :any}}
{{:name "V", :record-type :var} {:record-type :atom}}
{{:name "C", :record-type :var} {:record-type :any}, {:name "_532", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "A", :record-type :var} {:record-type :any}, {:name "_474", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "J", :record-type :var} {:record-type :number}, {:name "B", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{}
{{:name "T", :record-type :var} {:record-type :any}, {:name "T2", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :any}, {:name "Gap", :record-type :var} {:record-type :any}}
{{:name "_4016", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :any}, {:name "Gap", :record-type :var} {:record-type :any}}
{{:name "Conds", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :any}, {:name "Gap", :record-type :var} {:record-type :any}}
{{:name "Conds", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:arglist #{{:functor "some", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "and", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Dom", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Gap", :record-type :var} {:record-type :any}, {:name "_4020", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:arglist #{{:functor "smerge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "B2", :record-type :var} {:arglist #{{:functor "smerge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "F", :record-type :var} {:record-type :any}, {:name "Gap1", :record-type :var} {:record-type :any}, {:name "Gap2", :record-type :var} {:record-type :any}}
{{:name "L3", :record-type :var} {:record-type :any}, {:name "RDRS", :record-type :var} {:record-type :any}, {:name "DRS", :record-type :var} {:record-type :any}, {:name "Ac", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "ADRS", :record-type :var} {:arglist #{{:functor "smerge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "L2", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:record-type :any}, {:name "Bi", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Alfa", :record-type :var} {:record-type :any}}
{{:name "RDRS", :record-type :var} {:record-type :any}, {:name "DRS", :record-type :var} {:record-type :any}, {:name "L0", :record-type :var} {:record-type :any}}
{}
{{:name "G", :record-type :var} {:record-type :any}, {:name "_442", :record-type :var} {:record-type :any}, {:name "_444", :record-type :var} {:record-type :any}}
{{:name "D1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D2", :record-type :var} {:record-type :any}, {:name "Dom", :record-type :var} {:record-type :any}}
{{:name "Y", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Dom", :record-type :var} {:record-type :any}, {:name "_516", :record-type :var} {:record-type :any}, {:name "_480", :record-type :var} {:record-type :any}, {:name "_486", :record-type :var} {:record-type :any}, {:name "D2", :record-type :var} {:record-type :any}, {:name "D1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "_482", :record-type :var} {:record-type :any}}
{{:name "D1", :record-type :var} {:record-type :any}, {:name "D2", :record-type :var} {:record-type :any}, {:name "Dom", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_398", :record-type :var} {:record-type :any}}
{{:name "Y", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Dom", :record-type :var} {:record-type :any}, {:name "_516", :record-type :var} {:record-type :any}, {:name "_480", :record-type :var} {:record-type :any}, {:name "_486", :record-type :var} {:record-type :any}, {:name "D2", :record-type :var} {:record-type :any}, {:name "D1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "_482", :record-type :var} {:record-type :any}}
{{:name "Y", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Dom", :record-type :var} {:record-type :any}, {:name "_516", :record-type :var} {:record-type :any}, {:name "_480", :record-type :var} {:record-type :any}, {:name "_486", :record-type :var} {:record-type :any}, {:name "D2", :record-type :var} {:record-type :any}, {:name "D1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "_482", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{{:name "_458", :record-type :var} {:record-type :integer}, {:name "F", :record-type :var} {:record-type :atomic}, {:name "P", :record-type :var} {:record-type :nonvar}, {:name "N", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "R", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_448", :record-type :var} {:record-type :any}, {:name "CR", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "G", :record-type :var} {:record-type :any}, {:name "Pr", :record-type :var} {:record-type :any}}
{}
{{:name "_546", :record-type :var} {:record-type :any}, {:name "_518", :record-type :var} {:record-type :any}, {:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "AnaInd", :record-type :var} {:record-type :any}, {:name "AntInd", :record-type :var} {:record-type :any}}
{{:name "Args", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Comm", :record-type :var} {:record-type :any}}
{{:name "Args", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "_396", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:arglist #{{:functor "prop", :arglist ({:record-type :any} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}), :record-type :compound} {:functor "imp", :arglist ({:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}), :record-type :compound} {:functor "duplex", :arglist ({:record-type :any} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of} {:record-type :any} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}), :record-type :compound} {:functor "eq", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "pos", :arglist ({:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}), :record-type :compound} {:functor "pred", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "nec", :arglist ({:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}), :record-type :compound} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "not", :arglist ({:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}), :record-type :compound} {:functor "timex", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "or", :arglist ({:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}), :record-type :compound} {:functor "role", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "card", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "named", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "L", :record-type :var} {:record-type :any}, {:name "_452", :record-type :var} {:record-type :any}, {:name "_422", :record-type :var} {:record-type :any}}
{}
{{:name "Var", :record-type :var} {:record-type :any}, {:name "_400", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "MoreVars", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_398", :record-type :var} {:record-type :any}}
{{:name "L", :record-type :var} {:arglist #{{:record-type :empty-list} {:arglist ({:record-type :integer} {:record-type :integer}), :record-type :tuple}}, :record-type :one-of}, {:name "N", :record-type :var} {:record-type :integer}}
{{:name "Stream", :record-type :var} {:record-type :ground}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :ground}}
{{:name "_4016", :record-type :var} {:record-type :any}, {:name "_4326", :record-type :var} {:record-type :any}, {:name "_4214", :record-type :var} {:record-type :any}, {:name "_4142", :record-type :var} {:record-type :any}, {:name "_4320", :record-type :var} {:record-type :any}, {:name "_4144", :record-type :var} {:record-type :any}, {:name "_4018", :record-type :var} {:record-type :any}, {:name "_4074", :record-type :var} {:record-type :any}, {:name "_4322", :record-type :var} {:record-type :any}, {:name "_4324", :record-type :var} {:record-type :any}, {:name "_4318", :record-type :var} {:record-type :any}, {:name "_4212", :record-type :var} {:record-type :any}}
{{:name "_450", :record-type :var} {:record-type :any}, {:name "_444", :record-type :var} {:record-type :any}, {:name "_448", :record-type :var} {:record-type :any}, {:name "_446", :record-type :var} {:record-type :any}}
{{:name "_450", :record-type :var} {:record-type :any}, {:name "BL", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Rep", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "Comm", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}}
{{:name "_450", :record-type :var} {:record-type :any}, {:name "_444", :record-type :var} {:record-type :any}, {:name "_448", :record-type :var} {:record-type :any}, {:name "_446", :record-type :var} {:record-type :any}}
{{:name "BL", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Rep", :record-type :var} {:record-type :any}, {:name "Max", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}}
{{:name "BL", :record-type :var} {:record-type :any}, {:name "BLLen", :record-type :var} {:record-type :any}, {:name "Rep", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}}
{{:name "_450", :record-type :var} {:record-type :any}, {:name "_444", :record-type :var} {:record-type :any}, {:name "_448", :record-type :var} {:record-type :any}, {:name "_446", :record-type :var} {:record-type :any}, {:name "_452", :record-type :var} {:record-type :any}}
{{:name "_450", :record-type :var} {:record-type :any}, {:name "_444", :record-type :var} {:record-type :any}, {:name "_448", :record-type :var} {:record-type :any}, {:name "_446", :record-type :var} {:record-type :any}, {:name "_452", :record-type :var} {:record-type :any}}
{{:name "BL", :record-type :var} {:record-type :any}, {:name "BLLen", :record-type :var} {:record-type :any}, {:name "Rep", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :integer}, {:name "Q", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "V", :record-type :var} {:record-type :any}, {:name "Res", :record-type :var} {:record-type :any}}
{{:name "NewTab", :record-type :var} {:record-type :number}, {:name "K", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Words", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "NewTab", :record-type :var} {:record-type :number}, {:name "K", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Words", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Terms", :record-type :var} {:record-type :any}, {:name "FileName", :record-type :var} {:arglist #{{:functor nil, :arglist (), :record-type :compound} {:record-type :atom} {:record-type :string}}, :record-type :one-of}, {:name "Stream", :record-type :var} {:record-type :ground}}
{{:name "Conds", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Sym", :record-type :var} {:record-type :atom}, {:name "_532", :record-type :var} {:record-type :any}, {:name "U", :record-type :var} {:record-type :any}, {:name "_562", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "_528", :record-type :var} {:record-type :any}}
{{:name "_406", :record-type :var} {:record-type :any}, {:name "_408", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}}
{{:name "T", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "_4010", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "_4014", :record-type :var} {:record-type :any}, {:name "_4010", :record-type :var} {:record-type :any}, {:name "_4012", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "_4226", :record-type :var} {:record-type :any}, {:name "Tag", :record-type :var} {:record-type :any}, {:name "_4222", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :atom}, {:name "Type", :record-type :var} {:record-type :any}, {:name "Class", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{{:name "_418", :record-type :var} {:record-type :any}, {:name "_420", :record-type :var} {:record-type :any}, {:name "_422", :record-type :var} {:record-type :any}}
{}
{}
{}
{{:name "X", :record-type :var} {:record-type :any}}
{}
{}
{}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{}
{}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{}
{{:name "_4024", :record-type :var} {:record-type :any}}
{}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{}
{}
{{:name "_4024", :record-type :var} {:record-type :any}}
{}
{}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{}
{{:name "_4024", :record-type :var} {:record-type :any}}
{}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "_4024", :record-type :var} {:record-type :any}}
{{:name "Nr", :record-type :var} {:record-type :any}, {:name "Sentence", :record-type :var} {:record-type :any}, {:name "Correct", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "_462", :record-type :var} {:record-type :any}, {:name "_466", :record-type :var} {:record-type :any}, {:name "P", :record-type :var} {:record-type :any}}
{{:name "_I", :record-type :var} {:record-type :any}, {:name "IDs", :record-type :var} {:record-type :any}, {:name "P2", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Dep", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "P3", :record-type :var} {:record-type :any}, {:name "As", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}}
{{:name "_464", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "Dep", :record-type :var} {:record-type :any}, {:name "_494", :record-type :var} {:record-type :any}, {:name "P2", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:record-type :any}, {:name "_434", :record-type :var} {:record-type :any}, {:name "IDs", :record-type :var} {:record-type :any}, {:name "As", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "K2", :record-type :var} {:record-type :any}, {:name "IDs", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "P2", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:record-type :any}, {:name "Dep", :record-type :var} {:record-type :any}, {:name "As2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "K1", :record-type :var} {:record-type :any}, {:name "As1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I1", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "I2", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}}
{{:name "Tags", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "E1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "E2", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:record-type :any}, {:name "Tags", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "_408", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "_408", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:record-type :any}, {:name "_408", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Tags", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}}
{{:name "_408", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "_408", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:record-type :any}, {:name "Tags", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}}
{{:name "V", :record-type :var} {:record-type :atom}}
{{:name "V", :record-type :var} {:record-type :atom}, {:name "_7364", :record-type :var} {:record-type :atom}, {:name "_7368", :record-type :var} {:record-type :any}}
{{:name "_396", :record-type :var} {:record-type :any}}
{{:name "MoreEvents", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Event", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :ground}}
{{:name "_4016", :record-type :var} {:record-type :any}, {:name "LeftMargin", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Drs", :record-type :var} {:record-type :any}, {:name "_4054", :record-type :var} {:record-type :any}, {:name "Lines", :record-type :var} {:record-type :any}, {:name "_4196", :record-type :var} {:record-type :any}, {:name "LeftMargin", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :ground}}
{}
{{:name "N1", :record-type :var} {:record-type :number}, {:name "L", :record-type :var} {:record-type :empty-list}, {:name "D", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "T", :record-type :var} {:record-type :nonvar}, {:name "N", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}}
{{:name "H", :record-type :var} {:record-type :any}, {:name "HH", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "I2", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Min", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Difference", :record-type :var} {:record-type :number}, {:name "I1", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}}
{{:name "_406", :record-type :var} {:record-type :any}, {:name "_408", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}}
{{:name "_434", :record-type :var} {:record-type :any}, {:name "Substitutions", :record-type :var} {:record-type :any}, {:name "_432", :record-type :var} {:record-type :any}}
{{:name "Yn", :record-type :var} {:record-type :any}, {:name "N1", :record-type :var} {:record-type :number}, {:name "OldSubstitutions", :record-type :var} {:record-type :any}, {:name "IntSubstitutions", :record-type :var} {:record-type :any}, {:name "NewSubstitutions", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:functor nil, :arglist (), :record-type :compound}, {:name "Xn", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:functor nil, :arglist (), :record-type :compound}, {:name "N", :record-type :var} {:record-type :integer}}
{{:name "BL", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "BLLen", :record-type :var} {:record-type :any}, {:name "Rep", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "V", :record-type :var} {:record-type :any}, {:name "Comm", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}}
{{:name "L2", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:record-type :any}}
{{:name "L2", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:record-type :any}}
{{:name "L2", :record-type :var} {:record-type :any}, {:name "L3", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:record-type :any}}
{{:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "J", :record-type :var} {:record-type :any}}
{{:name "J", :record-type :var} {:record-type :any}, {:name "Sense1", :record-type :var} {:record-type :any}, {:name "Sym1", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "HI", :record-type :var} {:record-type :any}, {:name "New", :record-type :var} {:record-type :any}, {:name "Sym0", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "_988", :record-type :var} {:record-type :any}, {:name "_496", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_500", :record-type :var} {:record-type :any}, {:name "Sense2", :record-type :var} {:record-type :any}}
{{:name "I2", :record-type :var} {:record-type :any}, {:name "Rel", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:record-type :any}, {:name "Role", :record-type :var} {:record-type :any}, {:name "_Frame", :record-type :var} {:record-type :any}}
{{:name "J", :record-type :var} {:record-type :any}, {:name "Sense1", :record-type :var} {:record-type :any}, {:name "Sym1", :record-type :var} {:record-type :any}, {:name "_920", :record-type :var} {:record-type :any}, {:name "New1", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "Sym0", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}, {:name "_988", :record-type :var} {:record-type :any}, {:name "_496", :record-type :var} {:record-type :any}, {:name "Sense", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "New2", :record-type :var} {:record-type :any}, {:name "_500", :record-type :var} {:record-type :any}}
{{:name "J", :record-type :var} {:record-type :any}, {:name "Sense1", :record-type :var} {:record-type :any}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "Title", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "_846", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_778", :record-type :var} {:record-type :any}, {:name "Sense2", :record-type :var} {:record-type :any}}
{{:name "_768", :record-type :var} {:record-type :any}, {:name "New", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "J", :record-type :var} {:record-type :any}, {:name "_500", :record-type :var} {:record-type :any}, {:name "_496", :record-type :var} {:record-type :any}, {:name "Timex", :record-type :var} {:record-type :any}}
{{:name "J", :record-type :var} {:record-type :any}, {:name "DID", :record-type :var} {:record-type :any}, {:name "Month", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "Day", :record-type :var} {:record-type :any}, {:name "_570", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "MID", :record-type :var} {:record-type :any}, {:name "Year", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "YID", :record-type :var} {:record-type :any}}
{{:name "_686", :record-type :var} {:record-type :any}, {:name "I2", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:record-type :any}, {:name "Role", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "_Frame", :record-type :var} {:record-type :any}}
{{:name "_768", :record-type :var} {:record-type :any}, {:name "New", :record-type :var} {:record-type :any}, {:name "_498", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "J", :record-type :var} {:record-type :any}, {:name "_500", :record-type :var} {:record-type :any}, {:name "_496", :record-type :var} {:record-type :any}, {:name "Timex", :record-type :var} {:record-type :any}}
{{:name "J", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "_620", :record-type :var} {:record-type :any}, {:name "_892", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "_624", :record-type :var} {:record-type :any}, {:name "New", :record-type :var} {:record-type :any}, {:name "_496", :record-type :var} {:record-type :any}, {:name "Timex", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_500", :record-type :var} {:record-type :any}}
{{:name "_568", :record-type :var} {:record-type :any}, {:name "J", :record-type :var} {:record-type :any}, {:name "DID", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "Month", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:record-type :any}, {:name "_716", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "Day", :record-type :var} {:record-type :any}, {:name "_570", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "_862", :record-type :var} {:record-type :any}, {:name "_860", :record-type :var} {:record-type :any}, {:name "MID", :record-type :var} {:record-type :any}, {:name "Year", :record-type :var} {:record-type :any}, {:name "M", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "YID", :record-type :var} {:record-type :any}, {:name "_990", :record-type :var} {:record-type :any}}
{{:name "_546", :record-type :var} {:record-type :any}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Sense", :record-type :var} {:record-type :any}}
{{:name "Sym", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "Frame", :record-type :var} {:record-type :any}}
{{:name "Hour", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "HourID", :record-type :var} {:record-type :any}, {:name "_494", :record-type :var} {:record-type :any}, {:name "_504", :record-type :var} {:record-type :any}, {:name "_500", :record-type :var} {:record-type :any}}
{{:name "J", :record-type :var} {:record-type :any}, {:name "Sym1", :record-type :var} {:record-type :any}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "_672", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}, {:name "Sense", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Sym2", :record-type :var} {:record-type :any}}
{{:name "YearFormatted", :record-type :var} {:record-type :any}, {:name "Year", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_568", :record-type :var} {:record-type :any}, {:name "_570", :record-type :var} {:record-type :any}, {:name "J", :record-type :var} {:record-type :any}, {:name "AD", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Century", :record-type :var} {:record-type :any}, {:name "J", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "_656", :record-type :var} {:record-type :any}}
{{:name "Sym", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Sense", :record-type :var} {:record-type :any}}
{{:name "_568", :record-type :var} {:record-type :any}, {:name "J", :record-type :var} {:record-type :any}, {:name "_824", :record-type :var} {:record-type :any}, {:name "_872", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "_826", :record-type :var} {:record-type :any}, {:name "_570", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}}
{{:name "Num2", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Num1", :record-type :var} {:record-type :any}, {:name "J", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}}
{{:name "_702", :record-type :var} {:record-type :any}, {:name "J", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "Month", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:record-type :any}, {:name "_1016", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "_756", :record-type :var} {:record-type :any}, {:name "Day", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "_1386", :record-type :var} {:record-type :any}, {:name "Year", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}}
{{:name "Month", :record-type :var} {:record-type :any}, {:name "LastYear", :record-type :var} {:record-type :any}, {:name "CurrentYear", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Day", :record-type :var} {:record-type :any}}
{{:name "J", :record-type :var} {:record-type :any}, {:name "DID", :record-type :var} {:record-type :any}, {:name "Month", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "Day", :record-type :var} {:record-type :any}, {:name "_570", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "MID", :record-type :var} {:record-type :any}, {:name "Year", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "YID", :record-type :var} {:record-type :any}}
{{:name "Month", :record-type :var} {:record-type :any}, {:name "DID", :record-type :var} {:record-type :any}, {:name "MID", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "J", :record-type :var} {:record-type :any}, {:name "Day", :record-type :var} {:record-type :any}, {:name "_700", :record-type :var} {:record-type :any}, {:name "_702", :record-type :var} {:record-type :any}}
{{:name "Month", :record-type :var} {:record-type :any}, {:name "Year", :record-type :var} {:record-type :any}, {:name "MID", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_570", :record-type :var} {:record-type :any}, {:name "YID", :record-type :var} {:record-type :any}, {:name "J", :record-type :var} {:record-type :any}}
{{:name "YearFormatted", :record-type :var} {:record-type :any}, {:name "Year", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_570", :record-type :var} {:record-type :any}, {:name "J", :record-type :var} {:record-type :any}, {:name "AD", :record-type :var} {:record-type :any}}
{{:name "J", :record-type :var} {:record-type :any}, {:name "Sym1", :record-type :var} {:record-type :any}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "_548", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}, {:name "Sense", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Sym2", :record-type :var} {:record-type :any}}
{{:name "Month", :record-type :var} {:record-type :any}, {:name "MID", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_570", :record-type :var} {:record-type :any}}
{{:name "Sym", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Sense", :record-type :var} {:record-type :any}}
{{:name "Hour", :record-type :var} {:record-type :any}, {:name "MinID", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "HourID", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:record-type :any}, {:name "AMPM", :record-type :var} {:record-type :any}, {:name "J", :record-type :var} {:record-type :any}}
{{:name "YearFormatted", :record-type :var} {:record-type :any}, {:name "Year", :record-type :var} {:record-type :any}, {:name "BC", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "J", :record-type :var} {:record-type :any}, {:name "_702", :record-type :var} {:record-type :any}}
{{:name "Year", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "YID", :record-type :var} {:record-type :any}}
{{:name "I", :record-type :var} {:record-type :any}, {:name "_696", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_494", :record-type :var} {:record-type :any}, {:name "_698", :record-type :var} {:record-type :any}, {:name "Decade", :record-type :var} {:record-type :any}, {:name "_504", :record-type :var} {:record-type :any}, {:name "_500", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:record-type :any}}
{{:name "J", :record-type :var} {:record-type :any}, {:name "Sense1", :record-type :var} {:record-type :any}, {:name "Sym1", :record-type :var} {:record-type :any}, {:name "_920", :record-type :var} {:record-type :any}, {:name "New1", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "Sym0", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}, {:name "_988", :record-type :var} {:record-type :any}, {:name "_496", :record-type :var} {:record-type :any}, {:name "Sense", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "New2", :record-type :var} {:record-type :any}, {:name "_500", :record-type :var} {:record-type :any}}
{{:name "Month", :record-type :var} {:record-type :any}, {:name "DID", :record-type :var} {:record-type :any}, {:name "MID", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_568", :record-type :var} {:record-type :any}, {:name "_570", :record-type :var} {:record-type :any}, {:name "J", :record-type :var} {:record-type :any}, {:name "Day", :record-type :var} {:record-type :any}}
{{:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_568", :record-type :var} {:record-type :any}, {:name "_570", :record-type :var} {:record-type :any}, {:name "Decade", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:record-type :any}}
{{:name "Sym", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Sense", :record-type :var} {:record-type :any}}
{{:name "Month", :record-type :var} {:record-type :any}, {:name "DID", :record-type :var} {:record-type :any}, {:name "MID", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_570", :record-type :var} {:record-type :any}, {:name "J", :record-type :var} {:record-type :any}, {:name "Day", :record-type :var} {:record-type :any}}
{{:name "J", :record-type :var} {:record-type :any}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "_920", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "_620", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "_624", :record-type :var} {:record-type :any}, {:name "New", :record-type :var} {:record-type :any}, {:name "_988", :record-type :var} {:record-type :any}, {:name "_496", :record-type :var} {:record-type :any}, {:name "Sense", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_500", :record-type :var} {:record-type :any}}
{{:name "_518", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_844", :record-type :var} {:record-type :any}, {:name "J", :record-type :var} {:record-type :any}, {:name "_522", :record-type :var} {:record-type :any}, {:name "Collection", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "_668", :record-type :var} {:record-type :any}}
{{:name "Hour", :record-type :var} {:record-type :any}, {:name "Minute", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Time", :record-type :var} {:record-type :any}, {:name "J", :record-type :var} {:record-type :any}, {:name "_702", :record-type :var} {:record-type :any}}
{{:name "Month", :record-type :var} {:record-type :any}, {:name "MID", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_570", :record-type :var} {:record-type :any}}
{{:name "Num2", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Num1", :record-type :var} {:record-type :any}, {:name "J", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}}
{{:name "_546", :record-type :var} {:record-type :any}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Sense", :record-type :var} {:record-type :any}}
{{:name "Sym", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Sense", :record-type :var} {:record-type :any}}
{{:name "Sym", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Sense", :record-type :var} {:record-type :any}}
{{:name "J", :record-type :var} {:record-type :any}, {:name "Sense1", :record-type :var} {:record-type :any}, {:name "Sym1", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "New", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}, {:name "_796", :record-type :var} {:record-type :any}, {:name "_496", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_500", :record-type :var} {:record-type :any}}
{{:name "Hour", :record-type :var} {:record-type :any}, {:name "MinID", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "HourID", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "J", :record-type :var} {:record-type :any}, {:name "Minutes", :record-type :var} {:record-type :any}}
{{:name "J", :record-type :var} {:record-type :any}, {:name "DID", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "Month", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "Day", :record-type :var} {:record-type :any}, {:name "_570", :record-type :var} {:record-type :any}, {:name "MID", :record-type :var} {:record-type :any}, {:name "Sense", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}}
{{:name "YearFormatted", :record-type :var} {:record-type :any}, {:name "Year", :record-type :var} {:record-type :any}, {:name "BC", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "J", :record-type :var} {:record-type :any}, {:name "_700", :record-type :var} {:record-type :any}, {:name "_702", :record-type :var} {:record-type :any}}
{{:name "J", :record-type :var} {:record-type :any}, {:name "DID", :record-type :var} {:record-type :any}, {:name "Month", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "Day", :record-type :var} {:record-type :any}, {:name "_570", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "MID", :record-type :var} {:record-type :any}, {:name "Year", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "YID", :record-type :var} {:record-type :any}}
{{:name "J", :record-type :var} {:record-type :any}, {:name "Sym1", :record-type :var} {:record-type :any}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "_672", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}, {:name "Sense", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Sym2", :record-type :var} {:record-type :any}}
{{:name "Dim", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_570", :record-type :var} {:record-type :any}, {:name "Sense", :record-type :var} {:record-type :any}, {:name "Adj", :record-type :var} {:record-type :any}}
{{:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_570", :record-type :var} {:record-type :any}}
{{:name "Sym", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Sense", :record-type :var} {:record-type :any}, {:name "J", :record-type :var} {:record-type :any}, {:name "_500", :record-type :var} {:record-type :any}, {:name "_496", :record-type :var} {:record-type :any}, {:name "_796", :record-type :var} {:record-type :any}}
{{:name "_546", :record-type :var} {:record-type :any}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Sense", :record-type :var} {:record-type :any}}
{{:name "Sym", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Sense", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Century", :record-type :var} {:record-type :any}, {:name "_570", :record-type :var} {:record-type :any}, {:name "J", :record-type :var} {:record-type :any}, {:name "_716", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_570", :record-type :var} {:record-type :any}, {:name "J", :record-type :var} {:record-type :any}}
{{:name "_568", :record-type :var} {:record-type :any}, {:name "J", :record-type :var} {:record-type :any}, {:name "DID", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "Day", :record-type :var} {:record-type :any}, {:name "_570", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "MID", :record-type :var} {:record-type :any}, {:name "M", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "YID", :record-type :var} {:record-type :any}}
{{:name "Num2", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Num1", :record-type :var} {:record-type :any}, {:name "J", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}}
{{:name "YearFormatted", :record-type :var} {:record-type :any}, {:name "Year", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "J", :record-type :var} {:record-type :any}, {:name "_702", :record-type :var} {:record-type :any}, {:name "AD", :record-type :var} {:record-type :any}}
{{:name "Month", :record-type :var} {:record-type :any}, {:name "DID", :record-type :var} {:record-type :any}, {:name "MID", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "J", :record-type :var} {:record-type :any}, {:name "Day", :record-type :var} {:record-type :any}, {:name "_702", :record-type :var} {:record-type :any}}
{{:name "Sym", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Sense", :record-type :var} {:record-type :any}, {:name "J", :record-type :var} {:record-type :any}, {:name "_500", :record-type :var} {:record-type :any}, {:name "_496", :record-type :var} {:record-type :any}, {:name "_796", :record-type :var} {:record-type :any}}
{{:name "J", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "Num3", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}, {:name "Sense", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Num2", :record-type :var} {:record-type :any}, {:name "Num1", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_570", :record-type :var} {:record-type :any}, {:name "J", :record-type :var} {:record-type :any}}
{{:name "J", :record-type :var} {:record-type :any}, {:name "Sense1", :record-type :var} {:record-type :any}, {:name "Sym1", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "New", :record-type :var} {:record-type :any}, {:name "_796", :record-type :var} {:record-type :any}, {:name "_496", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_498", :record-type :var} {:record-type :any}, {:name "_500", :record-type :var} {:record-type :any}}
{{:name "Sym", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:record-type :any}, {:name "Role", :record-type :var} {:record-type :any}, {:name "_Frame", :record-type :var} {:record-type :any}}
{{:name "_520", :record-type :var} {:record-type :any}, {:name "Year", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "YID", :record-type :var} {:record-type :any}, {:name "J", :record-type :var} {:record-type :any}, {:name "_522", :record-type :var} {:record-type :any}, {:name "_516", :record-type :var} {:record-type :any}}
{{:name "YearFormatted", :record-type :var} {:record-type :any}, {:name "Year", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "J", :record-type :var} {:record-type :any}, {:name "_700", :record-type :var} {:record-type :any}, {:name "_702", :record-type :var} {:record-type :any}, {:name "AD", :record-type :var} {:record-type :any}}
{{:name "New", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Sym1", :record-type :var} {:record-type :any}, {:name "J", :record-type :var} {:record-type :any}, {:name "Sense1", :record-type :var} {:record-type :any}, {:name "_500", :record-type :var} {:record-type :any}, {:name "_496", :record-type :var} {:record-type :any}, {:name "_796", :record-type :var} {:record-type :any}}
{{:name "Sym", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Sense", :record-type :var} {:record-type :any}, {:name "J", :record-type :var} {:record-type :any}, {:name "_500", :record-type :var} {:record-type :any}, {:name "_496", :record-type :var} {:record-type :any}, {:name "_796", :record-type :var} {:record-type :any}}
{{:name "Month", :record-type :var} {:record-type :any}, {:name "CurrentYear", :record-type :var} {:record-type :any}, {:name "MI", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Day", :record-type :var} {:record-type :any}}
{{:name "Term", :record-type :var} {:record-type :any}, {:name "Copy", :record-type :var} {:record-type :any}}
{{:name "Drs", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:type {:record-type :any}, :record-type :list} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "sdrs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "lab", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "_442", :record-type :var} {:record-type :any}}
{{:name "Tree", :record-type :var} {:record-type :any}}
{{:name "Var", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}}
{{:name "_4344", :record-type :var} {:record-type :nonvar}, {:name "U", :record-type :var} {:record-type :any}, {:name "_4246", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}}
{{:name "_406", :record-type :var} {:record-type :any}}
{}
{}
{}
{{:name "_406", :record-type :var} {:record-type :any}}
{}
{{:name "Lemma2", :record-type :var} {:record-type :any}, {:name "Codes3", :record-type :var} {:record-type :any}, {:name "Codes2", :record-type :var} {:record-type :any}, {:name "Lemma1", :record-type :var} {:record-type :any}, {:name "Codes1", :record-type :var} {:record-type :any}}
{{:name "Lemma2", :record-type :var} {:record-type :any}, {:name "Codes3", :record-type :var} {:record-type :any}, {:name "Codes2", :record-type :var} {:record-type :any}, {:name "Lemma1", :record-type :var} {:record-type :any}, {:name "Codes1", :record-type :var} {:record-type :any}}
{{:name "Lemma2", :record-type :var} {:record-type :any}, {:name "Codes3", :record-type :var} {:record-type :any}, {:name "Codes2", :record-type :var} {:record-type :any}, {:name "Lemma1", :record-type :var} {:record-type :any}, {:name "Codes1", :record-type :var} {:record-type :any}}
{}
{}
{}
{{:name "Lemma2", :record-type :var} {:record-type :any}, {:name "Codes2", :record-type :var} {:record-type :any}, {:name "Lemma1", :record-type :var} {:record-type :any}, {:name "Codes1", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{{:name "Lemma2", :record-type :var} {:record-type :any}, {:name "Codes3", :record-type :var} {:record-type :any}, {:name "Codes2", :record-type :var} {:record-type :any}, {:name "Lemma1", :record-type :var} {:record-type :any}, {:name "Codes1", :record-type :var} {:record-type :any}}
{{:name "Lemma2", :record-type :var} {:record-type :any}, {:name "Codes2", :record-type :var} {:record-type :any}, {:name "Lemma1", :record-type :var} {:record-type :any}, {:name "Codes1", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{{:name "Lemma2", :record-type :var} {:record-type :any}, {:name "Codes3", :record-type :var} {:record-type :any}, {:name "Codes2", :record-type :var} {:record-type :any}, {:name "Lemma1", :record-type :var} {:record-type :any}, {:name "Codes1", :record-type :var} {:record-type :any}}
{{:name "Lemma2", :record-type :var} {:record-type :any}, {:name "Codes3", :record-type :var} {:record-type :any}, {:name "Codes2", :record-type :var} {:record-type :any}, {:name "Lemma1", :record-type :var} {:record-type :any}, {:name "Codes1", :record-type :var} {:record-type :any}}
{}
{{:name "Lemma2", :record-type :var} {:record-type :any}, {:name "Codes3", :record-type :var} {:record-type :any}, {:name "Codes2", :record-type :var} {:record-type :any}, {:name "Lemma1", :record-type :var} {:record-type :any}, {:name "Codes1", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "Lemma2", :record-type :var} {:record-type :any}, {:name "Codes2", :record-type :var} {:record-type :any}, {:name "Lemma1", :record-type :var} {:record-type :any}, {:name "Codes1", :record-type :var} {:record-type :any}}
{}
{}
{{:name "_406", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{{:name "Lemma2", :record-type :var} {:record-type :any}, {:name "Codes3", :record-type :var} {:record-type :any}, {:name "Codes2", :record-type :var} {:record-type :any}, {:name "Lemma1", :record-type :var} {:record-type :any}, {:name "Codes1", :record-type :var} {:record-type :any}}
{}
{}
{}
{{:name "Lemma2", :record-type :var} {:record-type :any}, {:name "Codes3", :record-type :var} {:record-type :any}, {:name "Codes2", :record-type :var} {:record-type :any}, {:name "Lemma1", :record-type :var} {:record-type :any}, {:name "Codes1", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{{:name "Lemma2", :record-type :var} {:record-type :any}, {:name "Codes3", :record-type :var} {:record-type :any}, {:name "Codes2", :record-type :var} {:record-type :any}, {:name "Lemma1", :record-type :var} {:record-type :any}, {:name "Codes1", :record-type :var} {:record-type :any}}
{{:name "Lemma2", :record-type :var} {:record-type :any}, {:name "Codes3", :record-type :var} {:record-type :any}, {:name "Codes2", :record-type :var} {:record-type :any}, {:name "Lemma1", :record-type :var} {:record-type :any}, {:name "Codes1", :record-type :var} {:record-type :any}}
{}
{}
{{:name "A2", :record-type :var} {:record-type :any}, {:name "Code", :record-type :var} {:type {:record-type :integer}, :record-type :list}, {:name "D", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:record-type :any}, {:name "N2", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "C1", :record-type :var} {:record-type :any}, {:name "Rest1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "T2", :record-type :var} {:record-type :any}, {:name "T1", :record-type :var} {:record-type :any}, {:name "D2", :record-type :var} {:record-type :any}, {:name "D1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Firsts", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Op", :record-type :var} {:record-type :atom}, {:name "Result", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "Rest2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Rest", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N1", :record-type :var} {:record-type :any}}
{{:name "Ass0", :record-type :var} {:record-type :any}, {:name "DB", :record-type :var} {:record-type :any}, {:name "Rep", :record-type :var} {:record-type :any}, {:name "Ass1", :record-type :var} {:record-type :any}, {:name "Comm", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "H", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "Y2", :record-type :var} {:record-type :any}, {:name "X2", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "Ty", :record-type :var} {:record-type :any}, {:name "Y1", :record-type :var} {:record-type :any}, {:name "Tx", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:record-type :any}}
{{:name "Y2", :record-type :var} {:record-type :any}, {:name "X2", :record-type :var} {:record-type :any}, {:name "Ty", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tx", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_Y1", :record-type :var} {:record-type :any}, {:name "_X1", :record-type :var} {:record-type :any}}
{{:name "_Tags", :record-type :var} {:record-type :any}, {:name "XDRS", :record-type :var} {:functor "xdrs", :arglist ({:record-type :any} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}), :record-type :compound}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "DRS", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "drs", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}}
{{:name "C", :record-type :var} {:record-type :integer}, {:name "Decade", :record-type :var} {:record-type :atom}, {:name "Date", :record-type :var} {:record-type :atom}}
{{:name "C", :record-type :var} {:record-type :integer}, {:name "A", :record-type :var} {:record-type :integer}, {:name "Decade", :record-type :var} {:record-type :atom}, {:name "Date", :record-type :var} {:record-type :atom}, {:name "B", :record-type :var} {:record-type :integer}}
{{:name "C", :record-type :var} {:record-type :integer}, {:name "A", :record-type :var} {:record-type :integer}, {:name "Decade", :record-type :var} {:record-type :atom}, {:name "Date", :record-type :var} {:record-type :atom}, {:name "B", :record-type :var} {:record-type :integer}}
{{:name "_444", :record-type :var} {:record-type :any}, {:name "_446", :record-type :var} {:record-type :any}}
{{:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D1", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "D2", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "D1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D2", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "D1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D2", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D1", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "D2", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "T", :record-type :var} {:record-type :any}}
{{:name "N1", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:arglist #{{:functor "&", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "if", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :atom}}, :record-type :one-of}, {:name "B2", :record-type :var} {:arglist #{{:functor "&", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "if", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :atom}}, :record-type :one-of}, {:name "_800", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "_404", :record-type :var} {:record-type :any}, {:name "_466", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Z", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}}
{{:name "_424", :record-type :var} {:record-type :any}, {:name "_420", :record-type :var} {:record-type :any}, {:name "_422", :record-type :var} {:record-type :any}}
{{:name "R", :record-type :var} {:record-type :empty-list}, {:name "K", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}}
{{:name "Numbers", :record-type :var} {:record-type :any}, {:name "List", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Id", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "_476", :record-type :var} {:record-type :any}, {:name "List", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Id", :record-type :var} {:record-type :any}, {:name "_478", :record-type :var} {:record-type :any}}
{{:name "_510", :record-type :var} {:record-type :any}, {:name "_436", :record-type :var} {:record-type :any}, {:name "_434", :record-type :var} {:record-type :any}, {:name "_512", :record-type :var} {:record-type :any}}
{{:name "_536", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_534", :record-type :var} {:record-type :any}, {:name "List", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Id", :record-type :var} {:record-type :any}}
{}
{{:name "C", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{{:name "_394", :record-type :var} {:record-type :any}}
{{:name "C1", :record-type :var} {:record-type :any}, {:name "E3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:record-type :any}, {:name "E1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "E2", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "I", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "E1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "E2", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{}
{{:name "MoreQueries", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "MoreSignatures", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Signature", :record-type :var} {:record-type :any}}
{}
{{:name "Query", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "MoreTerms", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Vars", :record-type :var} {:record-type :any}, {:name "Query1", :record-type :var} {:record-type :any}, {:name "MoreSOKB", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "MoreTerms", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Term1", :record-type :var} {:record-type :any}, {:name "Vars", :record-type :var} {:record-type :any}, {:name "Term", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "MoreSOKB", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Body", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Head", :record-type :var} {:record-type :any}, {:name "MoreTerms", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Vars", :record-type :var} {:record-type :any}, {:name "Body1", :record-type :var} {:record-type :any}, {:name "MoreSOKB", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Other", :record-type :var} {:record-type :any}, {:name "Da", :record-type :var} {:record-type :any}, {:name "Goals", :record-type :var} {:record-type :any}, {:name "_Var", :record-type :var} {:record-type :any}}
{{:name "_430", :record-type :var} {:record-type :any}, {:name "MoreOccurs", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Drs2", :record-type :var} {:record-type :any}, {:name "Drs1", :record-type :var} {:record-type :any}}
{{:name "_424", :record-type :var} {:record-type :any}, {:name "Drs2", :record-type :var} {:record-type :any}, {:name "Drs1", :record-type :var} {:record-type :any}}
{{:name "Drs2", :record-type :var} {:record-type :any}, {:name "Drs1", :record-type :var} {:record-type :any}}
{{:name "R0", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_682", :record-type :var} {:record-type :any}, {:name "_514", :record-type :var} {:record-type :any}, {:name "G1", :record-type :var} {:record-type :any}, {:name "R1", :record-type :var} {:record-type :any}, {:name "L0", :record-type :var} {:record-type :integer}, {:name "CR", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_794", :record-type :var} {:record-type :any}, {:name "LD0", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_684", :record-type :var} {:record-type :any}, {:name "LD1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_796", :record-type :var} {:record-type :any}, {:name "R", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D0", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "G0", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:record-type :integer}, {:name "_604", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "N", :record-type :var} {:record-type :any}}
{{:name "N1", :record-type :var} {:record-type :any}, {:name "N0", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "N2", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "N1", :record-type :var} {:record-type :number}, {:name "H", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "M", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:record-type :any}, {:name "Vs", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:record-type :any}}
{{:name "_408", :record-type :var} {:record-type :any}}
{{:name "Pos", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "WithX", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Sorted", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_540", :record-type :var} {:record-type :any}, {:name "_532", :record-type :var} {:record-type :any}, {:name "Refs", :record-type :var} {:record-type :any}, {:name "Ordered", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:record-type :any}, {:name "WithoutX", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_536", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "T", :record-type :var} {:functor "tuple", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}, {:name "_534", :record-type :var} {:record-type :any}}
{{:name "Functor", :record-type :var} {:record-type :any}, {:name "Arguments", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L", :record-type :var} {:record-type :integer}, {:name "Term", :record-type :var} {:record-type :nonvar}}
{{:name "Functor", :record-type :var} {:record-type :any}, {:name "ConjunctVariables", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Where", :record-type :var} {:record-type :any}, {:name "Conjunct", :record-type :var} {:record-type :nonvar}, {:name "_456", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Type", :record-type :var} {:record-type :atom}, {:name "Variables", :record-type :var} {:type {:record-type :var}, :record-type :list}}
{{:name "_3974", :record-type :var} {:record-type :any}}
{{:name "N", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "Stream", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :integer}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "H", :record-type :var} {:record-type :any}}
{{:name "QueryIn", :record-type :var} {:record-type :any}, {:name "Query", :record-type :var} {:record-type :any}}
{{:name "_420", :record-type :var} {:record-type :any}, {:name "_422", :record-type :var} {:record-type :any}}
{{:name "R", :record-type :var} {:record-type :any}, {:name "O", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "H1", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "T1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Ass0", :record-type :var} {:record-type :any}, {:name "Rep1", :record-type :var} {:record-type :any}, {:name "DB", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Rep", :record-type :var} {:record-type :any}, {:name "Ass1", :record-type :var} {:record-type :any}, {:name "DB1", :record-type :var} {:record-type :number}, {:name "Q", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "_464", :record-type :var} {:record-type :any}, {:name "_462", :record-type :var} {:record-type :any}, {:name "_458", :record-type :var} {:record-type :any}, {:name "_466", :record-type :var} {:record-type :any}, {:name "_460", :record-type :var} {:record-type :any}, {:name "_456", :record-type :var} {:record-type :any}}
{{:name "_464", :record-type :var} {:record-type :any}, {:name "_458", :record-type :var} {:record-type :any}, {:name "_466", :record-type :var} {:record-type :any}, {:name "_460", :record-type :var} {:record-type :any}, {:name "_456", :record-type :var} {:record-type :any}}
{{:name "Ass0", :record-type :var} {:record-type :any}, {:name "DB", :record-type :var} {:record-type :any}, {:name "Rep", :record-type :var} {:record-type :any}, {:name "Ass1", :record-type :var} {:record-type :any}, {:name "Comm", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "_464", :record-type :var} {:record-type :any}, {:name "_458", :record-type :var} {:record-type :any}, {:name "_466", :record-type :var} {:record-type :any}, {:name "_460", :record-type :var} {:record-type :any}, {:name "_456", :record-type :var} {:record-type :any}}
{{:name "Ass0", :record-type :var} {:record-type :any}, {:name "_458", :record-type :var} {:record-type :any}, {:name "_460", :record-type :var} {:record-type :any}, {:name "_456", :record-type :var} {:record-type :any}}
{{:name "Ass0", :record-type :var} {:record-type :any}, {:name "DB", :record-type :var} {:record-type :any}, {:name "Rep", :record-type :var} {:record-type :any}, {:name "Ass1", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{}
{{:name "O", :record-type :var} {:record-type :any}, {:name "V", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "R", :record-type :var} {:record-type :any}}
{}
{}
{}
{{:name "Ref", :record-type :var} {:arglist #{{:functor nil, :arglist (), :record-type :compound} {:record-type :atom}}, :record-type :one-of}, {:name "X", :record-type :var} {:record-type :any}, {:name "Code", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Codes", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Ref1", :record-type :var} {:arglist #{{:functor nil, :arglist (), :record-type :compound} {:record-type :atom}}, :record-type :one-of}, {:name "X", :record-type :var} {:record-type :any}, {:name "Out", :record-type :var} {:record-type :any}, {:name "Code", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Ref2", :record-type :var} {:record-type :any}, {:name "Rest", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Functor", :record-type :var} {:record-type :atom}, {:name "Line", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "F", :record-type :var} {:type {:record-type :integer}, :record-type :list}, {:name "_440", :record-type :var} {:record-type :any}, {:name "_442", :record-type :var} {:record-type :any}, {:name "Arg", :record-type :var} {:arglist #{{:functor nil, :arglist (), :record-type :compound} {:record-type :atom}}, :record-type :one-of}, {:name "T", :record-type :var} {:record-type :any}}
{{:name "Arg2", :record-type :var} {:record-type :any}, {:name "Rel", :record-type :var} {:record-type :any}, {:name "Line", :record-type :var} {:record-type :any}, {:name "Arg1", :record-type :var} {:record-type :any}}
{{:name "A2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Line", :record-type :var} {:record-type :any}, {:name "_442", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Functor", :record-type :var} {:record-type :atom}, {:name "Arg1", :record-type :var} {:arglist #{{:functor nil, :arglist (), :record-type :compound} {:record-type :atom}}, :record-type :one-of}, {:name "Arg2", :record-type :var} {:arglist #{{:functor nil, :arglist (), :record-type :compound} {:record-type :atom}}, :record-type :one-of}, {:name "T2", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:type {:record-type :integer}, :record-type :list}, {:name "T1", :record-type :var} {:record-type :any}}
{{:name "T3", :record-type :var} {:record-type :any}, {:name "Line", :record-type :var} {:record-type :any}, {:name "_442", :record-type :var} {:record-type :any}, {:name "Sym", :record-type :var} {:arglist #{{:functor nil, :arglist (), :record-type :compound} {:record-type :atom}}, :record-type :one-of}, {:name "S", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Arg", :record-type :var} {:arglist #{{:functor nil, :arglist (), :record-type :compound} {:record-type :atom}}, :record-type :one-of}, {:name "Type", :record-type :var} {:arglist #{{:functor nil, :arglist (), :record-type :compound} {:record-type :atom}}, :record-type :one-of}, {:name "A", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "T2", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:type {:record-type :integer}, :record-type :list}, {:name "T1", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Arg2", :record-type :var} {:arglist #{{:functor nil, :arglist (), :record-type :compound} {:record-type :atom}}, :record-type :one-of}, {:name "Rel", :record-type :var} {:record-type :atom}, {:name "A1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Sym", :record-type :var} {:record-type :integer}, {:name "Line", :record-type :var} {:record-type :any}, {:name "A2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Arg1", :record-type :var} {:arglist #{{:functor nil, :arglist (), :record-type :compound} {:record-type :atom}}, :record-type :one-of}}
{{:name "Arg2", :record-type :var} {:record-type :any}, {:name "Rel", :record-type :var} {:record-type :any}, {:name "Line", :record-type :var} {:record-type :any}, {:name "Arg1", :record-type :var} {:record-type :any}}
{{:name "Functor", :record-type :var} {:record-type :atom}, {:name "Arg2", :record-type :var} {:arglist #{{:functor nil, :arglist (), :record-type :compound} {:record-type :atom}}, :record-type :one-of}, {:name "T2", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Line", :record-type :var} {:record-type :any}, {:name "A2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "F", :record-type :var} {:type {:record-type :integer}, :record-type :list}, {:name "Arg1", :record-type :var} {:arglist #{{:functor nil, :arglist (), :record-type :compound} {:record-type :atom}}, :record-type :one-of}, {:name "T1", :record-type :var} {:record-type :any}}
{{:name "Day", :record-type :var} {:record-type :integer}, {:name "DID", :record-type :var} {:record-type :atom}}
{{:name "DID", :record-type :var} {:record-type :atom}, {:name "Day", :record-type :var} {:record-type :atom}, {:name "_476", :record-type :var} {:arglist #{{:record-type :atom} {:record-type :integer}}, :record-type :one-of}}
{{:name "Day", :record-type :var} {:record-type :atom}, {:name "DID", :record-type :var} {:record-type :atom}}
{}
{}
{{:name "G", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "WT", :record-type :var} {:record-type :any}}
{{:name "Mode", :record-type :var} {:arglist #{{:value "append", :record-type :exact} {:value "write", :record-type :exact} {:value "read", :record-type :exact}}, :record-type :one-of}, {:name "FileName", :record-type :var} {:arglist #{{:functor nil, :arglist (), :record-type :compound} {:record-type :atom} {:record-type :string}}, :record-type :one-of}, {:name "SOKB", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :ground}}
{{:name "Cat2", :record-type :var} {:record-type :any}, {:name "Cat1", :record-type :var} {:record-type :any}}
{}
{{:name "Cat2", :record-type :var} {:record-type :any}, {:name "Cat1", :record-type :var} {:record-type :any}}
{{:name "Cat2", :record-type :var} {:record-type :any}, {:name "Cat1", :record-type :var} {:record-type :any}}
{}
{}
{{:name "Cat2", :record-type :var} {:record-type :any}, {:name "Cat1", :record-type :var} {:record-type :any}}
{{:name "Codes", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}}
{}
{{:name "Cat2", :record-type :var} {:record-type :any}, {:name "Cat1", :record-type :var} {:record-type :any}}
{}
{{:name "F", :record-type :var} {:record-type :any}}
{{:name "Cat2", :record-type :var} {:record-type :any}, {:name "Cat1", :record-type :var} {:record-type :any}}
{{:name "_508", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}}
{}
{}
{{:name "Outfile", :record-type :var} {:record-type :any}, {:name "Infile", :record-type :var} {:arglist #{{:functor nil, :arglist (), :record-type :compound} {:record-type :atom} {:record-type :string}}, :record-type :one-of}, {:name "Stream", :record-type :var} {:record-type :ground}}
{{:name "File", :record-type :var} {:record-type :any}, {:name "Input", :record-type :var} {:record-type :any}}
{{:name "_R", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "R", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "A", :record-type :var} {:record-type :any}, {:name "_T", :record-type :var} {:record-type :any}, {:name "P", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}}
{{:name "R0", :record-type :var} {:record-type :any}, {:name "MDs", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "R2", :record-type :var} {:record-type :any}, {:name "G", :record-type :var} {:record-type :any}, {:name "ADs", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P3", :record-type :var} {:record-type :any}, {:name "C0", :record-type :var} {:record-type :any}, {:name "P0", :record-type :var} {:record-type :any}, {:name "_714", :record-type :var} {:record-type :any}, {:name "_704", :record-type :var} {:record-type :any}, {:name "_712", :record-type :var} {:record-type :any}, {:name "ExpG", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "C", :record-type :var} {:record-type :any}, {:name "R", :record-type :var} {:record-type :any}, {:name "_480", :record-type :var} {:record-type :any}, {:name "P", :record-type :var} {:record-type :any}}
{{:name "R0", :record-type :var} {:record-type :any}, {:name "R2", :record-type :var} {:record-type :any}, {:name "R1", :record-type :var} {:record-type :any}, {:name "P2", :record-type :var} {:record-type :any}, {:name "C1", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:record-type :any}, {:name "BT", :record-type :var} {:record-type :any}, {:name "AT", :record-type :var} {:record-type :any}, {:name "C0", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "P0", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:record-type :any}}
{{:name "R", :record-type :var} {:record-type :any}, {:name "_474", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "_470", :record-type :var} {:record-type :any}, {:name "_468", :record-type :var} {:record-type :any}, {:name "_480", :record-type :var} {:record-type :any}, {:name "P", :record-type :var} {:record-type :any}, {:name "_478", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:record-type :any}, {:name "R", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "P", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "R0", :record-type :var} {:record-type :any}, {:name "_402", :record-type :var} {:record-type :any}, {:name "P0", :record-type :var} {:record-type :any}, {:name "P2", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:record-type :any}, {:name "C0", :record-type :var} {:record-type :any}, {:name "R2", :record-type :var} {:record-type :any}, {:name "BT", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:record-type :any}, {:name "R", :record-type :var} {:record-type :any}, {:name "P", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:record-type :any}, {:name "R", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:arglist #{{:functor "=<", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "is", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor ">=", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :atom} {:functor "<", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "=", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor ">", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "P", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:record-type :any}, {:name "R", :record-type :var} {:record-type :any}, {:name "_480", :record-type :var} {:record-type :any}, {:name "P", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "R", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "P", :record-type :var} {:record-type :any}}
{{:name "_564", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "R", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "H", :record-type :var} {:record-type :any}, {:name "P", :record-type :var} {:record-type :any}}
{{:name "R0", :record-type :var} {:record-type :any}, {:name "AT", :record-type :var} {:record-type :any}, {:name "P0", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "_404", :record-type :var} {:record-type :any}, {:name "P2", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:record-type :any}, {:name "C0", :record-type :var} {:record-type :any}, {:name "R2", :record-type :var} {:record-type :any}}
{{:name "C1", :record-type :var} {:record-type :any}, {:name "R0", :record-type :var} {:record-type :any}, {:name "P0", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:record-type :any}, {:name "R1", :record-type :var} {:record-type :any}, {:name "C0", :record-type :var} {:record-type :any}, {:name "G", :record-type :var} {:record-type :any}, {:name "BT", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:record-type :any}, {:name "R", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P0", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "P1", :record-type :var} {:record-type :number}, {:name "H", :record-type :var} {:record-type :any}, {:name "PH", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}}
{{:name "R", :record-type :var} {:record-type :any}, {:name "_474", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "_470", :record-type :var} {:record-type :any}, {:name "_468", :record-type :var} {:record-type :any}, {:name "_480", :record-type :var} {:record-type :any}, {:name "P", :record-type :var} {:record-type :any}, {:name "_478", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "B", :record-type :var} {:record-type :any}}
{{:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D1", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "D2", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "D1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C", :record-type :var} {:record-type :any}, {:name "D2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{}
{{:name "H", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Functor2", :record-type :var} {:record-type :any}, {:name "Rel2", :record-type :var} {:record-type :nonvar}, {:name "Rel1", :record-type :var} {:record-type :nonvar}, {:name "H", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}, {:name "Functor1", :record-type :var} {:record-type :any}}
{{:name "Functor", :record-type :var} {:record-type :any}, {:name "Sort", :record-type :var} {:record-type :any}, {:name "Relation", :record-type :var} {:record-type :nonvar}, {:name "Type", :record-type :var} {:record-type :any}, {:name "Constant", :record-type :var} {:record-type :any}}
{{:name "Rel2", :record-type :var} {:record-type :nonvar}, {:name "Rel3", :record-type :var} {:record-type :nonvar}, {:name "Functor", :record-type :var} {:record-type :any}, {:name "Rel1", :record-type :var} {:record-type :nonvar}, {:name "Sort", :record-type :var} {:record-type :any}, {:name "Var2", :record-type :var} {:record-type :any}, {:name "Var1", :record-type :var} {:record-type :any}}
{{:name "Rel2", :record-type :var} {:record-type :nonvar}, {:name "Rel3", :record-type :var} {:record-type :nonvar}, {:name "Functor", :record-type :var} {:record-type :any}, {:name "Rel1", :record-type :var} {:record-type :nonvar}, {:name "Sort", :record-type :var} {:record-type :any}, {:name "Var2", :record-type :var} {:record-type :any}, {:name "Var1", :record-type :var} {:record-type :any}, {:name "Functor1", :record-type :var} {:record-type :any}}
{{:name "Functor", :record-type :var} {:record-type :any}, {:name "Sort", :record-type :var} {:record-type :any}, {:name "Relation", :record-type :var} {:record-type :nonvar}, {:name "Type", :record-type :var} {:record-type :any}}
{{:name "Rel2", :record-type :var} {:record-type :nonvar}, {:name "Rel3", :record-type :var} {:record-type :nonvar}, {:name "Functor", :record-type :var} {:record-type :any}, {:name "Rel1", :record-type :var} {:record-type :nonvar}, {:name "Sort", :record-type :var} {:record-type :any}, {:name "Var2", :record-type :var} {:record-type :any}, {:name "Var1", :record-type :var} {:record-type :any}, {:name "Functor1", :record-type :var} {:record-type :any}}
{{:name "Rel2", :record-type :var} {:record-type :nonvar}, {:name "Rel3", :record-type :var} {:record-type :nonvar}, {:name "Functor", :record-type :var} {:record-type :any}, {:name "Rel1", :record-type :var} {:record-type :nonvar}, {:name "Sort", :record-type :var} {:record-type :any}, {:name "Var2", :record-type :var} {:record-type :any}, {:name "Var1", :record-type :var} {:record-type :any}}
{{:name "Functor", :record-type :var} {:record-type :any}, {:name "Sort", :record-type :var} {:record-type :any}, {:name "Relation", :record-type :var} {:record-type :nonvar}, {:name "Type", :record-type :var} {:record-type :any}}
{{:name "L", :record-type :var} {:arglist #{{:record-type :empty-list} {:arglist ({:record-type :integer} {:record-type :integer}), :record-type :tuple}}, :record-type :one-of}, {:name "N", :record-type :var} {:record-type :integer}}
{{:name "Formula", :record-type :var} {:record-type :any}, {:name "_ClassVars", :record-type :var} {:record-type :any}, {:name "_PathTerm", :record-type :var} {:record-type :any}}
{{:name "Intermediate", :record-type :var} {:record-type :any}, {:name "Formula1", :record-type :var} {:record-type :any}, {:name "ClassVars", :record-type :var} {:record-type :any}, {:name "_538", :record-type :var} {:record-type :any}, {:name "PathTerm", :record-type :var} {:record-type :any}, {:name "NewPath", :record-type :var} {:record-type :nonvar}}
{{:name "ClassVars", :record-type :var} {:record-type :any}, {:name "ClassVars1", :record-type :var} {:record-type :any}, {:name "Formula2", :record-type :var} {:record-type :any}, {:name "ClassVars2", :record-type :var} {:record-type :any}, {:name "Variables2", :record-type :var} {:type {:record-type :var}, :record-type :list}, {:name "Variables1", :record-type :var} {:type {:record-type :var}, :record-type :list}, {:name "Formula1", :record-type :var} {:record-type :any}, {:name "PathTerm", :record-type :var} {:record-type :any}, {:name "Result", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Intermediate2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Intermediate1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Formula1", :record-type :var} {:record-type :any}, {:name "ClassVars", :record-type :var} {:record-type :any}, {:name "Result", :record-type :var} {:record-type :any}, {:name "PathTerm", :record-type :var} {:record-type :any}, {:name "VarList", :record-type :var} {:type {:record-type :var}, :record-type :list}, {:name "Var", :record-type :var} {:record-type :any}}
{{:name "ClassVars", :record-type :var} {:record-type :any}, {:name "Intermediate", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Formula1", :record-type :var} {:record-type :any}, {:name "Sort", :record-type :var} {:record-type :any}, {:name "NewPath", :record-type :var} {:functor "+", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}, {:name "X", :record-type :var} {:record-type :any}, {:name "NewSymbol", :record-type :var} {:record-type :any}, {:name "PathTerm", :record-type :var} {:record-type :any}, {:name "Result", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "AuxFunction", :record-type :var} {:record-type :nonvar}}
{{:name "Formula", :record-type :var} {:record-type :any}, {:name "_ClassVars", :record-type :var} {:record-type :any}, {:name "Result", :record-type :var} {:record-type :any}, {:name "PathTerm", :record-type :var} {:record-type :any}}
{{:name "ClassVars", :record-type :var} {:record-type :any}, {:name "ClassVars1", :record-type :var} {:record-type :any}, {:name "Formula2", :record-type :var} {:record-type :any}, {:name "Clauses2", :record-type :var} {:record-type :any}, {:name "ClassVars2", :record-type :var} {:record-type :any}, {:name "Variables2", :record-type :var} {:type {:record-type :var}, :record-type :list}, {:name "Clauses1", :record-type :var} {:record-type :any}, {:name "Variables1", :record-type :var} {:type {:record-type :var}, :record-type :list}, {:name "Call", :record-type :var} {:record-type :nonvar}, {:name "Formula1", :record-type :var} {:record-type :any}, {:name "PathTerm", :record-type :var} {:record-type :any}, {:name "Result", :record-type :var} {:record-type :any}, {:name "MergePredicate", :record-type :var} {:record-type :any}}
{{:name "Intermediate", :record-type :var} {:record-type :any}, {:name "Formula1", :record-type :var} {:record-type :any}, {:name "Value", :record-type :var} {:record-type :any}, {:name "ClassVars", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "PathTerm", :record-type :var} {:record-type :any}, {:name "NewFunction", :record-type :var} {:record-type :nonvar}, {:name "NewPath", :record-type :var} {:functor "+", :arglist ({:record-type :any} {:record-type :nonvar}), :record-type :compound}, {:name "NewPathFunctionSymbol", :record-type :var} {:record-type :any}}
{{:name "ClassVars", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "NewFormula1", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :any}, {:name "Value", :record-type :var} {:record-type :any}, {:name "Intermediate", :record-type :var} {:record-type :any}, {:name "NewFunctionSymbol", :record-type :var} {:record-type :any}, {:name "VarList", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "NewVar", :record-type :var} {:record-type :nonvar}, {:name "CopyVarList", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Formula1", :record-type :var} {:record-type :any}, {:name "PathTerm", :record-type :var} {:record-type :any}}
{{:name "Formula", :record-type :var} {:record-type :nonvar}, {:name "_ClassVars", :record-type :var} {:record-type :any}, {:name "ArgList", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Result", :record-type :var} {:record-type :any}, {:name "PathTerm", :record-type :var} {:record-type :any}, {:name "AnyPredicate", :record-type :var} {:record-type :any}, {:name "TransformedArgs", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "ClassVars", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Value", :record-type :var} {:record-type :any}, {:name "Intermediate", :record-type :var} {:record-type :any}, {:name "NewFunction", :record-type :var} {:record-type :nonvar}, {:name "Formula1", :record-type :var} {:record-type :any}, {:name "NewPathFunctionSymbol", :record-type :var} {:record-type :any}, {:name "Sort", :record-type :var} {:record-type :any}, {:name "NewPath", :record-type :var} {:functor "+", :arglist ({:record-type :any} {:record-type :nonvar}), :record-type :compound}, {:name "NewSymbol", :record-type :var} {:record-type :any}, {:name "PathTerm", :record-type :var} {:record-type :any}, {:name "AuxFunction", :record-type :var} {:record-type :nonvar}}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "Var", :record-type :var} {:record-type :var}}
{{:name "R", :record-type :var} {:record-type :any}, {:name "P", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "R", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "C1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "R", :record-type :var} {:record-type :any}, {:name "K2", :record-type :var} {:record-type :any}, {:name "B3", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C3", :record-type :var} {:record-type :any}}
{{:name "C1", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "R", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "C1", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B2", :record-type :var} {:record-type :any}, {:name "R1", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:record-type :any}, {:name "R2", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "C", :record-type :var} {:record-type :any}}
{{:name "C1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "R", :record-type :var} {:record-type :any}, {:name "K2", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C3", :record-type :var} {:record-type :any}}
{{:name "Head", :record-type :var} {:record-type :any}, {:name "Head1", :record-type :var} {:record-type :any}, {:name "RepeatedVariables", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Variables", :record-type :var} {:record-type :any}}
{{:name "Mesg", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:arglist #{{:functor "&", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor ";", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :atom} {:functor ",", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "_404", :record-type :var} {:record-type :any}}
{{:name "_402", :record-type :var} {:record-type :any}, {:name "_404", :record-type :var} {:record-type :any}, {:name "_446", :record-type :var} {:record-type :any}}
{{:name "_402", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:arglist #{{:functor "&", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor ";", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :atom} {:functor ",", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Mesg", :record-type :var} {:record-type :any}}
{{:name "_402", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:arglist #{{:functor "&", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor ";", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :atom} {:functor ",", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Mesg", :record-type :var} {:record-type :any}}
{}
{{:name "A", :record-type :var} {:arglist #{{:functor "&", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor ";", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :atom} {:functor ",", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "_404", :record-type :var} {:record-type :any}, {:name "Mesg", :record-type :var} {:record-type :any}}
{{:name "_520", :record-type :var} {:record-type :any}, {:name "_402", :record-type :var} {:record-type :any}, {:name "_518", :record-type :var} {:record-type :any}, {:name "_562", :record-type :var} {:record-type :any}, {:name "_404", :record-type :var} {:record-type :any}}
{{:name "_402", :record-type :var} {:record-type :any}, {:name "_404", :record-type :var} {:record-type :any}}
{{:name "P", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Var", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}}, :record-type :one-of}}
{{:name "OldHead", :record-type :var} {:record-type :any}, {:name "Vars", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Var", :record-type :var} {:functor "variable", :arglist ({:record-type :any} {:type {:record-type :any}, :record-type :list}), :record-type :compound}, {:name "NewHead", :record-type :var} {:record-type :any}}
{{:name "Conjunct", :record-type :var} {:record-type :nonvar}}
{{:name "Constraint1", :record-type :var} {:functor "clp_constraint", :arglist ({:record-type :any}), :record-type :compound}, {:name "Constraint", :record-type :var} {:functor "clp_constraint", :arglist ({:record-type :any}), :record-type :compound}, {:name "Conjunct", :record-type :var} {:record-type :any}}
{{:name "Conjunct", :record-type :var} {:record-type :any}}
{{:name "Body", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Head", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Head1", :record-type :var} {:record-type :any}, {:name "ICSVariables", :record-type :var} {:record-type :any}, {:name "RepeatedVariables", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "BodyVariables", :record-type :var} {:record-type :any}, {:name "Variables", :record-type :var} {:record-type :any}}
{{:name "Y", :record-type :var} {:record-type :any}, {:name "_868", :record-type :var} {:record-type :any}, {:name "_1296", :record-type :var} {:record-type :any}, {:name "_1862", :record-type :var} {:record-type :any}, {:name "_1124", :record-type :var} {:record-type :any}, {:name "_1684", :record-type :var} {:record-type :any}, {:name "_1856", :record-type :var} {:record-type :any}, {:name "_1678", :record-type :var} {:record-type :any}, {:name "AnaConds", :record-type :var} {:record-type :any}, {:name "_1714", :record-type :var} {:record-type :any}, {:name "_700", :record-type :var} {:record-type :any}, {:name "_1302", :record-type :var} {:record-type :any}, {:name "_670", :record-type :var} {:record-type :any}, {:name "_636", :record-type :var} {:record-type :any}, {:name "_1858", :record-type :var} {:record-type :any}, {:name "_1118", :record-type :var} {:record-type :any}, {:name "C0", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "_630", :record-type :var} {:record-type :any}, {:name "AntConds", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}, {:name "_1298", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "_1120", :record-type :var} {:record-type :any}, {:name "_1332", :record-type :var} {:record-type :any}, {:name "_1892", :record-type :var} {:record-type :any}, {:name "_838", :record-type :var} {:record-type :any}, {:name "_1680", :record-type :var} {:record-type :any}, {:name "_1154", :record-type :var} {:record-type :any}}
{{:name "_394", :record-type :var} {:record-type :any}}
{{:name "I", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Der", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "I", :record-type :var} {:record-type :any}, {:name "_442", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "I", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Der", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :ground}}
{{:name "Y2", :record-type :var} {:record-type :any}, {:name "X2", :record-type :var} {:record-type :any}, {:name "Y1", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:record-type :any}, {:name "_4042", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "_3990", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "DB", :record-type :var} {:record-type :any}, {:name "Comm", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}}
{}
{{:name "More", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "KMore", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_410", :record-type :var} {:record-type :any}, {:name "V", :record-type :var} {:record-type :any}}
{}
{{:name "C", :record-type :var} {:record-type :any}, {:name "S", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "A", :record-type :var} {:record-type :atom}, {:name "B", :record-type :var} {:record-type :atom}}
{{:name "C", :record-type :var} {:record-type :atom}, {:name "A", :record-type :var} {:record-type :atom}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "U", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "V", :record-type :var} {:record-type :any}}
{{:name "U", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "K", :record-type :var} {:record-type :any}}
{}
{{:name "K", :record-type :var} {:record-type :any}, {:name "V", :record-type :var} {:record-type :any}}
{}
{{:name "U", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "K", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}}
{{:name "U2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "U1", :record-type :var} {:record-type :any}, {:name "K", :record-type :var} {:record-type :any}, {:name "K1", :record-type :var} {:record-type :any}}
{{:name "K", :record-type :var} {:record-type :any}}
{{:name "U", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "K", :record-type :var} {:record-type :any}, {:name "K1", :record-type :var} {:record-type :any}}
{}
{}
{{:name "X", :record-type :var} {:record-type :any}}
{{:name "_396", :record-type :var} {:record-type :any}}
{{:name "_408", :record-type :var} {:record-type :any}}
{{:name "_408", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "_502", :record-type :var} {:record-type :any}}
{{:name "_408", :record-type :var} {:record-type :any}}
{{:name "_408", :record-type :var} {:record-type :any}}
{{:name "F2", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:record-type :any}, {:name "A2", :record-type :var} {:record-type :any}, {:name "F1", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}}
{{:name "Cat", :record-type :var} {:record-type :any}}
{{:name "_396", :record-type :var} {:record-type :any}}
{{:name "_408", :record-type :var} {:record-type :any}}
{{:name "X2", :record-type :var} {:record-type :atom}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Fill", :record-type :var} {:record-type :atom}, {:name "X1", :record-type :var} {:record-type :atom}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "C1", :record-type :var} {:record-type :any}, {:name "D1", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "D2", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "C2", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:record-type :any}}
{{:name "D0", :record-type :var} {:arglist #{{:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ftr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "btr", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "ba", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "conj", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "_408", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:record-type :any}}
{}
{}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{}
{}
{}
{{:name "Sd3", :record-type :var} {:record-type :any}, {:name "V1", :record-type :var} {:record-type :any}, {:name "L3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "S", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L7", :record-type :var} {:record-type :any}, {:name "Sc2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "V4", :record-type :var} {:record-type :any}, {:name "Sb3", :record-type :var} {:record-type :any}, {:name "Sc1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "V5", :record-type :var} {:record-type :any}, {:name "S2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Sa3", :record-type :var} {:record-type :any}, {:name "V3", :record-type :var} {:record-type :any}, {:name "Sa1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "V2", :record-type :var} {:record-type :any}, {:name "Sb1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L5", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Sa2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L6", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Sd1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Sd2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Sc3", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L4", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Sb2", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "V1", :record-type :var} {:record-type :any}, {:name "L3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "S", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Sc2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "V4", :record-type :var} {:record-type :any}, {:name "Sb3", :record-type :var} {:record-type :any}, {:name "Sc1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "S2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Sa3", :record-type :var} {:record-type :any}, {:name "V3", :record-type :var} {:record-type :any}, {:name "Sa1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "V2", :record-type :var} {:record-type :any}, {:name "Sb1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L5", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Sa2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L6", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Sc3", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L4", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Sb2", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "S2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "V2", :record-type :var} {:record-type :any}, {:name "L4", :record-type :var} {:record-type :any}, {:name "V1", :record-type :var} {:record-type :any}, {:name "L3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "S3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "S4", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L", :record-type :var} {:record-type :any}}
{{:name "V1", :record-type :var} {:record-type :any}, {:name "L3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "S1", :record-type :var} {:record-type :any}, {:name "S4", :record-type :var} {:record-type :any}, {:name "S2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "V2", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L4", :record-type :var} {:record-type :any}, {:name "S3", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "V1", :record-type :var} {:record-type :any}, {:name "L3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "S", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Sb3", :record-type :var} {:record-type :any}, {:name "S2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Sa3", :record-type :var} {:record-type :any}, {:name "V3", :record-type :var} {:record-type :any}, {:name "Sa1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "V2", :record-type :var} {:record-type :any}, {:name "Sb1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L5", :record-type :var} {:record-type :any}, {:name "Sa2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L4", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Sb2", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_442", :record-type :var} {:record-type :any}, {:name "L3", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "_408", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}}
{{:name "Rel", :record-type :var} {:record-type :any}, {:name "K2", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "K1", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Rel", :record-type :var} {:record-type :any}, {:name "K2", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "K1", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "_408", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}}
{{:name "_412", :record-type :var} {:record-type :any}, {:name "Occurrences", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Start", :record-type :var} {:record-type :any}, {:name "SID", :record-type :var} {:record-type :any}, {:name "Tags", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:arglist #{{:functor "ltc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "funny", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "coord", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :atom} {:record-type :any} {:record-type :atom} {:record-type :any}), :record-type :compound} {:functor "fc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gfxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "gbxc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bxs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "bs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "tc", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lp", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fs", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "t", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "lx", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "fa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "End", :record-type :var} {:record-type :any}, {:name "TokID", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "_6656", :record-type :var} {:record-type :any}, {:name "SID", :record-type :var} {:record-type :any}, {:name "_6652", :record-type :var} {:record-type :any}, {:name "_6650", :record-type :var} {:record-type :any}, {:name "_6654", :record-type :var} {:record-type :any}, {:name "_6648", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Xs", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Xt", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Y", :record-type :var} {:record-type :any}, {:name "Xs", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Var", :record-type :var} {:record-type :var}}
{{:name "Var", :record-type :var} {:record-type :atom}}
{{:name "Var", :record-type :var} {:record-type :nonvar}}
{{:name "_396", :record-type :var} {:record-type :any}}
{{:name "Tok", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "T", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "T", :record-type :var} {:record-type :any}, {:name "_398", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "Merge", :record-type :var} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}, {:name "New", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "B3", :record-type :var} {:record-type :any}}
{{:name "Old", :record-type :var} {:record-type :any}, {:name "Merge", :record-type :var} {:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}, {:name "New", :record-type :var} {:record-type :any}}
{{:name "Old", :record-type :var} {:record-type :any}, {:name "Rel", :record-type :var} {:record-type :atom}, {:name "New", :record-type :var} {:record-type :any}, {:name "SDRS", :record-type :var} {:record-type :any}}
{{:name "_450", :record-type :var} {:record-type :any}, {:name "Alfa", :record-type :var} {:record-type :any}}
{{:name "P", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Alfa", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "P", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Alfa", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}}
{{:name "_536", :record-type :var} {:record-type :integer}, {:name "P", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Alfa", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :atom}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "_536", :record-type :var} {:record-type :integer}, {:name "P", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Alfa", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :atom}, {:name "B", :record-type :var} {:functor "drs", :arglist ({:record-type :empty-list} {:record-type :empty-list}), :record-type :compound}}
{{:name "_536", :record-type :var} {:record-type :integer}, {:name "P", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Alfa", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :atom}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "R", :record-type :var} {:record-type :any}, {:name "P", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Alfa", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}}
{{:name "_530", :record-type :var} {:record-type :integer}, {:name "Alfa", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :atom}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Y", :record-type :var} {:record-type :any}, {:name "K2", :record-type :var} {:record-type :any}, {:name "Context", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Solutions", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "D", :record-type :var} {:record-type :any}, {:name "IDs", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:functor "drs", :arglist ({:record-type :any} {:type {:record-type :any}, :record-type :list}), :record-type :compound}, {:name "Bs", :record-type :var} {:record-type :any}, {:name "P2", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:record-type :any}, {:name "Source", :record-type :var} {:arglist #{{:functor ":", :arglist ({:record-type :atom} {:record-type :any}), :record-type :compound} {:record-type :atom}}, :record-type :one-of}, {:name "_468", :record-type :var} {:record-type :any}, {:name "K0", :record-type :var} {:record-type :any}, {:name "K1", :record-type :var} {:record-type :any}, {:name "Score", :record-type :var} {:record-type :number}, {:name "X", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Y", :record-type :var} {:record-type :any}, {:name "K2", :record-type :var} {:record-type :any}, {:name "Context", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Solutions", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:record-type :any}, {:name "IDs", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Bs", :record-type :var} {:record-type :any}, {:name "P2", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:record-type :any}, {:name "_468", :record-type :var} {:record-type :any}, {:name "K1", :record-type :var} {:record-type :any}, {:name "Deps1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "_498", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "Deps2", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Sol", :record-type :var} {:record-type :any}, {:name "Context", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Dep", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "Bs", :record-type :var} {:record-type :any}, {:name "P2", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:record-type :any}, {:name "IDs", :record-type :var} {:record-type :any}, {:name "_398", :record-type :var} {:record-type :any}}
{{:name "_442", :record-type :var} {:record-type :any}, {:name "K2", :record-type :var} {:record-type :any}, {:name "Context", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Solutions", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_1050", :record-type :var} {:record-type :any}, {:name "IDs", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Bs", :record-type :var} {:record-type :any}, {:name "P2", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:record-type :any}, {:name "K1", :record-type :var} {:record-type :any}, {:name "Score", :record-type :var} {:record-type :number}, {:name "Levels", :record-type :var} {:record-type :integer}, {:name "_1104", :record-type :var} {:record-type :any}}
{{:name "Context", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Solutions", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:record-type :any}, {:name "IDs", :record-type :var} {:record-type :any}, {:name "Bs", :record-type :var} {:record-type :any}, {:name "P2", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:record-type :any}, {:name "Dep", :record-type :var} {:record-type :any}, {:name "K1", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "_444", :record-type :var} {:record-type :any}}
{{:name "_508", :record-type :var} {:record-type :any}, {:name "Sorted", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Bs", :record-type :var} {:record-type :any}, {:name "P2", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:record-type :any}, {:name "Solutions", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Words", :record-type :var} {:record-type :any}}
{{:name "Tree", :record-type :var} {:record-type :any}, {:name "Query", :record-type :var} {:record-type :any}, {:name "QT", :record-type :var} {:record-type :any}, {:name "UE", :record-type :var} {:record-type :any}}
{{:name "_3986", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :any}}
{{:name "Conds", :record-type :var} {:record-type :any}, {:name "Formula", :record-type :var} {:record-type :any}, {:name "Drs2", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Referents", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_4038", :record-type :var} {:record-type :any}}
{{:name "Formula", :record-type :var} {:record-type :any}, {:name "Drs", :record-type :var} {:record-type :any}}
{{:name "Drs2", :record-type :var} {:record-type :any}, {:name "Drs1", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Sym1", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :nonvar}, {:name "Sense", :record-type :var} {:record-type :any}, {:name "Sym2", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "Conds", :record-type :var} {:record-type :any}, {:name "Formula1", :record-type :var} {:record-type :any}, {:name "Drs2", :record-type :var} {:record-type :any}, {:name "Formula2", :record-type :var} {:record-type :any}}
{{:name "Formula1", :record-type :var} {:record-type :any}, {:name "Drs2", :record-type :var} {:record-type :any}, {:name "Drs1", :record-type :var} {:record-type :any}, {:name "Formula2", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Sym1", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :nonvar}, {:name "Sense", :record-type :var} {:record-type :any}, {:name "Sym2", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}}
{{:name "_4004", :record-type :var} {:record-type :any}, {:name "Drs", :record-type :var} {:record-type :any}, {:name "Formula", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "N1", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :nonvar}, {:name "Sense", :record-type :var} {:record-type :any}, {:name "N2", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}}
{{:name "_4032", :record-type :var} {:record-type :any}, {:name "_4028", :record-type :var} {:record-type :any}, {:name "Drs2", :record-type :var} {:record-type :any}, {:name "Drs1", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :any}}
{{:name "_396", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}}
{{:name "D1", :record-type :var} {:arglist #{{:functor "time", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "date", :arglist ({:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "date", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "D2", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :nonvar}}
{{:name "F2", :record-type :var} {:record-type :nonvar}, {:name "C", :record-type :var} {:record-type :any}, {:name "S2", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "F1", :record-type :var} {:record-type :nonvar}, {:name "S1", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "_4020", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}}
{{:name "_436", :record-type :var} {:record-type :any}, {:name "_438", :record-type :var} {:record-type :any}}
{{:name "N1", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "A3", :record-type :var} {:record-type :any}, {:name "Rest2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "A2", :record-type :var} {:record-type :any}, {:name "A4", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N2", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Rest", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N", :record-type :var} {:record-type :number}}
{{:name "A2", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N2", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "A3", :record-type :var} {:record-type :any}, {:name "Rest1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N", :record-type :var} {:record-type :number}, {:name "Rest2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Rest", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "A4", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N1", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}}
{{:name "N1", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Rest1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "A1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N2", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Rest", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N", :record-type :var} {:record-type :number}, {:name "Closed", :record-type :var} {:record-type :any}}
{}
{{:name "Disjunct", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "MoreShuffledDisjuncts", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "MoreDisjuncts", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "ShuffledDisjunct", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "C", :record-type :var} {:arglist ({:record-type :integer} {:record-type :integer} {:record-type :integer} {:record-type :integer}), :record-type :tuple}, {:name "Y", :record-type :var} {:record-type :var}}
{{:name "Y", :record-type :var} {:record-type :atom}, {:name "C", :record-type :var} {:type {:record-type :integer}, :record-type :list}}
{{:name "_1040", :record-type :var} {:record-type :any}, {:name "Token", :record-type :var} {:arglist #{{:record-type :number} {:record-type :atom} {:functor "f", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Att", :record-type :var} {:record-type :any}, {:name "NewTab", :record-type :var} {:record-type :number}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "NiceToken", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Red", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "NextTab", :record-type :var} {:record-type :number}, {:name "_526", :record-type :var} {:record-type :any}, {:name "_490", :record-type :var} {:record-type :any}, {:name "Tokens", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "NewTab", :record-type :var} {:record-type :number}, {:name "Sem", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "Der", :record-type :var} {:record-type :nonvar}, {:name "Left", :record-type :var} {:record-type :any}, {:name "Right", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Red", :record-type :var} {:record-type :any}, {:name "_976", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "NextTab", :record-type :var} {:record-type :number}, {:name "_1058", :record-type :var} {:record-type :any}, {:name "_526", :record-type :var} {:record-type :any}, {:name "_490", :record-type :var} {:record-type :any}, {:name "Tokens", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "NewTab", :record-type :var} {:record-type :number}, {:name "Under", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "Der", :record-type :var} {:record-type :nonvar}, {:name "Rule", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Red", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "_406", :record-type :var} {:record-type :any}, {:name "_408", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}}
{{:name "NextTab", :record-type :var} {:record-type :number}, {:name "_1058", :record-type :var} {:record-type :any}, {:name "_526", :record-type :var} {:record-type :any}, {:name "_490", :record-type :var} {:record-type :any}, {:name "Tokens", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "NewTab", :record-type :var} {:record-type :number}, {:name "Under", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "Der", :record-type :var} {:record-type :nonvar}, {:name "Rule", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Red", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "NextTab", :record-type :var} {:record-type :number}, {:name "_958", :record-type :var} {:record-type :any}, {:name "Red1", :record-type :var} {:record-type :any}, {:name "Tokens", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "NewTab", :record-type :var} {:record-type :number}, {:name "Sem", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "Der", :record-type :var} {:record-type :nonvar}, {:name "Left", :record-type :var} {:record-type :any}, {:name "_508", :record-type :var} {:record-type :any}, {:name "Rule", :record-type :var} {:record-type :any}, {:name "Right", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Red", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "NextTab", :record-type :var} {:record-type :number}, {:name "_526", :record-type :var} {:record-type :any}, {:name "_490", :record-type :var} {:record-type :any}, {:name "Tokens", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "NewTab", :record-type :var} {:record-type :number}, {:name "Sem", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "Der", :record-type :var} {:record-type :nonvar}, {:name "Left", :record-type :var} {:record-type :any}, {:name "Right", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Red", :record-type :var} {:record-type :any}, {:name "_976", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "_406", :record-type :var} {:record-type :any}, {:name "_408", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}}
{{:name "_1040", :record-type :var} {:record-type :any}, {:name "Token", :record-type :var} {:arglist #{{:record-type :number} {:record-type :atom} {:functor "f", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Att", :record-type :var} {:record-type :any}, {:name "NewTab", :record-type :var} {:record-type :number}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "NiceToken", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Red", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "NextTab", :record-type :var} {:record-type :number}, {:name "_958", :record-type :var} {:record-type :any}, {:name "Red1", :record-type :var} {:record-type :any}, {:name "Tokens", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "NewTab", :record-type :var} {:record-type :number}, {:name "Sem", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}, {:name "Der", :record-type :var} {:record-type :nonvar}, {:name "Left", :record-type :var} {:record-type :any}, {:name "_508", :record-type :var} {:record-type :any}, {:name "Rule", :record-type :var} {:record-type :any}, {:name "Right", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Red", :record-type :var} {:record-type :any}, {:name "Cat", :record-type :var} {:record-type :any}}
{{:name "Roles", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_6504", :record-type :var} {:record-type :any}}
{{:name "Roles", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "_4002", :record-type :var} {:record-type :any}, {:name "_4000", :record-type :var} {:record-type :any}, {:name "_3998", :record-type :var} {:record-type :any}}
{{:name "Transition", :record-type :var} {:record-type :any}, {:name "NewNode", :record-type :var} {:record-type :any}, {:name "Stemp", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Sout", :record-type :var} {:record-type :number}, {:name "Sin", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :ground}}
{{:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_458", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "G", :record-type :var} {:record-type :any}}
{{:name "Rep", :record-type :var} {:record-type :any}, {:name "G", :record-type :var} {:record-type :any}, {:name "WT", :record-type :var} {:record-type :any}}
{{:name "_518", :record-type :var} {:record-type :any}, {:name "Rep", :record-type :var} {:record-type :any}, {:name "G", :record-type :var} {:record-type :any}, {:name "WT", :record-type :var} {:record-type :any}}
{{:name "G", :record-type :var} {:record-type :any}, {:name "_422", :record-type :var} {:record-type :any}}
{{:name "_420", :record-type :var} {:record-type :any}, {:name "_422", :record-type :var} {:record-type :any}}
{{:name "_424", :record-type :var} {:record-type :any}, {:name "_420", :record-type :var} {:record-type :any}, {:name "_422", :record-type :var} {:record-type :any}}
{{:name "G", :record-type :var} {:record-type :any}, {:name "_422", :record-type :var} {:record-type :any}}
{{:name "G", :record-type :var} {:record-type :any}, {:name "_422", :record-type :var} {:record-type :any}}
{{:name "_424", :record-type :var} {:record-type :any}, {:name "_420", :record-type :var} {:record-type :any}, {:name "_422", :record-type :var} {:record-type :any}}
{{:name "Ans", :record-type :var} {:record-type :any}, {:name "Rep", :record-type :var} {:record-type :any}, {:name "G", :record-type :var} {:record-type :any}, {:name "WT", :record-type :var} {:record-type :any}}
{{:name "Pos", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "K2", :record-type :var} {:record-type :any}, {:name "IDs", :record-type :var} {:record-type :any}, {:name "Bs", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_506", :record-type :var} {:record-type :any}, {:name "AntInd", :record-type :var} {:record-type :any}, {:name "_476", :record-type :var} {:record-type :any}, {:name "YConds", :record-type :var} {:record-type :any}, {:name "K1", :record-type :var} {:record-type :any}, {:name "XConds", :record-type :var} {:record-type :any}, {:name "Prox", :record-type :var} {:record-type :any}, {:name "_1480", :record-type :var} {:record-type :any}, {:name "Ant", :record-type :var} {:record-type :any}, {:name "_538", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "I1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I2", :record-type :var} {:record-type :any}, {:name "Z", :record-type :var} {:record-type :any}, {:name "Co", :record-type :var} {:record-type :any}}
{{:name "P", :record-type :var} {:arglist #{{:functor ":", :arglist ({:record-type :atom} {:record-type :any}), :record-type :compound} {:record-type :atom}}, :record-type :one-of}, {:name "_Bs", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "K2", :record-type :var} {:record-type :any}, {:name "_448", :record-type :var} {:record-type :any}, {:name "_588", :record-type :var} {:record-type :any}, {:name "_720", :record-type :var} {:record-type :any}, {:name "C1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_IDs", :record-type :var} {:record-type :any}, {:name "Ana", :record-type :var} {:arglist #{{:functor "pred", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :any}), :record-type :compound} {:functor "timex", :arglist ({:record-type :any} {:functor "date", :arglist ({:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor "named", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "K1", :record-type :var} {:record-type :any}, {:name "Score", :record-type :var} {:record-type :float}, {:name "Ant", :record-type :var} {:arglist #{{:functor "pred", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :any}), :record-type :compound} {:functor "timex", :arglist ({:record-type :any} {:functor "date", :arglist ({:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor "card", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "named", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "X", :record-type :var} {:record-type :any}, {:name "C2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "NewScore", :record-type :var} {:record-type :number}, {:name "_618", :record-type :var} {:record-type :any}, {:name "Z", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Ptr", :record-type :var} {:record-type :any}, {:name "Vars", :record-type :var} {:record-type :any}, {:name "_540", :record-type :var} {:record-type :any}}
{{:name "Arg2", :record-type :var} {:record-type :any}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "Ptr", :record-type :var} {:record-type :any}, {:name "Sense", :record-type :var} {:record-type :any}, {:name "Arg1", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "_630", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Ptr", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Vars", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "Arg2", :record-type :var} {:record-type :any}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "Ptr", :record-type :var} {:record-type :any}, {:name "Arg3", :record-type :var} {:record-type :any}, {:name "Sense", :record-type :var} {:record-type :any}, {:name "Arg1", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :any}, {:name "Arg4", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Ptr", :record-type :var} {:record-type :any}, {:name "Vars", :record-type :var} {:record-type :any}, {:name "_540", :record-type :var} {:record-type :any}}
{{:name "Arg2", :record-type :var} {:record-type :any}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "Ptr", :record-type :var} {:record-type :any}, {:name "Sense", :record-type :var} {:record-type :any}, {:name "Arg1", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}}
{{:name "Var", :record-type :var} {:record-type :any}, {:name "B4", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "B3", :record-type :var} {:record-type :any}, {:name "Ptr1", :record-type :var} {:record-type :any}, {:name "Ptr2", :record-type :var} {:record-type :any}, {:name "Var1", :record-type :var} {:record-type :any}, {:name "_770", :record-type :var} {:record-type :any}, {:name "Ptr3", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}}
{{:name "Y2", :record-type :var} {:record-type :any}, {:name "X2", :record-type :var} {:record-type :any}, {:name "Y1", :record-type :var} {:record-type :any}, {:name "Ptr", :record-type :var} {:record-type :any}, {:name "Vars", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:record-type :any}}
{{:name "Var", :record-type :var} {:record-type :any}, {:name "B4", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "B3", :record-type :var} {:record-type :any}, {:name "Ptr1", :record-type :var} {:record-type :any}, {:name "Ptr2", :record-type :var} {:record-type :any}, {:name "Var1", :record-type :var} {:record-type :any}, {:name "_770", :record-type :var} {:record-type :any}, {:name "Ptr3", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}}
{{:name "Sym", :record-type :var} {:record-type :any}, {:name "Ptr", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Vars", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "Y2", :record-type :var} {:record-type :any}, {:name "X2", :record-type :var} {:record-type :any}, {:name "Y1", :record-type :var} {:record-type :any}, {:name "Ptr", :record-type :var} {:record-type :any}, {:name "Vars", :record-type :var} {:record-type :any}, {:name "X1", :record-type :var} {:record-type :any}}
{{:name "_424", :record-type :var} {:record-type :any}, {:name "_420", :record-type :var} {:record-type :any}, {:name "U", :record-type :var} {:record-type :any}, {:name "_422", :record-type :var} {:record-type :any}}
{{:name "Ptr", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Sym1", :record-type :var} {:record-type :any}, {:name "Sym2", :record-type :var} {:record-type :any}, {:name "Vars", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}}
{{:name "Y", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :any}, {:name "B4", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "B3", :record-type :var} {:record-type :any}, {:name "Ptr1", :record-type :var} {:record-type :any}, {:name "Ptr2", :record-type :var} {:record-type :any}, {:name "Var1", :record-type :var} {:record-type :any}, {:name "_888", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}, {:name "Ptr3", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}}
{{:name "Sym", :record-type :var} {:record-type :any}, {:name "Ptr", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Sense", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}}
{{:name "Var", :record-type :var} {:record-type :any}, {:name "B4", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "B3", :record-type :var} {:record-type :any}, {:name "Ptr1", :record-type :var} {:record-type :any}, {:name "_610", :record-type :var} {:record-type :any}, {:name "Ptr2", :record-type :var} {:record-type :any}, {:name "_770", :record-type :var} {:record-type :any}, {:name "Ptr3", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}}
{{:name "Dir", :record-type :var} {:record-type :any}, {:name "Arg2", :record-type :var} {:record-type :any}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "Ptr", :record-type :var} {:record-type :any}, {:name "Arg3", :record-type :var} {:record-type :any}, {:name "Arg1", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :any}, {:name "Arg4", :record-type :var} {:record-type :any}}
{{:name "Arg2", :record-type :var} {:record-type :any}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "Ptr", :record-type :var} {:record-type :any}, {:name "Arg3", :record-type :var} {:record-type :any}, {:name "Arg1", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :any}, {:name "Arg4", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Ptr", :record-type :var} {:record-type :any}, {:name "Vars", :record-type :var} {:record-type :any}, {:name "_540", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "_630", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Ptr", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Vars", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "Sym", :record-type :var} {:record-type :any}, {:name "Ptr", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Sense", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Ptr", :record-type :var} {:record-type :any}, {:name "Vars", :record-type :var} {:record-type :any}, {:name "_540", :record-type :var} {:record-type :any}}
{{:name "Var", :record-type :var} {:record-type :any}, {:name "B4", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "B3", :record-type :var} {:record-type :any}, {:name "Ptr1", :record-type :var} {:record-type :any}, {:name "_610", :record-type :var} {:record-type :any}, {:name "Ptr2", :record-type :var} {:record-type :any}, {:name "_770", :record-type :var} {:record-type :any}, {:name "Ptr3", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Ptr", :record-type :var} {:record-type :any}, {:name "Vars", :record-type :var} {:record-type :any}, {:name "_540", :record-type :var} {:record-type :any}}
{{:name "Dir", :record-type :var} {:record-type :any}, {:name "Arg2", :record-type :var} {:record-type :any}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "Ptr", :record-type :var} {:record-type :any}, {:name "Arg3", :record-type :var} {:record-type :any}, {:name "Arg1", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :any}, {:name "Arg4", :record-type :var} {:record-type :any}}
{{:name "Arg2", :record-type :var} {:record-type :any}, {:name "Rel", :record-type :var} {:record-type :any}, {:name "Ptr", :record-type :var} {:record-type :any}, {:name "Arg1", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :any}}
{{:name "Y", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :any}, {:name "B4", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "B3", :record-type :var} {:record-type :any}, {:name "Ptr1", :record-type :var} {:record-type :any}, {:name "Ptr2", :record-type :var} {:record-type :any}, {:name "Var1", :record-type :var} {:record-type :any}, {:name "_888", :record-type :var} {:record-type :any}, {:name "Type", :record-type :var} {:record-type :any}, {:name "Ptr3", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}}
{{:name "Sym", :record-type :var} {:record-type :any}, {:name "Ptr", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Vars", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}}
{{:name "Arg2", :record-type :var} {:record-type :any}, {:name "Rel", :record-type :var} {:record-type :any}, {:name "Ptr", :record-type :var} {:record-type :any}, {:name "Arg1", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :any}}
{{:name "_424", :record-type :var} {:record-type :any}, {:name "_420", :record-type :var} {:record-type :any}, {:name "U", :record-type :var} {:record-type :any}, {:name "_422", :record-type :var} {:record-type :any}}
{{:name "Ptr", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Sym1", :record-type :var} {:record-type :any}, {:name "Sym2", :record-type :var} {:record-type :any}, {:name "Vars", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:record-type :any}}
{{:name "Arg2", :record-type :var} {:record-type :any}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "Ptr", :record-type :var} {:record-type :any}, {:name "Arg3", :record-type :var} {:record-type :any}, {:name "Sense", :record-type :var} {:record-type :any}, {:name "Arg1", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :any}, {:name "Arg4", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Ptr", :record-type :var} {:record-type :any}, {:name "Vars", :record-type :var} {:record-type :any}, {:name "_540", :record-type :var} {:record-type :any}}
{{:name "Arg2", :record-type :var} {:record-type :any}, {:name "Sym", :record-type :var} {:record-type :any}, {:name "Ptr", :record-type :var} {:record-type :any}, {:name "Arg3", :record-type :var} {:record-type :any}, {:name "Arg1", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :any}, {:name "Arg4", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "duplex", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:record-type :empty-list}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:record-type :any} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Lemma", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "alfa", :arglist ({:record-type :atom} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:record-type :empty-list}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Lemma", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "P", :record-type :var} {:record-type :any}, {:name "Relation", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Att2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "alfa", :arglist ({:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :atom} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Att1", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Lemma", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "P", :record-type :var} {:record-type :any}, {:name "Relation", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Att2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "alfa", :arglist ({:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :atom} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Att1", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "alfa", :arglist ({:record-type :atom} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Lemma", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "P", :record-type :var} {:record-type :any}, {:name "Relation", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Att2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "alfa", :arglist ({:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :atom} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Lemma", :record-type :var} {:record-type :any}, {:name "Att1", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}}
{{:name "P", :record-type :var} {:record-type :any}, {:name "Relation", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Att2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "alfa", :arglist ({:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :atom} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Att1", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}}
{{:name "P", :record-type :var} {:record-type :any}, {:name "Relation", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Att2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "alfa", :arglist ({:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :atom} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Att1", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}}
{{:name "P", :record-type :var} {:record-type :any}, {:name "Relation", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Att2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "alfa", :arglist ({:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :atom} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Att1", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "alfa", :arglist ({:record-type :atom} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:record-type :empty-list}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Lemma", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:record-type :empty-list}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_Lemma", :record-type :var} {:record-type :any}, {:name "P", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "P", :record-type :var} {:record-type :any}, {:name "Relation", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Att2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "alfa", :arglist ({:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :atom} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Att1", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}}
{{:name "P", :record-type :var} {:record-type :any}, {:name "Relation", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Att2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "alfa", :arglist ({:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :atom} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Att1", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "not", :arglist ({:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:record-type :empty-list}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}}
{{:name "P", :record-type :var} {:record-type :any}, {:name "Relation", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Att2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "alfa", :arglist ({:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :atom} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Att1", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "imp", :arglist ({:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:record-type :empty-list}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Lemma", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}}
{{:name "P", :record-type :var} {:record-type :any}, {:name "Relation", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Att2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "alfa", :arglist ({:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :atom} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Att1", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}}
{{:name "P", :record-type :var} {:record-type :any}, {:name "Relation", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Att2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "alfa", :arglist ({:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :atom} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Att1", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "imp", :arglist ({:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:record-type :empty-list}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "not", :arglist ({:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "B3", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "duplex", :arglist ({:record-type :atom} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:record-type :empty-list}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:record-type :any} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "B1", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Lemma", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "alfa", :arglist ({:record-type :atom} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Lemma", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "P", :record-type :var} {:record-type :any}, {:name "Relation", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Att2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "alfa", :arglist ({:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :atom} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Lemma", :record-type :var} {:record-type :any}, {:name "Att1", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "P", :record-type :var} {:record-type :any}, {:name "Relation", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Att2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "alfa", :arglist ({:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :atom} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Att1", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}}
{{:name "P", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "B3", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "alfa", :arglist ({:record-type :atom} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:record-type :empty-list}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "merge", :arglist ({:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "not", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:record-type :empty-list} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "eq", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "N", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}}
{{:name "P", :record-type :var} {:record-type :any}, {:name "Relation", :record-type :var} {:record-type :any}, {:name "Y", :record-type :var} {:record-type :any}, {:name "B2", :record-type :var} {:record-type :any}, {:name "Att2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "alfa", :arglist ({:record-type :atom} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:functor "pred", :arglist ({:record-type :any} {:record-type :atom} {:record-type :atom} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :atom} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :empty-list} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :integer}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :tuple}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Att1", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:functor "lam", :arglist ({:record-type :any} {:functor "lam", :arglist ({:record-type :any} {:functor "alfa", :arglist ({:record-type :atom} {:functor "merge", :arglist ({:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:arglist ({:functor ":", :arglist ({:record-type :any} {:functor ":", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :tuple} {:record-type :empty-list}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "app", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound}), :record-type :compound}), :record-type :compound}), :record-type :compound}, {:name "Lemma", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Att", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "N", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "_396", :record-type :var} {:record-type :any}}
{{:name "Codes", :record-type :var} {:type {:record-type :integer}, :record-type :list}, {:name "Atom", :record-type :var} {:record-type :atom}, {:name "Result", :record-type :var} {:record-type :atom}, {:name "Code", :record-type :var} {:record-type :integer}, {:name "Len", :record-type :var} {:record-type :any}}
{{:name "Atom", :record-type :var} {:record-type :any}, {:name "In", :record-type :var} {:record-type :any}, {:name "Out", :record-type :var} {:record-type :ground}, {:name "Prompt", :record-type :var} {:record-type :any}}
{{:name "FileList", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "H", :record-type :var} {:record-type :any}, {:name "OutFile", :record-type :var} {:arglist #{{:functor nil, :arglist (), :record-type :compound} {:record-type :atom} {:record-type :string}}, :record-type :one-of}, {:name "T", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :ground}}
{{:name "_408", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}}
{{:name "NiceLemma", :record-type :var} {:record-type :any}, {:name "Lemma", :record-type :var} {:arglist #{{:record-type :number} {:record-type :atom} {:functor "f", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Tab", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Roles", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N", :record-type :var} {:record-type :integer}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "L3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "L3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "L3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Value", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "Feature", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "L3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:record-type :any}, {:name "Removed", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "L3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Sem", :record-type :var} {:record-type :any}, {:name "Removed", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "L3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "L3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "L3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "L3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Tok", :record-type :var} {:arglist #{{:record-type :number} {:record-type :atom} {:functor "f", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "NiceTok", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "_408", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}}
{{:name "Tab", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Roles", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "N", :record-type :var} {:record-type :integer}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "L3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "L3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "L3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Value", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "Feature", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "NiceLemma", :record-type :var} {:record-type :any}, {:name "Lemma", :record-type :var} {:arglist #{{:record-type :number} {:record-type :atom} {:functor "f", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Tok", :record-type :var} {:arglist #{{:record-type :number} {:record-type :atom} {:functor "f", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "NiceTok", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Pred", :record-type :var} {:record-type :atom}, {:name "_534", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "T", :record-type :var} {:record-type :any}, {:name "Q", :record-type :var} {:record-type :any}}
{{:name "T", :record-type :var} {:record-type :ground}, {:name "_396", :record-type :var} {:record-type :any}}
{{:name "_440", :record-type :var} {:record-type :any}, {:name "Args", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "T", :record-type :var} {:record-type :nonvar}, {:name "Q", :record-type :var} {:record-type :any}}
{{:name "H", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Q", :record-type :var} {:record-type :any}}
{{:name "_408", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Label", :record-type :var} {:record-type :any}, {:name "NewTab", :record-type :var} {:record-type :number}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Cond", :record-type :var} {:arglist #{{:functor "duplex", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "eq", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "pred", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "not", :arglist ({:record-type :any}), :record-type :compound} {:functor "prop", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "nec", :arglist ({:record-type :any}), :record-type :compound} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "imp", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "timex", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "or", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "role", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :integer}), :record-type :compound} {:functor "pos", :arglist ({:record-type :any}), :record-type :compound} {:functor "card", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "named", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "_408", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}}
{{:name "Index", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Cond", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Index", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Cond", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Label", :record-type :var} {:record-type :any}, {:name "NewTab", :record-type :var} {:record-type :number}, {:name "Index", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Cond", :record-type :var} {:arglist #{{:functor "duplex", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "eq", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "pred", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "not", :arglist ({:record-type :any}), :record-type :compound} {:functor "prop", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "nec", :arglist ({:record-type :any}), :record-type :compound} {:functor "rel", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "imp", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "timex", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "or", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "role", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :integer}), :record-type :compound} {:functor "pos", :arglist ({:record-type :any}), :record-type :compound} {:functor "card", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor "named", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "Stream", :record-type :var} {:record-type :any}}
{}
{{:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{}
{}
{}
{}
{}
{}
{}
{{:name "A", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}}
{}
{{:name "R", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "H", :record-type :var} {:record-type :any}}
{}
{{:name "T", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "_458", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_434", :record-type :var} {:record-type :any}, {:name "_452", :record-type :var} {:record-type :any}}
{{:name "MoreOccurrences", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_398", :record-type :var} {:record-type :any}}
{{:name "Co1", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "Co2", :record-type :var} {:record-type :number}}
{{:name "_420", :record-type :var} {:record-type :any}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :any}, {:name "P", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L2", :record-type :var} {:record-type :any}, {:name "I", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_398", :record-type :var} {:record-type :any}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "I", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :any}, {:name "_868", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "Var", :record-type :var} {:record-type :any}, {:name "AccessSpec", :record-type :var} {:record-type :nonvar}}
{{:name "_420", :record-type :var} {:record-type :any}}
{{:name "Y", :record-type :var} {:record-type :any}, {:name "Ly2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Ly1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Lx2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Lx1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Lx", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "ArgX", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Ly", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "ArgY", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "_420", :record-type :var} {:record-type :any}}
{{:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:record-type :any}, {:name "_576", :record-type :var} {:record-type :any}, {:name "_582", :record-type :var} {:record-type :any}, {:name "L3", :record-type :var} {:record-type :any}, {:name "_574", :record-type :var} {:record-type :any}, {:name "T", :record-type :var} {:functor "tuple", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_578", :record-type :var} {:record-type :any}}
{{:name "L2", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "L3", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "T", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "L3", :record-type :var} {:record-type :any}, {:name "_590", :record-type :var} {:record-type :any}, {:name "_588", :record-type :var} {:record-type :any}, {:name "_586", :record-type :var} {:record-type :any}, {:name "L2", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_596", :record-type :var} {:record-type :any}, {:name "_592", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "L1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "T", :record-type :var} {:functor "tuple", :arglist ({:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound}}
{}
{{:name "E", :record-type :var} {:record-type :any}, {:name "MoreAtoms", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "More", :record-type :var} {:record-type :any}, {:name "O", :record-type :var} {:record-type :any}, {:name "NE", :record-type :var} {:record-type :any}, {:name "EN", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "Time", :record-type :var} {:record-type :any}, {:name "NEN", :record-type :var} {:record-type :any}, {:name "Event", :record-type :var} {:record-type :any}, {:name "NH", :record-type :var} {:record-type :any}}
{{:name "ABD", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "MoreAtoms", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "More", :record-type :var} {:record-type :any}, {:name "O", :record-type :var} {:record-type :any}, {:name "NE", :record-type :var} {:record-type :any}, {:name "EN", :record-type :var} {:record-type :any}, {:name "Time", :record-type :var} {:record-type :any}, {:name "NEN", :record-type :var} {:record-type :any}, {:name "Event", :record-type :var} {:record-type :any}, {:name "NH", :record-type :var} {:record-type :any}}
{{:name "ABD", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "MoreAtoms", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "More", :record-type :var} {:record-type :any}, {:name "O", :record-type :var} {:record-type :any}, {:name "EN", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "Time", :record-type :var} {:record-type :any}, {:name "NEN", :record-type :var} {:record-type :any}, {:name "Event", :record-type :var} {:record-type :any}, {:name "NH", :record-type :var} {:record-type :any}}
{{:name "ABD", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "MoreAtoms", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "More", :record-type :var} {:record-type :any}, {:name "O", :record-type :var} {:record-type :any}, {:name "NE", :record-type :var} {:record-type :any}, {:name "EN", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "Time", :record-type :var} {:record-type :any}, {:name "Event", :record-type :var} {:record-type :any}, {:name "NH", :record-type :var} {:record-type :any}}
{{:name "ABD", :record-type :var} {:record-type :any}, {:name "MoreAtoms", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "More", :record-type :var} {:record-type :any}, {:name "O", :record-type :var} {:record-type :any}, {:name "NE", :record-type :var} {:record-type :any}, {:name "EN", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "Time", :record-type :var} {:record-type :any}, {:name "NEN", :record-type :var} {:record-type :any}, {:name "Event", :record-type :var} {:record-type :any}, {:name "NH", :record-type :var} {:record-type :any}}
{{:name "ABD", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "MoreAtoms", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "More", :record-type :var} {:record-type :any}, {:name "O", :record-type :var} {:record-type :any}, {:name "NE", :record-type :var} {:record-type :any}, {:name "EN", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "Time", :record-type :var} {:record-type :any}, {:name "NEN", :record-type :var} {:record-type :any}, {:name "Event", :record-type :var} {:record-type :any}}
{{:name "ABD", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "MoreAtoms", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "More", :record-type :var} {:record-type :any}, {:name "NE", :record-type :var} {:record-type :any}, {:name "EN", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "NEN", :record-type :var} {:record-type :any}, {:name "NH", :record-type :var} {:record-type :any}, {:name "Atom", :record-type :var} {:record-type :any}}
{{:name "ABD", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "MoreAtoms", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "More", :record-type :var} {:record-type :any}, {:name "O", :record-type :var} {:record-type :any}, {:name "NE", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "Time", :record-type :var} {:record-type :any}, {:name "NEN", :record-type :var} {:record-type :any}, {:name "Event", :record-type :var} {:record-type :any}, {:name "NH", :record-type :var} {:record-type :any}}
{{:name "ABD", :record-type :var} {:record-type :any}, {:name "E", :record-type :var} {:record-type :any}, {:name "MoreAtoms", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Constraint", :record-type :var} {:functor "clp_constraint", :arglist ({:record-type :any}), :record-type :compound}, {:name "More", :record-type :var} {:record-type :any}, {:name "Constraint1", :record-type :var} {:functor "clp_constraint", :arglist ({:record-type :any}), :record-type :compound}, {:name "NE", :record-type :var} {:record-type :any}, {:name "EN", :record-type :var} {:record-type :any}, {:name "H", :record-type :var} {:record-type :any}, {:name "NEN", :record-type :var} {:record-type :any}, {:name "NH", :record-type :var} {:record-type :any}, {:name "Atom", :record-type :var} {:record-type :any}}
{}
{{:name "_396", :record-type :var} {:record-type :any}}
{{:name "Label", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "T", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "B1", :record-type :var} {:record-type :any}, {:name "A1", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "A", :record-type :var} {:record-type :any}}
{{:name "A1", :record-type :var} {:record-type :any}, {:name "A", :record-type :var} {:record-type :any}}
{{:name "FileName", :record-type :var} {:arglist #{{:functor nil, :arglist (), :record-type :compound} {:record-type :atom} {:record-type :string}}, :record-type :one-of}, {:name "ICList", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :ground}}
{{:name "ClauseList", :record-type :var} {:record-type :any}, {:name "Formula", :record-type :var} {:record-type :any}}
{{:name "URL", :record-type :var} {:record-type :atom}, {:name "URLstring", :record-type :var} {:type {:record-type :integer}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :ground}}
{{:name "_408", :record-type :var} {:record-type :any}, {:name "_410", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "_Index", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "Tab", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_398", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "X", :record-type :var} {:record-type :any}, {:name "Tab", :record-type :var} {:record-type :any}, {:name "L", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "P2", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :any}, {:name "_5402", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:record-type :any}, {:name "X", :record-type :var} {:record-type :any}, {:name "P2", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "K", :record-type :var} {:record-type :any}, {:name "_5424", :record-type :var} {:record-type :any}, {:name "_5454", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Var", :record-type :var} {:record-type :any}}
{{:name "P3", :record-type :var} {:record-type :any}, {:name "_424", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "B2", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "P2", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :any}}
{{:name "P3", :record-type :var} {:record-type :any}, {:name "B1", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "B2", :record-type :var} {:arglist #{{:functor "merge", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "alfa", :arglist ({:record-type :any} {:record-type :any} {:record-type :any}), :record-type :compound} {:functor ":", :arglist ({:record-type :any} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}), :record-type :compound} {:functor "drs", :arglist ({:type {:record-type :any}, :record-type :list} {:record-type :any}), :record-type :compound}}, :record-type :one-of}, {:name "P2", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:record-type :any}, {:name "Var", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:record-type :any}, {:name "_416", :record-type :var} {:record-type :any}, {:name "P2", :record-type :var} {:record-type :any}, {:name "P1", :record-type :var} {:record-type :any}, {:name "D", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Var", :record-type :var} {:record-type :any}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "Max", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}, {:name "E", :record-type :var} {:functor "if", :arglist ({:record-type :any} {:arglist #{{:functor "&", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "if", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :atom}}, :record-type :one-of}), :record-type :compound}, {:name "G", :record-type :var} {:functor "if", :arglist ({:record-type :any} {:arglist #{{:functor "&", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "if", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :atom}}, :record-type :one-of}), :record-type :compound}, {:name "N", :record-type :var} {:record-type :integer}, {:name "B", :record-type :var} {:record-type :any}}
{{:name "_424", :record-type :var} {:record-type :any}, {:name "_420", :record-type :var} {:record-type :any}, {:name "_422", :record-type :var} {:record-type :any}}
{{:name "_420", :record-type :var} {:record-type :any}, {:name "C", :record-type :var} {:record-type :any}, {:name "G", :record-type :var} {:functor "if", :arglist ({:record-type :any} {:arglist #{{:functor "&", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "if", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :atom}}, :record-type :one-of}), :record-type :compound}, {:name "_422", :record-type :var} {:record-type :any}}
{{:name "_420", :record-type :var} {:record-type :any}, {:name "G", :record-type :var} {:functor "if", :arglist ({:record-type :any} {:arglist #{{:functor "&", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "if", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :atom}}, :record-type :one-of}), :record-type :compound}, {:name "_422", :record-type :var} {:record-type :any}}
{{:name "_420", :record-type :var} {:record-type :any}, {:name "Max", :record-type :var} {:record-type :any}, {:name "G", :record-type :var} {:functor "if", :arglist ({:record-type :any} {:arglist #{{:functor "&", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:functor "if", :arglist ({:record-type :any} {:record-type :any}), :record-type :compound} {:record-type :atom}}, :record-type :one-of}), :record-type :compound}, {:name "N", :record-type :var} {:record-type :integer}}
{{:name "Message", :record-type :var} {:record-type :any}}
{{:name "_3974", :record-type :var} {:record-type :any}}
{{:name "OldOccurList", :record-type :var} {:record-type :any}, {:name "Functor", :record-type :var} {:record-type :any}, {:name "Fun", :record-type :var} {:record-type :any}, {:name "NewOccurList", :record-type :var} {:record-type :any}, {:name "NewArgs", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Args", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Arg", :record-type :var} {:functor nil, :arglist (), :record-type :compound}, {:name "NewArg", :record-type :var} {:record-type :nonvar}, {:name "Variables", :record-type :var} {:record-type :any}}
{{:name "OldOccurList", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "Functor", :record-type :var} {:record-type :any}, {:name "NewOccurList", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "VarName", :record-type :var} {:record-type :any}, {:name "Arg", :record-type :var} {:record-type :any}, {:name "Variables", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "_448", :record-type :var} {:record-type :any}, {:name "_446", :record-type :var} {:record-type :any}, {:name "Arg", :record-type :var} {:record-type :any}, {:name "OccurList", :record-type :var} {:record-type :any}}
{{:name "OccurList", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "OccurList", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "_394", :record-type :var} {:record-type :any}}
{{:name "OccurList", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{{:name "_472", :record-type :var} {:record-type :any}, {:name "Stuff", :record-type :var} {:record-type :any}, {:name "Closing", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "I", :record-type :var} {:record-type :any}, {:name "Der", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "I", :record-type :var} {:record-type :any}, {:name "Der", :record-type :var} {:record-type :any}, {:name "Stream", :record-type :var} {:record-type :any}}
{{:name "C", :record-type :var} {:record-type :any}, {:name "_458", :record-type :var} {:record-type :any}, {:name "G", :record-type :var} {:record-type :any}}
{}
{{:name "_406", :record-type :var} {:record-type :any}, {:name "F", :record-type :var} {:record-type :ground}}
{{:name "X", :record-type :var} {:record-type :any}}
{{:name "ARGV", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "X", :record-type :var} {:type {:record-type :any}, :record-type :list}, {:name "_530", :record-type :var} {:type {:record-type :any}, :record-type :list}}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{{:name "K", :record-type :var} {:arglist #{{:functor "//", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "^", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cosh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "ceiling", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "floor", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tanh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "tan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "rem", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "cos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:record-type :number} {:functor "cot", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan2", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "acos", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sqrt", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:value "pi", :record-type :exact} {:functor "asin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "exp", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_integer_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "truncate", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "atan", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "log", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sign", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sin", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "sinh", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "max", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "xor", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "<<", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "abs", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "coth", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "**", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "float_fractional_part", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "min", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "mod", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "+", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "/\\", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "\\/", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "-", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "*", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "div", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor ">>", :arglist ({:name "arithmetic_expression", :record-type :user-defined} {:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound} {:functor "round", :arglist ({:name "arithmetic_expression", :record-type :user-defined}), :record-type :compound}}, :record-type :one-of}}
